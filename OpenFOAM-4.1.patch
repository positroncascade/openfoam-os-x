 .gitignore                                         |   1 +
 Allwmake                                           |   6 +-
 applications/Allwmake                              |   3 +-
 .../mesh/generation/snappyHexMesh/Make/options     |   1 -
 .../mesh/manipulation/renumberMesh/Allwmake        |  13 +-
 .../mesh/manipulation/renumberMesh/Make/options    |   1 -
 .../postProcessing/graphics/PV3Readers/Allwmake    |   3 +
 .../postProcessing/graphics/PVReaders/Allwmake     |   7 +-
 bin/foamInstallationTest                           |  21 +++-
 bin/foamJob                                        |   6 +
 bin/foamMonitor                                    |  11 +-
 bin/paraFoam                                       |   5 +
 bin/tools/RunFunctions                             |  22 +++-
 etc/bashrc                                         | 100 ++++++++++++---
 etc/config.sh/mac/CGAL                             |  69 +++++++++++
 etc/config.sh/mac/functions                        | 133 ++++++++++++++++++++
 etc/config.sh/mac/metis                            |  44 +++++++
 etc/config.sh/mac/paraview                         |  16 +++
 etc/config.sh/mac/scotch                           |  47 +++++++
 etc/config.sh/mpi                                  |   6 +-
 etc/config.sh/settings                             |  16 ++-
 src/Allwmake                                       |   3 +-
 src/OSspecific/POSIX/POSIX.C                       |  36 ++++++
 src/OSspecific/POSIX/clockTime/clockTime.H         |   3 +
 src/OSspecific/POSIX/printStack.C                  |  72 +++++++++--
 src/OSspecific/POSIX/signals/sigFpe.C              |  92 +++++++++++++-
 src/OSspecific/POSIX/signals/sigFpe.H              |  14 ++-
 src/OpenFOAM/Make/files                            |   6 +
 src/OpenFOAM/db/IOobject/IOobject.H                |   3 +-
 src/OpenFOAM/db/IOobject/IOobjectI.H               |  17 ++-
 src/OpenFOAM/db/IOobject/IOobjectWriteHeader.C     |   1 +
 src/OpenFOAM/db/IOstreams/IOstreams.H              |   4 +
 .../db/dynamicLibrary/dynamicCode/dynamicCode.C    |   4 +
 .../db/dynamicLibrary/dynamicCode/dynamicCode.H    |   4 +
 src/OpenFOAM/fields/Fields/Field/FieldMapper.H     |   2 +-
 src/OpenFOAM/primitives/Scalar/doubleFloat.H       |  15 +++
 src/OpenFOAM/primitives/ints/int/int.H             |   8 ++
 src/OpenFOAM/primitives/ints/long/long.C           |  50 ++++++++
 src/OpenFOAM/primitives/ints/long/long.H           | 138 +++++++++++++++++++++
 src/OpenFOAM/primitives/ints/long/longIO.C         | 104 ++++++++++++++++
 src/OpenFOAM/primitives/ints/ulong/ulong.C         |  52 ++++++++
 src/OpenFOAM/primitives/ints/ulong/ulong.H         | 138 +++++++++++++++++++++
 src/OpenFOAM/primitives/ints/ulong/ulongIO.C       | 101 +++++++++++++++
 .../primitives/ranges/labelRange/labelRangeI.H     |   4 +-
 .../primitives/ranges/labelRange/labelRangesI.H    |   4 +-
 src/conversion/ensight/part/ensightPartCells.C     |   4 +-
 src/fvAgglomerationMethods/Allwmake                |   9 +-
 .../MGridGenGamgAgglomeration/Make/options         |  16 ++-
 .../edgeFaceCirculator/edgeFaceCirculator.C        |   2 +-
 src/parallel/decompose/Allwmake                    |   4 +-
 src/parallel/decompose/metisDecomp/Allwmake        |  10 +-
 src/parallel/decompose/metisDecomp/Make/options    |   1 -
 src/parallel/decompose/metisDecomp/metisDecomp.C   |   6 +-
 src/parallel/decompose/ptscotchDecomp/Make/options |  10 +-
 src/parallel/decompose/scotchDecomp/Make/options   |   8 +-
 src/renumber/Allwmake                              |  12 +-
 src/renumber/SloanRenumber/Make/options            |  15 ++-
 wmake/makefiles/apps                               |   3 +-
 wmake/makefiles/files                              |  12 +-
 wmake/makefiles/general                            |  43 ++++---
 wmake/rules/General/CGAL                           |   9 +-
 wmake/rules/General/X                              |   2 +
 wmake/rules/General/bison                          |  16 ++-
 wmake/rules/General/btyacc                         |  11 +-
 wmake/rules/General/btyacc++                       |   4 +-
 wmake/rules/General/byacc                          |  11 +-
 wmake/rules/General/flex                           |   8 +-
 wmake/rules/General/flex++                         |   8 +-
 wmake/rules/General/general                        |  30 +++--
 wmake/rules/General/moc                            |   8 +-
 wmake/rules/General/mplib                          |   2 +
 wmake/rules/General/mplibMPICH                     |   2 +
 wmake/rules/General/mplibMPICH-GM                  |   2 +
 wmake/rules/General/mplibOPENMPI                   |   1 +
 wmake/rules/General/mplibQSMPI                     |   2 +
 wmake/rules/General/mplibSGIMPI                    |   2 +
 wmake/rules/General/mplibSYSTEMMPI                 |   2 +
 wmake/rules/General/mplibSYSTEMOPENMPI             |   2 +
 wmake/rules/General/standard                       |   2 +-
 wmake/rules/General/transform                      |   6 +-
 wmake/rules/General/version                        |  12 +-
 wmake/rules/General/yacc                           |  20 ++-
 wmake/rules/darwin64Clang/c                        |  23 ++++
 wmake/rules/darwin64Clang/c++                      |  35 ++++++
 wmake/rules/darwin64Clang/c++Debug                 |   4 +
 wmake/rules/darwin64Clang/c++Opt                   |   5 +
 wmake/rules/darwin64Clang/c++Prof                  |   4 +
 wmake/rules/darwin64Clang/cDebug                   |   4 +
 wmake/rules/darwin64Clang/cOpt                     |   4 +
 wmake/rules/darwin64Clang/cProf                    |   4 +
 wmake/rules/darwin64Clang/general                  |  12 ++
 wmake/rules/linux64Clang/c                         |   2 +
 wmake/rules/linux64Clang/c++                       |   2 +
 wmake/rules/linux64Clang/c++Debug                  |   2 +
 wmake/rules/linux64Clang/c++Opt                    |   2 +
 wmake/rules/linux64Clang/c++Prof                   |   2 +
 wmake/rules/linux64Clang/cDebug                    |   2 +
 wmake/rules/linux64Clang/cOpt                      |   2 +
 wmake/rules/linux64Clang/cProf                     |   2 +
 wmake/rules/linux64Clang/general                   |   2 +
 wmake/rules/linux64Clang/mplibHPMPI                |   2 +
 wmake/rules/linux64Clang/mplibINTELMPI             |   2 +
 wmake/rules/linux64Gcc/c                           |   2 +
 wmake/rules/linux64Gcc/c++                         |   2 +
 wmake/rules/linux64Gcc/c++Debug                    |   2 +
 wmake/rules/linux64Gcc/c++Opt                      |   2 +
 wmake/rules/linux64Gcc/c++Prof                     |   2 +
 wmake/rules/linux64Gcc/cDebug                      |   2 +
 wmake/rules/linux64Gcc/cOpt                        |   2 +
 wmake/rules/linux64Gcc/cProf                       |   2 +
 wmake/rules/linux64Gcc/general                     |   2 +
 wmake/rules/linux64Gcc/mplibHPMPI                  |   2 +
 wmake/rules/linux64Gcc/mplibINTELMPI               |   2 +
 wmake/scripts/AllwmakeParseArguments               |   3 +
 wmake/scripts/wmakeFunctions                       |   2 +-
 wmake/src/Makefile                                 |  14 ++-
 wmake/src/wmkdep.l                                 |  14 ++-
 wmake/wclean                                       |   6 +-
 wmake/wmake                                        |  25 ++--
 wmake/wmakeLnInclude                               |   7 +-
 wmake/wmakeLnIncludeAll                            |   2 +-
 wmake/wrmdep                                       |   2 +-
 122 files changed, 1762 insertions(+), 175 deletions(-)

diff --git a/.gitignore b/.gitignore
index a897b81..8f59031 100644
--- a/.gitignore
+++ b/.gitignore
@@ -37,6 +37,7 @@ linux*Gcc*/
 linux*Icc*/
 solaris*Gcc*/
 SunOS*Gcc*/
+darwin*Clang*/
 platforms/
 
 # Reinstate wmake/rules that might look like build directories
diff --git a/Allwmake b/Allwmake
index cf49e40..7d397ae 100755
--- a/Allwmake
+++ b/Allwmake
@@ -13,11 +13,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 # Compile wmake support applications
 (cd wmake/src && make)
@@ -27,7 +28,8 @@ if [ -d "$WM_THIRD_PARTY_DIR" ]
 then
     $WM_THIRD_PARTY_DIR/Allwmake
 else
-    echo "Allwmake: no ThirdParty directory found - skipping"
+	[ "$(uname -s)" = "Darwin" ] \
+		|| echo "Allwmake: no ThirdParty directory found - skipping"
 fi
 
 # Compile OpenFOAM libraries and applications
diff --git a/applications/Allwmake b/applications/Allwmake
index 23c5ebb..50709b0 100755
--- a/applications/Allwmake
+++ b/applications/Allwmake
@@ -12,11 +12,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR/applications" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 set -x
 
diff --git a/applications/utilities/mesh/generation/snappyHexMesh/Make/options b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
index fb480c5..ce48c51 100644
--- a/applications/utilities/mesh/generation/snappyHexMesh/Make/options
+++ b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -g -DFULLDEBUG -O0 */ \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/mesh/snappyHexMesh/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Allwmake b/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
index 34b8b78..29e0f50 100755
--- a/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Allwmake
@@ -3,24 +3,29 @@ cd ${0%/*} || exit 1    # Run from this directory
 
 # Parse arguments for compilation (at least for error catching)
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
+_soExt=so
+[ "$(uname -s)" = "Darwin" ] && _soExt=dylib
+
 set -x
 
 export COMPILE_FLAGS=''
 export LINK_FLAGS=''
 
-if [ -f "${FOAM_LIBBIN}/libSloanRenumber.so" ]
+if [ -f "${FOAM_LIBBIN}/libSloanRenumber.$_soExt" ]
 then
-    echo "Found libSloanRenumber.so  --  enabling Sloan renumbering support."
+    echo "Found libSloanRenumber.$_soExt  --  enabling Sloan renumbering support."
     export LINK_FLAGS="${LINK_FLAGS} -lSloanRenumber"
 fi
 
-if [ -f "${ZOLTAN_ARCH_PATH}/lib/libzoltan.a" -a -f "${FOAM_LIBBIN}/libzoltanRenumber.so" ]
+if [ -f "${ZOLTAN_ARCH_PATH}/lib/libzoltan.a" -a -f "${FOAM_LIBBIN}/libzoltanRenumber.$_soExt" ]
 then
-    echo "Found libzoltanRenumber.so  --  enabling zoltan renumbering support."
+    echo "Found libzoltanRenumber.$_soExt  --  enabling zoltan renumbering support."
     export COMPILE_FLAGS="-DFOAM_USE_ZOLTAN"
     export LINK_FLAGS="${LINK_FLAGS} -lzoltanRenumber -L${ZOLTAN_ARCH_PATH}/lib -lzoltan"
 fi
 
+unset _soExt
+
 wmake
 
 #------------------------------------------------------------------------------
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Make/options b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
index 49a1c3d..882d1e4 100644
--- a/applications/utilities/mesh/manipulation/renumberMesh/Make/options
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     ${COMPILE_FLAGS} \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/dynamicMesh/lnInclude \
diff --git a/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake b/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
index 049c1bf..4ad9bdc 100755
--- a/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
+++ b/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
@@ -6,6 +6,9 @@ targetType=libso
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 #set -x
 
+# Skip on OS X
+[ "$(uname -s)" = "Darwin" ] && exit 0
+
 case "$ParaView_VERSION" in
 3*)
     if [ -d "$ParaView_DIR" -a -r "$ParaView_DIR" ]
diff --git a/applications/utilities/postProcessing/graphics/PVReaders/Allwmake b/applications/utilities/postProcessing/graphics/PVReaders/Allwmake
index edaa31a..96728b2 100755
--- a/applications/utilities/postProcessing/graphics/PVReaders/Allwmake
+++ b/applications/utilities/postProcessing/graphics/PVReaders/Allwmake
@@ -26,7 +26,12 @@ case "$ParaView_VERSION" in
     fi
     ;;
 *)
-    echo "WARN: PV readers not building: ParaView_VERSION=$ParaView_VERSION"
+    if [ "$(uname -s)" = "Darwin" ]
+    then
+        echo "INFO: Skipping PV readers."
+    else
+        echo "WARN: PV readers not building: ParaView_VERSION=$ParaView_VERSION"
+    fi
     ;;
 esac
 
diff --git a/bin/foamInstallationTest b/bin/foamInstallationTest
index 17b285a..f11e61e 100755
--- a/bin/foamInstallationTest
+++ b/bin/foamInstallationTest
@@ -306,13 +306,23 @@ reportExecutable()
         VERSION=`$APP_PATH --version | head -1`
         ;;
     tar)
-        VERSION=`$APP_PATH --version | head -1 | cut -d" " -f4`
-        ;;
+		case "$OSTYPE" in
+		Darwin)
+			VERSION=`$APP_PATH --version | head -1 | cut -d" " -f2`
+			;;
+		*)
+			VERSION=`$APP_PATH --version | head -1 | cut -d" " -f4`
+			;;
+		esac
+		;;
     gzip)
         case "$OSTYPE" in
         SunOS)
             VERSION=`$1 --version 2>&1 | grep gzip | cut -d" " -f2`
             ;;
+		Darwin)
+            VERSION=`$1 --version 2>&1`
+			;;
         *)
             VERSION=`$1 --version | head -1 | cut -d" " -f2`
             ;;
@@ -341,6 +351,7 @@ reportExecutable()
 checkOpenFOAMEnvironment()
 {
     [ -d "$WM_PROJECT_INST_DIR" ] && [ -d "$WM_THIRD_PARTY_DIR" ] || {
+		[ "$(uname -s)" = "Darwin" ] && return 0
         echo ""
         echo "FATAL ERROR: OpenFOAM environment not configured."
         echo ""
@@ -388,7 +399,7 @@ checkHostName()
 checkOS()
 {
     case "$OSTYPE" in
-    Linux | LinuxAMD64 | SunOS )
+    Linux | LinuxAMD64 | SunOS | Darwin )
         echo "`fixlen OS: $WIDTH` $OSTYPE version $(uname -r)"
         ;;
     *)
@@ -429,7 +440,7 @@ echo "$COL1 $COL2 $COL3      $COL5"
 hline
 reportEnv '$WM_PROJECT_INST_DIR' 'noPath' "yes"
 reportEnv '$WM_PROJECT_USER_DIR' 'noPath' "no"
-reportEnv '$WM_THIRD_PARTY_DIR'  'noPath' "yes"
+[ "$(uname -s)" = "Darwin" ] || reportEnv '$WM_THIRD_PARTY_DIR'  'noPath' "yes"
 hline
 
 #------------------------------------------------------------------------------
@@ -468,7 +479,7 @@ reportExecutable flex
 reportExecutable "$WM_CC"
 reportExecutable "$WM_CXX"
 reportExecutable gzip
-if [ "$OSTYPE" = Linux ]
+if [ "$OSTYPE" = Linux -o "$OSTYPE" = "Darwin" ]
 then
     reportExecutable tar
 else
diff --git a/bin/foamJob b/bin/foamJob
index 6646e5d..e24728f 100755
--- a/bin/foamJob
+++ b/bin/foamJob
@@ -277,6 +277,12 @@ then
     fi
 
 else
+    # Check if we are on El Capitan
+    if test "$(uname -s)" = "Darwin" && \
+        { test "$(uname -r | cut -d. -f1)" -gt 15; }
+    then
+        APPLICATION="foamExec $APPLICATION"
+    fi
     #
     # Run (on single processor)
     #
diff --git a/bin/foamMonitor b/bin/foamMonitor
index 8ae1985..b7b8d1e 100755
--- a/bin/foamMonitor
+++ b/bin/foamMonitor
@@ -57,7 +57,12 @@ USAGE
 
 plotFileHeader() {
     cat<<EOF
-set term x11 1 font "helvetica,17" linewidth 1.5 persist noraise
+if (strstrt(GPVAL_TERMINALS, 'wxt')) {
+    selected_terminal = 'wxt'
+} else {
+    selected_terminal = 'x11'
+}
+set term selected_terminal 1 font "helvetica,17" linewidth 1.5 persist noraise
 $LOGSCALE
 $YRANGE
 set title "Data Monitoring"
@@ -82,6 +87,8 @@ LOGSCALE=""
 YRANGE=""
 GNUPLOT=$(which gnuplot)
 ! [ "x$GNUPLOT" = "x" ] || usage "Gnuplot not installed"
+STAT="stat --format=%Y"
+[ "$(uname -s)" = "Darwin" ] && STAT="stat -f %m"
 
 # parse options
 while [ "$#" -gt 0 ]
@@ -169,7 +176,7 @@ PID=$!
 
 while true
 do
-    MODTIME=$(stat --format=%Y $FILE)
+    MODTIME=$($STAT $FILE)
     IDLEAGO=$(expr $(date +%s) - $IDLE)
     test "$MODTIME" -gt "$IDLEAGO" || break
     sleep $REFRESH
diff --git a/bin/paraFoam b/bin/paraFoam
index 84b82ec..e965e69 100755
--- a/bin/paraFoam
+++ b/bin/paraFoam
@@ -72,6 +72,11 @@ extension=OpenFOAM
 
 requirePV=1
 
+[ "$(uname -s)" = "Darwin" ] && {
+extension=foam
+requirePV=0
+}
+
 # Parse options
 while [ "$#" -gt 0 ]
 do
diff --git a/bin/tools/RunFunctions b/bin/tools/RunFunctions
index ed101f9..769ee94 100644
--- a/bin/tools/RunFunctions
+++ b/bin/tools/RunFunctions
@@ -28,6 +28,18 @@
 #     Miscellaneous functions for running tutorial cases
 #------------------------------------------------------------------------------
 
+isSIPEnabled()
+{
+    $(which -s csrutil) && {
+    [ $(csrutil status | awk '{print $5}' | tr -d ".") = "enabled" ] \
+        && return 0
+    }
+    return 1
+}
+
+# Workaround for cleared DYLD_LIBRARY_PATH
+[ "$(uname -s)" = "Darwin" ] && [ isSIPEnabled ] && . $WM_PROJECT_DIR/etc/bashrc
+
 isTest()
 {
     for i in "$@"; do
@@ -46,7 +58,9 @@ getNumberOfProcessors()
 
 getApplication()
 {
-    sed -ne 's/^ *application\s*\([a-zA-Z]*\)\s*;.*$/\1/p' system/controlDict
+    grep application system/controlDict \
+        | awk '{print $2}' \
+        | tr -d ";"
 }
 
 runApplication()
@@ -64,7 +78,7 @@ runApplication()
                 LOG_IGNORE=true
                 LOG_APPEND=true
                 ;;
-            -overwrite|-o)
+            -overwrite|-o|-f)
                 LOG_IGNORE=true
                 ;;
             -suffix|-s)
@@ -111,7 +125,7 @@ runParallel()
                 LOG_IGNORE=true
                 LOG_APPEND=true
                 ;;
-            -overwrite|-o)
+            -overwrite|-o|-f)
                 LOG_IGNORE=true
                 ;;
             -suffix|-s)
@@ -168,4 +182,4 @@ cloneCase()
     fi
 }
 
-#------------------------------------------------------------------------------
+# vim: set ft=sh et sw=4 ts=4 sts=4:
diff --git a/etc/bashrc b/etc/bashrc
index 7437e73..fb639ae 100644
--- a/etc/bashrc
+++ b/etc/bashrc
@@ -42,9 +42,20 @@ export WM_PROJECT_VERSION=4.1
 #
 # Please set to the appropriate path if the default is not correct.
 #
-[ $BASH_SOURCE ] && \
-export FOAM_INST_DIR=$(cd ${BASH_SOURCE%/*/*/*} && pwd -P) || \
-export FOAM_INST_DIR=$HOME/$WM_PROJECT
+if [ $BASH_SOURCE ]
+then
+    case $BASH_SOURCE in
+    /*)
+        export FOAM_INST_DIR=${BASH_SOURCE%/*/*/*}
+        ;;
+    *)
+        location=$PWD/$BASH_SOURCE
+        export FOAM_INST_DIR=${location%/*/*/*}
+        unset location
+    esac
+else
+    export FOAM_INST_DIR=$HOME/$WM_PROJECT
+fi
 # export FOAM_INST_DIR=~$WM_PROJECT
 # export FOAM_INST_DIR=/opt/$WM_PROJECT
 # export FOAM_INST_DIR=/usr/local/$WM_PROJECT
@@ -116,9 +127,22 @@ foamOldDirs="$WM_PROJECT_DIR $WM_THIRD_PARTY_DIR \
 export WM_PROJECT_INST_DIR=$FOAM_INST_DIR
 export WM_PROJECT_DIR=$WM_PROJECT_INST_DIR/$WM_PROJECT-$WM_PROJECT_VERSION
 
+# Check if we are building OpenFOAM on OS X
+_foamOnOSX ()
+{
+    # For portability we do not rely on $?
+    if [ "$(uname -s)" = "Darwin" ]
+    then
+        return 0
+    else
+        return 1
+    fi
+}
+
 # Location of third-party software
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
+_foamOnOSX || \
+	export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
 
 # Location of site-specific templates etc
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -138,6 +162,9 @@ export WM_PROJECT_USER_DIR=$HOME/$WM_PROJECT/$USER-$WM_PROJECT_VERSION
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 . $WM_PROJECT_DIR/etc/config.sh/functions
 
+# Additional function for OS X
+_foamOnOSX && . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
 # Add in preset user or site preferences:
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile prefs.sh`
 
@@ -151,17 +178,30 @@ _foamEval $@
 foamClean=$WM_PROJECT_DIR/bin/foamCleanPath
 
 #- Clean PATH
-cleaned=`$foamClean "$PATH" "$foamOldDirs"` && PATH="$cleaned"
+cleaned=$($foamClean "$PATH" "$foamOldDirs") && PATH="$cleaned"
 
-#- Clean LD_LIBRARY_PATH
-cleaned=`$foamClean "$LD_LIBRARY_PATH" "$foamOldDirs"` \
-    && LD_LIBRARY_PATH="$cleaned"
+if _foamOnOSX
+then
+    #- Clean DYLD_LIBRARY_PATH
+	cleaned=$($foamClean "$DYLD_LIBRARY_PATH" "$foamOldDirs") \
+		&& DYLD_LIBRARY_PATH="$cleaned"
+else
+    #- Clean LD_LIBRARY_PATH
+    cleaned=$($foamClean "$LD_LIBRARY_PATH" "$foamOldDirs") \
+        && LD_LIBRARY_PATH="$cleaned"
+fi
 
 #- Clean MANPATH
-cleaned=`$foamClean "$MANPATH" "$foamOldDirs"` && MANPATH="$cleaned"
+cleaned=$($foamClean "$MANPATH" "$foamOldDirs") && MANPATH="$cleaned"
 
-export PATH LD_LIBRARY_PATH MANPATH
+export PATH MANPATH
 
+if _foamOnOSX
+then
+    export DYLD_LIBRARY_PATH
+else
+    export LD_LIBRARY_PATH
+fi
 
 # Source project setup files
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -172,13 +212,24 @@ _foamSource $WM_PROJECT_DIR/etc/config.sh/aliases
 # Source user setup files for optional packages
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/mpi`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/paraview`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/ensight`
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/gperftools`
+if _foamOnOSX
+then
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/mac/paraview`
+else
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/paraview`
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/ensight`
+    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/gperftools`
+fi
+
 
 if [ ! -z "$FOAMY_HEX_MESH" ]
 then
-    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/CGAL`
+    if _foamOnOSX
+    then
+        _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/mac/CGAL`
+    else
+        _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config.sh/CGAL`
+    fi
 fi
 
 
@@ -187,13 +238,26 @@ fi
 #- Clean PATH
 cleaned=`$foamClean "$PATH"` && PATH="$cleaned"
 
-#- Clean LD_LIBRARY_PATH
-cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
+if _foamOnOSX
+then
+    #- Clean DYLD_LIBRARY_PATH
+    cleaned=`$foamClean "$DYLD_LIBRARY_PATH"` && DYLD_LIBRARY_PATH="$cleaned"
+else
+    #- Clean LD_LIBRARY_PATH
+    cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
+fi
 
 #- Clean MANPATH (trailing ':' to find system pages)
 cleaned=`$foamClean "$MANPATH"`: && MANPATH="$cleaned"
 
-export PATH LD_LIBRARY_PATH MANPATH
+export PATH MANPATH
+
+if _foamOnOSX
+then
+    export DYLD_LIBRARY_PATH
+else
+    export LD_LIBRARY_PATH
+fi
 
 #- Clean LD_PRELOAD
 if [ -n "$LD_PRELOAD" ]
@@ -212,4 +276,6 @@ unset cleaned foamClean foamOldDirs
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 . $WM_PROJECT_DIR/etc/config.sh/functions
 
+_foamOnOSX && . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
 #------------------------------------------------------------------------------
diff --git a/etc/config.sh/mac/CGAL b/etc/config.sh/mac/CGAL
new file mode 100644
index 0000000..3e53043
--- /dev/null
+++ b/etc/config.sh/mac/CGAL
@@ -0,0 +1,69 @@
+# CGAL configuration for OS X
+
+if [ -n "$SOURCE_CGAL_VERSIONS_ONLY" ]
+then
+    . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+    if [ "x$(_foamBrew)" = "xY" ]
+    then
+        _prefix=$(_foamBrewPrefix)
+        boost_version="boost-$(_foamGetPackageVersion boost)"
+        export BOOST_ARCH_PATH="$_prefix/opt/boost"
+        unset _prefix
+    elif [ "x$(_foamPort)" = "xY" ]
+    then
+        _prefix=$(_foamPortPrefix)
+        boost_version=$(_foamGetPackageVersion boost)
+        export BOOST_ARCH_PATH="$_prefix"
+        unset _prefix
+    else
+        boost_version=boost-unknown
+        export BOOST_ARCH_PATH=/usr/local
+    fi
+    unset boost_version
+    . $WM_PROJECT_DIR/etc/config.sh/mac/functions
+else
+    if [ "x$(_foamBrew)" = "xY" ]
+    then
+        _prefix=$(_foamBrewPrefix)
+
+        boost_version="boost-$(_foamGetPackageVersion boost)"
+        cgal_version="CGAL-$(_foamGetPackageVersion cgal)"
+
+        export BOOST_ARCH_PATH="$_prefix/opt/boost"
+        export CGAL_ARCH_PATH="$_prefix/opt/cgal"
+        export GMP_ARCH_PATH="$_prefix/opt/gmp"
+        export MPFR_ARCH_PATH="$_prefix/opt/mpfr"
+
+        unset _prefix
+    elif [ "x$(_foamPort)" = "xY" ]
+    then
+        _prefix=$(_foamPortPrefix)
+
+        boost_version=$(_foamGetPackageVersion boost)
+        cgal_version=$(_foamGetPackageVersion cgal)
+
+        export BOOST_ARCH_PATH="$_prefix"
+        export CGAL_ARCH_PATH="$_prefix"
+        export GMP_ARCH_PATH="$_prefix"
+        export MPFR_ARCH_PATH="$_prefix"
+
+        unset _prefix
+    else
+        boost_version=boost-unknown
+        cgal_version=CGAL-unknown
+
+        export BOOST_ARCH_PATH=/usr/local
+        export CGAL_ARCH_PATH=/usr/local
+    fi
+
+    if [ "$FOAM_VERBOSE" -a "$PS1" ]
+    then
+        echo "Using CGAL and boost" 1>&2
+        echo "    $cgal_version at $CGAL_ARCH_PATH" 1>&2
+        echo "    $boost_version at $BOOST_ARCH_PATH" 1>&2
+    fi
+    unset boost_version cgal_version
+fi
+
+
+# vim: set ft=sh:
diff --git a/etc/config.sh/mac/functions b/etc/config.sh/mac/functions
new file mode 100644
index 0000000..ba089e6
--- /dev/null
+++ b/etc/config.sh/mac/functions
@@ -0,0 +1,133 @@
+# Additional functions for OS X
+
+if [ -z "$WM_BASH_FUNCTIONS_MAC" ]
+then
+    WM_BASH_FUNCTIONS_MAC=loaded
+
+    # Prefix to DYLD_LIBRARY_PATH
+    _foamAddLib ()
+    {
+        while [ $# -ge 1 ]
+        do
+            export DYLD_LIBRARY_PATH=$1:$DYLD_LIBRARY_PATH
+            shift
+        done
+    }
+
+    _foamBrew ()
+    {
+        if $(which -s brew)
+        then
+            echo Y
+            return 0
+        else
+            echo N
+            return 1
+        fi
+    }
+
+    _foamPort ()
+    {
+        if $(which -s port)
+        then
+            echo Y
+            return 0
+        else
+            echo N
+            return 1
+        fi
+    }
+
+    _foamPortPrefix ()
+    {
+        echo "$(dirname $(dirname $(which port)))"
+    }
+
+    _foamBrewPrefix ()
+    {
+        echo $(brew --prefix)
+    }
+
+    _foamGetPackageVersion ()
+    {
+        local version="?"
+        local ret=0
+        local pkg="$1"
+
+        if [ "x$(_foamBrew)" = "xY" ]
+        then
+            local prefix="$(_foamBrewPrefix)"
+            if [ -d "$prefix/opt/$pkg" -a "$WM_LABEL_SIZE" -ne 64 ]
+            then
+                version="$(basename $(readlink "$prefix/opt/$pkg"))"
+            elif [ -d "$prefix/opt/${pkg}64" -a "$WM_LABEL_SIZE" -eq 64 ]
+            then
+                version="$(basename $(readlink "$prefix/opt/${pkg}64"))"
+            else
+                ret=1
+            fi
+        elif [ "x$(_foamPort)" = "xY" ]
+        then
+            version="0.0.x"
+        else
+            ret=1
+        fi
+        echo $version
+        return $ret
+    }
+
+    _foamGetPackageArchPath ()
+    {
+        local arch_path="/usr/local"
+        local ret=0
+        local pkg="$1"
+        if [ "x$(_foamBrew)" = "xY" ]
+        then
+            local prefix="$(_foamBrewPrefix)"
+            if [ -d "$prefix/opt/$pkg" -a "$WM_LABEL_SIZE" -ne 64 ]
+            then
+                arch_path="$prefix/opt/$pkg"
+            elif [ -d "$prefix/opt/${pkg}64" -a "$WM_LABEL_SIZE" -eq 64 ]
+            then
+                arch_path="$prefix/opt/${pkg}64"
+            else
+                ret=1
+            fi
+        elif [ "x$(_foamPort)" = "xY" ]
+        then
+            arch_path="$(_foamPortPrefix)"
+        else
+            ret=1
+        fi
+        echo $arch_path
+        return $ret
+    }
+
+    _foamIncreaseMaxOpenFiles ()
+    {
+        # Default value
+        local lim=4096
+
+        # Reset if parameter passed
+        [ -n "$1" ] && lim="$1"
+
+        # Silencing the errors
+        local current_limit=$(ulimit -n)
+        if [ "$current_limit" = "unlimited" ]
+        then
+            return 0
+        elif [ "$current_limit" -lt "$lim" ]
+        then
+            ulimit -n "$lim" > /dev/null 2>&1
+            return 0
+        fi
+        return 0
+    }
+else
+    unset WM_BASH_FUNCTIONS_MAC
+    unset _foamAddLib _foamBrew _foamPort _foamPortPrefix _foamBrewPrefix \
+        _foamGetPackageVersion _foamGetPackageArchPath \
+        _foamIncreaseMaxOpenFiles
+fi
+
+# vim: set ft=sh:
diff --git a/etc/config.sh/mac/metis b/etc/config.sh/mac/metis
new file mode 100644
index 0000000..bb87346
--- /dev/null
+++ b/etc/config.sh/mac/metis
@@ -0,0 +1,44 @@
+#----------------------------------*-sh-*--------------------------------------
+# =========                 |
+# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+#  \\    /   O peration     |
+#   \\  /    A nd           | Copyright (C) 2013-2016 OpenFOAM Foundation
+#    \\/     M anipulation  |
+#------------------------------------------------------------------------------
+# License
+#     This file is part of OpenFOAM.
+#
+#     OpenFOAM is free software: you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by
+#     the Free Software Foundation, either version 3 of the License, or
+#     (at your option) any later version.
+#
+#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+#     for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+#
+# File
+#     etc/config.sh/metis
+#
+# Description
+#     Setup file for metis include/libraries.
+#     Sourced during wmake process only.
+#
+# Note
+#     A csh version is not needed, since the values here are only sourced
+#     during the wmake process
+#
+#------------------------------------------------------------------------------
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+export METIS_VERSION=$(_foamGetPackageVersion metis)
+export METIS_ARCH_PATH=$(_foamGetPackageArchPath metis)
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+#------------------------------------------------------------------------------
diff --git a/etc/config.sh/mac/paraview b/etc/config.sh/mac/paraview
new file mode 100644
index 0000000..edfaa63
--- /dev/null
+++ b/etc/config.sh/mac/paraview
@@ -0,0 +1,16 @@
+if [ -d /Applications/[Pp][Aa][Rr][Aa][Vv][Ii][Ee][Ww]*.app ];
+then
+    [ "$FOAM_VERBOSE" -a "$PS1" ] && echo Using /Applications/[Pp][Aa][Rr][Aa][Vv][Ii][Ee][Ww]*.app
+
+    paraview () {
+        /Applications/[Pp][Aa][Rr][Aa][Vv][Ii][Ee][Ww]*.app/Contents/MacOS/paraview "$@"
+    }
+
+    export -f paraview
+else
+    echo
+    echo "Please download binary Paraview release from"
+    echo "http://paraview.org and install it in /Applications"
+    echo "folder."
+    echo
+fi
diff --git a/etc/config.sh/mac/scotch b/etc/config.sh/mac/scotch
new file mode 100644
index 0000000..e62931c
--- /dev/null
+++ b/etc/config.sh/mac/scotch
@@ -0,0 +1,47 @@
+#----------------------------------*-sh-*--------------------------------------
+# =========                 |
+# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+#  \\    /   O peration     |
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
+#    \\/     M anipulation  |
+#------------------------------------------------------------------------------
+# License
+#     This file is part of OpenFOAM.
+#
+#     OpenFOAM is free software: you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by
+#     the Free Software Foundation, either version 3 of the License, or
+#     (at your option) any later version.
+#
+#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+#     for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+#
+# File
+#     etc/config.sh/scotch
+#
+# Description
+#     Setup file for scotch include/libraries.
+#     Sourced during wmake process only.
+#
+# Note
+#     A csh version is not needed, since the values here are only sourced
+#     during the wmake process
+#
+#     If Scotch is to be entirely disabled, either rename this file or create
+#     an empty one with the same name at a user or site location.
+#
+#------------------------------------------------------------------------------
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+export SCOTCH_VERSION=$(_foamGetPackageVersion scotch)
+export SCOTCH_ARCH_PATH=$(_foamGetPackageArchPath scotch)
+
+. $WM_PROJECT_DIR/etc/config.sh/mac/functions
+
+#------------------------------------------------------------------------------
diff --git a/etc/config.sh/mpi b/etc/config.sh/mpi
index 8c679f6..6f4ce02 100644
--- a/etc/config.sh/mpi
+++ b/etc/config.sh/mpi
@@ -49,7 +49,7 @@ SYSTEMOPENMPI)
     # include files and libraries.
     export MPI_ARCH_PATH="${libDir%/*}"
 
-    _foamAddLib     $libDir
+    _foamOnOSX || _foamAddLib     $libDir
     unset libDir
     ;;
 
@@ -66,8 +66,8 @@ OPENMPI)
     _foamAddPath    $MPI_ARCH_PATH/bin
 
     # 64-bit on OpenSuSE 12.1 uses lib64 others use lib
-    _foamAddLib     $MPI_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH
-    _foamAddLib     $MPI_ARCH_PATH/lib
+    _foamOnOSX || _foamAddLib     $MPI_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH
+    _foamOnOSX || _foamAddLib     $MPI_ARCH_PATH/lib
 
     _foamAddMan     $MPI_ARCH_PATH/share/man
     ;;
diff --git a/etc/config.sh/settings b/etc/config.sh/settings
index 438a325..760e990 100644
--- a/etc/config.sh/settings
+++ b/etc/config.sh/settings
@@ -121,6 +121,13 @@ SunOS)
     export WM_LDFLAGS='-mabi=64 -G0'
     ;;
 
+Darwin)
+    WM_ARCH=darwin64
+    export WM_COMPILER_LIB_ARCH=64
+    export WM_CC='clang'
+    export WM_CXX='clang++'
+    ;;
+
 *)    # An unsupported operating system
     /bin/cat <<USAGE 1>&2
 
@@ -193,7 +200,12 @@ unset siteDir
 
 _foamAddPath $FOAM_USER_APPBIN:$FOAM_SITE_APPBIN:$FOAM_APPBIN
 # Make sure to pick up dummy versions of external libraries last
-_foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+if [ -n "$FOAM_EXT_LIBBIN" ]
+then
+    _foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+else
+    _foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_LIBBIN/dummy
+fi
 
 # Compiler settings
 # ~~~~~~~~~~~~~~~~~
@@ -286,4 +298,6 @@ system)
     ;;
 esac
 
+_foamOnOSX && _foamIncreaseMaxOpenFiles 4096
+
 #------------------------------------------------------------------------------
diff --git a/src/Allwmake b/src/Allwmake
index ef59d69..e0fb2e0 100755
--- a/src/Allwmake
+++ b/src/Allwmake
@@ -12,11 +12,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR/src" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 set -x
 
diff --git a/src/OSspecific/POSIX/POSIX.C b/src/OSspecific/POSIX/POSIX.C
index aa76bd2..600ac7e 100644
--- a/src/OSspecific/POSIX/POSIX.C
+++ b/src/OSspecific/POSIX/POSIX.C
@@ -53,7 +53,11 @@ Description
 #include <sys/socket.h>
 #include <netdb.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <mach-o/dyld.h>
+#else
 #include <link.h>
+#endif
 
 #include <netinet/in.h>
 
@@ -1031,6 +1035,20 @@ void* Foam::dlOpen(const fileName& lib, const bool check)
             << " : dlopen of " << lib << std::endl;
     }
     void* handle = ::dlopen(lib.c_str(), RTLD_LAZY|RTLD_GLOBAL);
+#if defined(darwin64)
+    if (!handle && lib.ext() == "so")
+    {
+        fileName fallback_lib = lib.lessExt() + ".dylib";
+        if (check)
+        {
+            WarningIn("dlOpen(const fileName&, const bool)")
+                << "dlOpen: using fallback library name "
+                << fallback_lib
+                << endl;
+        }
+        handle = ::dlopen(fallback_lib.c_str(), RTLD_LAZY|RTLD_GLOBAL);
+    }
+#endif
 
     if (!handle && check)
     {
@@ -1117,7 +1135,24 @@ bool Foam::dlSymFound(void* handle, const std::string& symbol)
     }
 }
 
+#if defined(darwin64)
+Foam::fileNameList Foam::dlLoaded()
+{
+    DynamicList<fileName> libs;
+    for(uint32_t cnt = 0; cnt < _dyld_image_count(); ++cnt)
+    {
+	libs.append(_dyld_get_image_name(cnt));
+    }
 
+    if (POSIX::debug)
+    {
+        std::cout
+            << "dlLoaded()"
+            << " : determined loaded libraries :" << libs.size() << std::endl;
+    }
+    return libs;
+}
+#else
 static int collectLibsCallback
 (
     struct dl_phdr_info *info,
@@ -1144,6 +1179,7 @@ Foam::fileNameList Foam::dlLoaded()
     }
     return libs;
 }
+#endif
 
 
 void Foam::osRandomSeed(const label seed)
diff --git a/src/OSspecific/POSIX/clockTime/clockTime.H b/src/OSspecific/POSIX/clockTime/clockTime.H
index 8708ba9..65f046c 100644
--- a/src/OSspecific/POSIX/clockTime/clockTime.H
+++ b/src/OSspecific/POSIX/clockTime/clockTime.H
@@ -37,6 +37,9 @@ SourceFiles
 #define clockTime_H
 
 #include <sys/types.h>
+#if defined(darwin64)
+#include <sys/time.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/printStack.C b/src/OSspecific/POSIX/printStack.C
index b3561ef..6f79a5b 100644
--- a/src/OSspecific/POSIX/printStack.C
+++ b/src/OSspecific/POSIX/printStack.C
@@ -27,11 +27,17 @@ License
 #include "OStringStream.H"
 #include "OSspecific.H"
 #include "IFstream.H"
+#if defined(darwin64) && defined(__clang__)
+#include "ulong.H"
+#endif
 
 #include <inttypes.h>
 #include <cxxabi.h>
 #include <execinfo.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <regex.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -100,6 +106,7 @@ void printSourceFileAndLine
     uintptr_t address = uintptr_t(addr);
     word myAddress = addressToWord(address);
 
+#if ! defined(darwin64)
     if (filename.ext() == "so")
     {
         // Convert address into offset into dynamic library
@@ -107,32 +114,79 @@ void printSourceFileAndLine
         intptr_t relativeAddress = address - offset;
         myAddress = addressToWord(relativeAddress);
     }
+#endif
 
     if (filename[0] == '/')
     {
         string line = pOpen
         (
+#if ! defined(darwin64)
             "addr2line -f --demangle=auto --exe "
           + filename
           + " "
           + myAddress,
             1
+#else
+            "echo 'image lookup -a "
+          + myAddress
+          + " "
+          + filename
+          + "'"
+          + " | xcrun lldb "
+          + "-O 'target create --no-dependents -a x86_64 "
+          + filename
+          + "' -o '"
+          + "target modules load -f "
+          + filename
+          + " __TEXT "
+          + addressToWord(reinterpret_cast<const uintptr_t>(info->dli_fbase))
+          + "' 2> /dev/null"
+          + " | tail -1"
+#endif
         );
 
-        if (line == "")
+#if defined(darwin64)
         {
-            os  << " addr2line failed";
+            const char *buf = line.c_str();
+            regex_t re;
+            regmatch_t mt[3];
+            int st;
+
+            regcomp(&re, ".\\+at \\(.\\+\\):\\(\\d\\+\\)", REG_ENHANCED);
+            st = regexec(&re, buf, 3, mt, 0);
+
+            if (st == REG_NOMATCH)
+            {
+                line = "??:0";
+            }
+            else
+            {
+                size_t len = mt[1].rm_eo - mt[1].rm_so;
+                string fname(buf + mt[1].rm_so, len);
+                len = mt[2].rm_eo - mt[2].rm_so;
+                string lnum(buf + mt[2].rm_so, len);
+                line = fname + ":" + lnum;
+            }
+            regfree(&re);
         }
-        else if (line == "??:0")
+#endif
+
+        if (line == "")
         {
-            os  << " in " << filename;
+            os  << " addr2line failed";
         }
         else
         {
+            word location_preposition = " at ";
+            if (line == "??:0")
+            {
+                line = filename;
+                location_preposition = " in ";
+            }
             string cwdLine(line.replaceAll(cwd() + '/', ""));
             string homeLine(cwdLine.replaceAll(home(), '~'));
 
-            os  << " at " << homeLine.c_str();
+            os  << location_preposition << homeLine.c_str();
         }
     }
 }
@@ -156,9 +210,9 @@ fileName absolutePath(const char* fn)
 }
 
 
-word demangleSymbol(const char* sn)
+string demangleSymbol(const char* sn)
 {
-    word res;
+    string res;
     int st;
     char* cxx_sname = abi::__cxa_demangle
     (
@@ -170,12 +224,12 @@ word demangleSymbol(const char* sn)
 
     if (st == 0 && cxx_sname)
     {
-        res = word(cxx_sname);
+        res = string(cxx_sname);
         free(cxx_sname);
     }
     else
     {
-        res = word(sn);
+        res = string(sn);
     }
 
     return res;
diff --git a/src/OSspecific/POSIX/signals/sigFpe.C b/src/OSspecific/POSIX/signals/sigFpe.C
index 0e3ab8a..f747b9f 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.C
+++ b/src/OSspecific/POSIX/signals/sigFpe.C
@@ -39,6 +39,13 @@ License
     #include <sigfpe.h>
 #endif
 
+#if defined(darwin64)
+#include <xmmintrin.h>
+#include <malloc/malloc.h>
+#include <sys/mman.h>
+#include <unistd.h>
+#endif
+
 #include <limits>
 
 // * * * * * * * * * * * * * * Static Data Members * * * * * * * * * * * * * //
@@ -52,6 +59,30 @@ void Foam::sigFpe::fillNan(UList<scalar>& lst)
 
 bool Foam::sigFpe::mallocNanActive_ = false;
 
+#if defined(darwin64)
+void *(*Foam::sigFpe::oldMalloc_)(struct _malloc_zone_t *zone, size_t size)
+	= NULL;
+
+void *Foam::sigFpe::nanMalloc_(struct _malloc_zone_t *zone, size_t size)
+{
+    void *result;
+
+    result = oldMalloc_(zone, size);
+
+    if (mallocNanActive_)
+    {
+        UList<scalar> lst
+        (
+            reinterpret_cast<scalar*>(result),
+            size/sizeof(scalar)
+        );
+        fillNan(lst);
+    }
+
+    return result;
+}
+#endif
+
 
 #ifdef LINUX
 extern "C"
@@ -86,7 +117,7 @@ void* Foam::sigFpe::mallocNan(size_t size)
 #endif
 
 
-#ifdef LINUX_GNUC
+#if defined(LINUX_GNUC) || defined(darwin64)
 void Foam::sigFpe::sigHandler(int)
 {
     // Reset old handling
@@ -122,9 +153,13 @@ Foam::sigFpe::~sigFpe()
 {
     if (env("FOAM_SIGFPE"))
     {
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         // Reset signal
+        #if defined(darwin64)
+        if (oldAction_.sa_handler && sigaction(SIGFPE, NULL, NULL) < 0)
+        #else
         if (oldAction_.sa_handler && sigaction(SIGFPE, &oldAction_, NULL) < 0)
+        #endif
         {
             FatalErrorInFunction
                 << "Cannot reset SIGFPE trapping"
@@ -135,10 +170,24 @@ Foam::sigFpe::~sigFpe()
 
     if (env("FOAM_SETNAN"))
     {
-        #ifdef LINUX
+        #if defined(LINUX) || defined(darwin64)
         // Disable initialization to NaN
         mallocNanActive_ = false;
         #endif
+
+        #if defined(darwin64)
+        // Restoring old malloc handler
+        if (oldMalloc_ != NULL) {
+            malloc_zone_t *zone = malloc_default_zone();
+
+            if (zone != NULL)
+            {
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE);
+                zone->malloc = oldMalloc_;
+                mprotect(zone, getpagesize(), PROT_READ);
+            }
+        }
+        #endif
     }
 }
 
@@ -158,21 +207,31 @@ void Foam::sigFpe::set(const bool verbose)
     {
         bool supported = false;
 
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         supported = true;
 
+        #if defined(LINUX_GNUC)
         feenableexcept
         (
             FE_DIVBYZERO
           | FE_INVALID
           | FE_OVERFLOW
         );
+        #endif  // LINUX_GNUC
+        #if defined(darwin64)
+        _mm_setcsr(_MM_MASK_MASK &~
+                   (_MM_MASK_OVERFLOW|_MM_MASK_INVALID|_MM_MASK_DIV_ZERO));
+        #endif
 
         struct sigaction newAction;
         newAction.sa_handler = sigHandler;
         newAction.sa_flags = SA_NODEFER;
         sigemptyset(&newAction.sa_mask);
+        #if defined(darwin64)
+        if (sigaction(SIGFPE, &newAction, NULL) < 0)
+        #else
         if (sigaction(SIGFPE, &newAction, &oldAction_) < 0)
+        #endif
         {
             FatalErrorInFunction
                 << "Cannot set SIGFPE trapping"
@@ -222,10 +281,33 @@ void Foam::sigFpe::set(const bool verbose)
 
     if (env("FOAM_SETNAN"))
     {
-        #ifdef LINUX
+        #if defined(LINUX)
         mallocNanActive_ = true;
         #endif
 
+        #if defined(darwin64)
+        malloc_zone_t *zone = malloc_default_zone();
+
+        if (zone != NULL)
+        {
+            oldMalloc_ = zone->malloc;
+            if
+            (
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE) == 0
+            )
+            {
+                zone->malloc = nanMalloc_;
+                if
+                (
+                    mprotect(zone, getpagesize(), PROT_READ) == 0
+                )
+                {
+                    mallocNanActive_ = true;
+                }
+            }
+        }
+        #endif
+
         if (verbose)
         {
             if (mallocNanActive_)
diff --git a/src/OSspecific/POSIX/signals/sigFpe.H b/src/OSspecific/POSIX/signals/sigFpe.H
index 14dbcae..4b60327 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.H
+++ b/src/OSspecific/POSIX/signals/sigFpe.H
@@ -54,6 +54,10 @@ SourceFiles
     #define LINUX_GNUC
 #endif
 
+#if defined(__APPLE__)
+#include <malloc/malloc.h>
+#endif
+
 #include "UList.H"
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
@@ -72,10 +76,16 @@ class sigFpe
         //- Saved old signal trapping setting
         static struct sigaction oldAction_;
 
+#if defined(darwin64)
+        static void *(*oldMalloc_)(struct _malloc_zone_t *zone, size_t size);
+
+        static void *nanMalloc_(struct _malloc_zone_t *zone, size_t size);
+#endif
+
 
     // Static data members
 
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         //- Handler for caught signals
         static void sigHandler(int);
         #endif
@@ -103,7 +113,7 @@ public:
         //- Flag to indicate mallocNan is enabled
         static bool mallocNanActive_;
 
-        #ifdef LINUX
+        #if defined(LINUX)
         //- Malloc function which initializes to NaN
         static void* mallocNan(size_t size);
         #endif
diff --git a/src/OpenFOAM/Make/files b/src/OpenFOAM/Make/files
index 3bd8bca..21588ac 100644
--- a/src/OpenFOAM/Make/files
+++ b/src/OpenFOAM/Make/files
@@ -33,6 +33,12 @@ $(ints)/label/label.C
 $(ints)/uLabel/uLabel.C
 $(ints)/lists/labelIOList.C
 $(ints)/lists/labelListIOList.C
+#if defined(__APPLE__) && defined(__clang__)
+$(ints)/long/long.C
+$(ints)/long/longIO.C
+$(ints)/ulong/ulong.C
+$(ints)/ulong/ulongIO.C
+#endif
 
 primitives/Scalar/doubleScalar/doubleScalar.C
 primitives/Scalar/floatScalar/floatScalar.C
diff --git a/src/OpenFOAM/db/IOobject/IOobject.H b/src/OpenFOAM/db/IOobject/IOobject.H
index 15235b9..feb04e8 100644
--- a/src/OpenFOAM/db/IOobject/IOobject.H
+++ b/src/OpenFOAM/db/IOobject/IOobject.H
@@ -393,7 +393,8 @@ public:
 
             //- Write the standard end file divider
             template<class Stream>
-            static inline Stream& writeEndDivider(Stream& os);
+            static inline Stream& writeEndDivider(
+                Stream& os, bool noHint=false);
 
             //- Write header
             bool writeHeader(Ostream&) const;
diff --git a/src/OpenFOAM/db/IOobject/IOobjectI.H b/src/OpenFOAM/db/IOobject/IOobjectI.H
index ed83109..f955661 100644
--- a/src/OpenFOAM/db/IOobject/IOobjectI.H
+++ b/src/OpenFOAM/db/IOobject/IOobjectI.H
@@ -105,11 +105,20 @@ inline Stream& Foam::IOobject::writeDivider(Stream& os)
 }
 
 template<class Stream>
-inline Stream& Foam::IOobject::writeEndDivider(Stream& os)
+inline Stream& Foam::IOobject::writeEndDivider(Stream& os, bool noHint)
 {
-    os  << "\n\n"
-        "// *****************************************"
-        "******************************** //\n";
+    if (noHint)
+    {
+        os  << "\n\n"
+            "// *****************************************"
+            "******************************** //\n";
+    }
+    else
+    {
+        os  << "\n\n"
+            "// **************************** vi: set ft=foam: "
+            "*************************** //\n";
+    }
 
     return os;
 }
diff --git a/src/OpenFOAM/db/IOobject/IOobjectWriteHeader.C b/src/OpenFOAM/db/IOobject/IOobjectWriteHeader.C
index bb19caf..11b276e 100644
--- a/src/OpenFOAM/db/IOobject/IOobjectWriteHeader.C
+++ b/src/OpenFOAM/db/IOobject/IOobjectWriteHeader.C
@@ -46,6 +46,7 @@ bool Foam::IOobject::writeHeader(Ostream& os, const word& type) const
     writeBanner(os)
         << "FoamFile\n{\n"
         << "    version     " << os.version() << ";\n"
+        << "    foamVersion \"" << FOAMversion << "\";\n"
         << "    format      " << os.format() << ";\n"
         << "    class       " << type << ";\n";
 
diff --git a/src/OpenFOAM/db/IOstreams/IOstreams.H b/src/OpenFOAM/db/IOstreams/IOstreams.H
index 438133d..64b7f9f 100644
--- a/src/OpenFOAM/db/IOstreams/IOstreams.H
+++ b/src/OpenFOAM/db/IOstreams/IOstreams.H
@@ -41,6 +41,10 @@ Description
 #include "char.H"
 #include "int.H"
 #include "uint.H"
+#if defined(darwin64) && defined(__clang__)
+#include "ulong.H"
+#include "long.H"
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 // Global predefined streams for standard input, output
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
index 1537c8c..e978428 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
@@ -317,7 +317,11 @@ Foam::fileName Foam::dynamicCode::codeRelPath() const
 
 Foam::fileName Foam::dynamicCode::libRelPath() const
 {
+#if defined(darwin64)
+    return codeRelPath()/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
     return codeRelPath()/libSubDir_/"lib" + codeName_ + ".so";
+#endif
 }
 
 
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
index 852ba6d..cecf678 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
@@ -221,7 +221,11 @@ public:
         //  Corresponds to codeRoot()/libSubDir()/lib\<codeName\>.so
         fileName libPath() const
         {
+#if defined(darwin64)
+            return codeRoot_/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
             return codeRoot_/libSubDir_/"lib" + codeName_ + ".so";
+#endif
         }
 
         //- Path for specified code name relative to \$FOAM_CASE
diff --git a/src/OpenFOAM/fields/Fields/Field/FieldMapper.H b/src/OpenFOAM/fields/Fields/Field/FieldMapper.H
index b40e2fd..fd126b8 100644
--- a/src/OpenFOAM/fields/Fields/Field/FieldMapper.H
+++ b/src/OpenFOAM/fields/Fields/Field/FieldMapper.H
@@ -76,7 +76,7 @@ public:
             FatalErrorInFunction
                 << "attempt to access null distributeMap"
                 << abort(FatalError);
-            return *reinterpret_cast<mapDistributeBase*>(NULL);
+            return NullObjectRef<mapDistributeBase>();
         }
 
         //- Are there unmapped values? I.e. do all size() elements get
diff --git a/src/OpenFOAM/primitives/Scalar/doubleFloat.H b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
index 57373e0..b560586 100644
--- a/src/OpenFOAM/primitives/Scalar/doubleFloat.H
+++ b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
@@ -31,6 +31,15 @@ License
 
 #include <cmath>
 
+#if defined(darwin64)
+inline float j0f(float x) { return float(j0(double(x)));}
+inline float j1f(float x) { return float(j1(double(x)));}
+inline float y0f(float x) { return float(y0(double(x)));}
+inline float y1f(float x) { return float(y1(double(x)));}
+inline float jnf(const int n, const float s) { return float(jn(n, double(s))); }
+inline float ynf(const int n, const float s) { return float(yn(n, double(s))); }
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
@@ -87,6 +96,12 @@ MAXMINPOW(float, float, int)
 MAXMINPOW(float, int, float)
 MAXMINPOW(float, float, long)
 MAXMINPOW(float, long, float)
+#if defined(darwin64) && defined(__clang__) && WM_LABEL_SIZE == 64
+MAXMINPOW(double, int64_t, double)
+MAXMINPOW(float, int64_t, float)
+MAXMINPOW(double, double, int64_t)
+MAXMINPOW(float, float, int64_t)
+#endif
 
 #undef MAXMINPOW
 
diff --git a/src/OpenFOAM/primitives/ints/int/int.H b/src/OpenFOAM/primitives/ints/int/int.H
index a3ab4b5..84940bd 100644
--- a/src/OpenFOAM/primitives/ints/int/int.H
+++ b/src/OpenFOAM/primitives/ints/int/int.H
@@ -37,6 +37,10 @@ SourceFiles
 
 #include "int32.H"
 #include "int64.H"
+#if defined(darwin64) && defined(__clang__)
+#include "long.H"
+#include "ulong.H"
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -63,6 +67,10 @@ MAXMIN(int32_t, int32_t, int32_t)
 MAXMIN(int64_t, int64_t, int32_t)
 MAXMIN(int64_t, int32_t, int64_t)
 MAXMIN(int64_t, int64_t, int64_t)
+#if defined(darwin64) && defined(__clang__)
+MAXMIN(long, long, long)
+MAXMIN(unsigned long, unsigned long, unsigned long)
+#endif
 
 
 // * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
diff --git a/src/OpenFOAM/primitives/ints/long/long.C b/src/OpenFOAM/primitives/ints/long/long.C
new file mode 100644
index 0000000..e7b78c3
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/long.C
@@ -0,0 +1,50 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "long.H"
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+const long Foam::pTraits<long>::zero = 0;
+const long Foam::pTraits<long>::one = 1;
+const long Foam::pTraits<long>::min = LONG_MIN;
+const long Foam::pTraits<long>::max = LONG_MAX;
+const long Foam::pTraits<long>::rootMin = pTraits<long>::min;
+const long Foam::pTraits<long>::rootMax = pTraits<long>::max;
+
+const char* Foam::pTraits<long>::componentNames[] = { "x" };
+
+Foam::pTraits<long>::pTraits(const long& p)
+:
+    p_(p)
+{}
+
+Foam::pTraits<long>::pTraits(Istream& is)
+{
+    is >> p_;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/long/long.H b/src/OpenFOAM/primitives/ints/long/long.H
new file mode 100644
index 0000000..f8a3146
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/long.H
@@ -0,0 +1,138 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+Primitive
+    long
+
+Description
+    long integer
+
+SourceFiles
+    long.C
+    longIO.C
+
+\*---------------------------------------------------------------------------*/
+
+#ifndef long_H
+#define long_H
+
+#define __STDC_LIMIT_MACROS
+#include <stdint.h>
+#include <climits>
+#include <cstdlib>
+
+#include "word.H"
+#include "pTraits.H"
+#include "direction.H"
+
+#ifndef LONG_MIN
+#define LONG_MIN 0
+#endif
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+namespace Foam
+{
+
+class Istream;
+class Ostream;
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+//- Return a word representation of an long
+word name(const long);
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+long readLong(Istream&);
+bool read(const char*, long&);
+Istream& operator>>(Istream&, long&);
+Ostream& operator<<(Ostream&, const long);
+
+//- Template specialization for pTraits<long>
+template<>
+class pTraits<long>
+{
+    long p_;
+
+public:
+
+    //- Component type
+    typedef long cmptType;
+
+    // Member constants
+
+        enum
+        {
+            dim = 3,         //!< Dimensionality of space
+            rank = 0,        //!< Rank of int64_t is 0
+            nComponents = 1  //!< Number of components in int64_t is 1
+        };
+
+
+    // Static data members
+
+        static const char* const typeName;
+        static const char* componentNames[];
+        static const long zero;
+        static const long one;
+        static const long min;
+        static const long max;
+        static const long rootMax;
+        static const long rootMin;
+
+
+    // Constructors
+
+        //- Construct from primitive
+        explicit pTraits(const long&);
+
+        //- Construct from Istream
+        pTraits(Istream&);
+
+
+    // Member Functions
+
+        //- Access to the long value
+        operator long() const
+        {
+            return p_;
+        }
+
+        //- Access to the long value
+        operator long&()
+        {
+            return p_;
+        }
+};
+
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+} // End namespace Foam
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#endif
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/long/longIO.C b/src/OpenFOAM/primitives/ints/long/longIO.C
new file mode 100644
index 0000000..9ee1235
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/longIO.C
@@ -0,0 +1,104 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "error.H"
+
+#include "long.H"
+#include "IOstreams.H"
+
+#include <inttypes.h>
+#include <sstream>
+#include <cerrno>
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+Foam::word Foam::name(const long val)
+{
+    std::ostringstream buf;
+    buf << val;
+    return buf.str();
+}
+
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+Foam::Istream& Foam::operator>>(Istream& is, long& i)
+{
+    token t(is);
+
+    if (!t.good())
+    {
+        is.setBad();
+        return is;
+    }
+
+    if (t.isLabel())
+    {
+        i = long(t.labelToken());
+    }
+    else
+    {
+        is.setBad();
+        FatalIOErrorIn("operator>>(Istream&, long&)", is)
+            << "wrong token type - expected long, found " << t.info()
+            << exit(FatalIOError);
+
+        return is;
+    }
+
+    // Check state of Istream
+    is.check("Istream& operator>>(Istream&, long&)");
+
+    return is;
+}
+
+
+long Foam::readLong(Istream& is)
+{
+    long val;
+    is >> val;
+
+    return val;
+}
+
+
+bool Foam::read(const char* buf, long& s)
+{
+    char *endptr = NULL;
+    errno = 0;
+    s = strtol(buf, &endptr, 10);
+    return (*endptr == 0) && (errno == 0);
+}
+
+
+Foam::Ostream& Foam::operator<<(Ostream& os, const long i)
+{
+    os.write(label(i));
+    os.check("Ostream& operator<<(Ostream&, const long)");
+    return os;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulong.C b/src/OpenFOAM/primitives/ints/ulong/ulong.C
new file mode 100644
index 0000000..afcedbd
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulong.C
@@ -0,0 +1,52 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "ulong.H"
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+const unsigned long Foam::pTraits<unsigned long>::zero = 0;
+const unsigned long Foam::pTraits<unsigned long>::one = 1;
+const unsigned long Foam::pTraits<unsigned long>::min = ULONG_MIN;
+const unsigned long Foam::pTraits<unsigned long>::max = ULONG_MAX;
+const unsigned long Foam::pTraits<unsigned long>::rootMin =
+    pTraits<unsigned long>::min;
+const unsigned long Foam::pTraits<unsigned long>::rootMax =
+    pTraits<unsigned long>::max;
+
+const char* Foam::pTraits<unsigned long>::componentNames[] = { "x" };
+
+Foam::pTraits<unsigned long>::pTraits(const unsigned long& p)
+:
+    p_(p)
+{}
+
+Foam::pTraits<unsigned long>::pTraits(Istream& is)
+{
+    is >> p_;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulong.H b/src/OpenFOAM/primitives/ints/ulong/ulong.H
new file mode 100644
index 0000000..95b21b2
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulong.H
@@ -0,0 +1,138 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+Primitive
+    unisgned long
+
+Description
+    unsigned long integer
+
+SourceFiles
+    ulong.C
+    ulongIO.C
+
+\*---------------------------------------------------------------------------*/
+
+#ifndef ulong_H
+#define ulong_H
+
+#define __STDC_LIMIT_MACROS
+#include <stdint.h>
+#include <climits>
+#include <cstdlib>
+
+#include "word.H"
+#include "pTraits.H"
+#include "direction.H"
+
+#ifndef ULONG_MIN
+#define ULONG_MIN 0
+#endif
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+namespace Foam
+{
+
+class Istream;
+class Ostream;
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+//- Return a word representation of an unsigned long
+word name(const unsigned long);
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+unsigned long readUlong(Istream&);
+bool read(const char*, unsigned long&);
+Istream& operator>>(Istream&, unsigned long&);
+Ostream& operator<<(Ostream&, const unsigned long);
+
+//- Template specialization for pTraits<unsigned long>
+template<>
+class pTraits<unsigned long>
+{
+    unsigned long p_;
+
+public:
+
+    //- Component type
+    typedef unsigned long cmptType;
+
+    // Member constants
+
+        enum
+        {
+            dim = 3,         //!< Dimensionality of space
+            rank = 0,        //!< Rank of uint64_t is 0
+            nComponents = 1  //!< Number of components in uint64_t is 1
+        };
+
+
+    // Static data members
+
+        static const char* const typeName;
+        static const char* componentNames[];
+        static const unsigned long zero;
+        static const unsigned long one;
+        static const unsigned long min;
+        static const unsigned long max;
+        static const unsigned long rootMax;
+        static const unsigned long rootMin;
+
+
+    // Constructors
+
+        //- Construct from primitive
+        explicit pTraits(const unsigned long&);
+
+        //- Construct from Istream
+        pTraits(Istream&);
+
+
+    // Member Functions
+
+        //- Access to the uint64_t value
+        operator unsigned long() const
+        {
+            return p_;
+        }
+
+        //- Access to the uint value
+        operator unsigned long&()
+        {
+            return p_;
+        }
+};
+
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+} // End namespace Foam
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#endif
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulongIO.C b/src/OpenFOAM/primitives/ints/ulong/ulongIO.C
new file mode 100644
index 0000000..aa62c61
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulongIO.C
@@ -0,0 +1,101 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "error.H"
+
+#include "ulong.H"
+#include "IOstreams.H"
+
+#include <sstream>
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+Foam::word Foam::name(const unsigned long val)
+{
+    std::ostringstream buf;
+    buf << val;
+    return buf.str();
+}
+
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+Foam::Istream& Foam::operator>>(Istream& is, unsigned long& i)
+{
+    token t(is);
+
+    if (!t.good())
+    {
+        is.setBad();
+        return is;
+    }
+
+    if (t.isLabel())
+    {
+        i = static_cast<unsigned long>(t.labelToken());
+    }
+    else
+    {
+        is.setBad();
+        FatalIOErrorIn("operator>>(Istream&, unsigned long&)", is)
+            << "wrong token type - expected unsigned long, found " << t.info()
+            << exit(FatalIOError);
+
+        return is;
+    }
+
+    // Check state of Istream
+    is.check("Istream& operator>>(Istream&, unsigned long&)");
+
+    return is;
+}
+
+
+unsigned long Foam::readUlong(Istream& is)
+{
+    unsigned long val;
+    is >> val;
+
+    return val;
+}
+
+
+bool Foam::read(const char* buf, unsigned long& s)
+{
+    char *endptr = NULL;
+    s = strtoul(buf, &endptr, 10);
+    return (*endptr == 0);
+}
+
+
+Foam::Ostream& Foam::operator<<(Ostream& os, const unsigned long i)
+{
+    os.write(label(i));
+    os.check("Ostream& operator<<(Ostream&, const unsigned long)");
+    return os;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H b/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H
index 21e839c..218bba9 100644
--- a/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H
+++ b/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H
@@ -23,6 +23,8 @@ License
 
 \*---------------------------------------------------------------------------*/
 
+#include "nullObject.H"
+
 
 // * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * //
 
@@ -50,7 +52,7 @@ inline Foam::labelRange::labelRange(const label start, const label size)
 
 inline Foam::labelRange::const_iterator::const_iterator()
 :
-   range_(*reinterpret_cast<Foam::labelRange* >(0)),
+   range_(Foam::NullObjectRef<Foam::labelRange>()),
    index_(-1)
 {}
 
diff --git a/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H b/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H
index 739d582..e3766bb 100644
--- a/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H
+++ b/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H
@@ -23,6 +23,8 @@ License
 
 \*---------------------------------------------------------------------------*/
 
+#include "nullObject.H"
+
 
 // * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * //
 
@@ -42,7 +44,7 @@ inline Foam::labelRanges::labelRanges(const label nElem)
 
 inline Foam::labelRanges::const_iterator::const_iterator()
 :
-   list_(*reinterpret_cast<Foam::labelRanges* >(0)),
+   list_(Foam::NullObjectRef<Foam::labelRanges>()),
    index_(-1),
    subIndex_(-1)
 {}
diff --git a/src/conversion/ensight/part/ensightPartCells.C b/src/conversion/ensight/part/ensightPartCells.C
index 82ef148..1ab2716 100644
--- a/src/conversion/ensight/part/ensightPartCells.C
+++ b/src/conversion/ensight/part/ensightPartCells.C
@@ -182,7 +182,7 @@ Foam::ensightPartCells::ensightPartCells
 )
 :
     ensightPart(partNumber, partDescription),
-    mesh_(*reinterpret_cast<polyMesh*>(0))
+    mesh_(NullObjectRef<polyMesh>())
 {}
 
 
@@ -237,7 +237,7 @@ Foam::ensightPartCells::ensightPartCells(const ensightPartCells& part)
 Foam::ensightPartCells::ensightPartCells(Istream& is)
 :
     ensightPart(),
-    mesh_(*reinterpret_cast<polyMesh*>(0))
+    mesh_(NullObjectRef<polyMesh>())
 {
     reconstruct(is);
 }
diff --git a/src/fvAgglomerationMethods/Allwmake b/src/fvAgglomerationMethods/Allwmake
index cc58b3e..5949a79 100755
--- a/src/fvAgglomerationMethods/Allwmake
+++ b/src/fvAgglomerationMethods/Allwmake
@@ -8,9 +8,14 @@ set -x
 
 export ParMGridGen=$WM_THIRD_PARTY_DIR/ParMGridGen-1.0
 
-if [ -e "$FOAM_LIBBIN/libMGridGen.so" ]
+if [ "$(uname -s)" = "Darwin" ]
 then
-    wmake $targetType MGridGenGamgAgglomeration
+	[ -e "/usr/local/opt/parmgridgen/lib/libmgrid.a" \
+		-a "$WM_LABEL_SIZE" -ne "64" ] \
+		&& wmake $targetType MGridGenGamgAgglomeration
+else
+	[ -e "$FOAM_LIBBIN/libMGridGen.so" ] \
+		&& wmake $targetType MGridGenGamgAgglomeration
 fi
 
 wmake $targetType pairPatchAgglomeration
diff --git a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
index a58b65f..a135baf 100644
--- a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
+++ b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
@@ -7,9 +7,17 @@ TYPE_REAL=-DTYPE_REAL
 
 EXE_INC = \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
-    -I$(ParMGridGen)/MGridGen/Lib/lnInclude \
-    -I$(ParMGridGen)/MGridGen/IMlib/lnInclude \
     $(TYPE_REAL)
 
-LIB_LIBS = \
-    -L$(FOAM_EXT_LIBBIN) -lMGridGen
+LIB_LIBS =
+
+ifeq ($(shell uname -s),Darwin)
+    LIB_LIBS = -L/usr/local/opt/parmgridgen/lib -lmgrid
+    EXE_INC += -I/usr/local/opt/parmgridgen/include
+else
+	LIB_LIBS = -L$(FOAM_EXT_LIBBIN) -lMGridGen
+    EXE_INC += -I$(ParMGridGen)/MGridGen/Lib/lnInclude
+    EXE_INC += -I$(ParMGridGen)/MGridGen/IMlib/lnInclude
+endif
+
+/* vim:set ft=make sw=4 ts=4 et: */
diff --git a/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C b/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C
index 9149eaf..e9a4ff6 100644
--- a/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C
+++ b/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C
@@ -30,7 +30,7 @@ License
 
 const Foam::edgeFaceCirculator Foam::edgeFaceCirculator::endConstIter
 (
-    *reinterpret_cast<primitiveMesh*>(0),       // primitiveMesh
+    NullObjectRef<primitiveMesh>(),             // primitiveMesh
     -1,                                         // faceLabel
     false,                                      // ownerSide
     -1,                                         // index
diff --git a/src/parallel/decompose/Allwmake b/src/parallel/decompose/Allwmake
index c692633..7c68146 100755
--- a/src/parallel/decompose/Allwmake
+++ b/src/parallel/decompose/Allwmake
@@ -6,7 +6,9 @@ targetType=libso
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 
 # get SCOTCH_VERSION, SCOTCH_ARCH_PATH
-if settings=`$WM_PROJECT_DIR/bin/foamEtcFile config.sh/scotch`
+_scotchConf="config.sh/scotch"
+[ "$(uname -s)" = "Darwin" ] && _scotchConf="config.sh/mac/scotch"
+if settings=`$WM_PROJECT_DIR/bin/foamEtcFile "$_scotchConf"`
 then
     . $settings
     echo "using SCOTCH_ARCH_PATH=$SCOTCH_ARCH_PATH"
diff --git a/src/parallel/decompose/metisDecomp/Allwmake b/src/parallel/decompose/metisDecomp/Allwmake
index d968333..b5620b8 100755
--- a/src/parallel/decompose/metisDecomp/Allwmake
+++ b/src/parallel/decompose/metisDecomp/Allwmake
@@ -1,16 +1,21 @@
 #!/bin/sh
 cd ${0%/*} || exit 1    # Run from this directory
 
+_soExt=so
+_metisConf="config.sh/metis"
+[ "$(uname -s)" = "Darwin" ] && _soExt=dylib
+[ "$(uname -s)" = "Darwin" ] && _metisConf="config.sh/mac/metis"
+
 # Parse arguments for library compilation
 targetType=libso
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 
 # get METIS_VERSION, METIS_ARCH_PATH
-if settings=`$WM_PROJECT_DIR/bin/foamEtcFile config.sh/metis`
+if settings=`$WM_PROJECT_DIR/bin/foamEtcFile "$_metisConf"`
 then
     . $settings
     echo "using METIS_ARCH_PATH=$METIS_ARCH_PATH"
-    if [ -r $METIS_ARCH_PATH/lib/libmetis.so ]
+    if [ -r "$METIS_ARCH_PATH/lib/libmetis.$_soExt" ]
     then
         wmake $targetType
     fi
@@ -20,5 +25,6 @@ else
     echo
 fi
 
+unset _soExt _metisConf
 
 #------------------------------------------------------------------------------
diff --git a/src/parallel/decompose/metisDecomp/Make/options b/src/parallel/decompose/metisDecomp/Make/options
index 8acd678..d4dfa96 100644
--- a/src/parallel/decompose/metisDecomp/Make/options
+++ b/src/parallel/decompose/metisDecomp/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(METIS_ARCH_PATH)/include \
     -I../decompositionMethods/lnInclude
 
diff --git a/src/parallel/decompose/metisDecomp/metisDecomp.C b/src/parallel/decompose/metisDecomp/metisDecomp.C
index 9015184..6ea8eee 100644
--- a/src/parallel/decompose/metisDecomp/metisDecomp.C
+++ b/src/parallel/decompose/metisDecomp/metisDecomp.C
@@ -67,7 +67,11 @@ Foam::label Foam::metisDecomp::decompose
 
     // Processor weights initialised with no size, only used if specified in
     // a file
-    Field<scalar> processorWeights;
+    #if REALTYPEWIDTH == 32
+    Field<floatScalar> processorWeights;
+    #else
+    Field<doubleScalar> processorWeights;
+    #endif
 
     // Cell weights (so on the vertices of the dual)
     List<label> cellWeights;
diff --git a/src/parallel/decompose/ptscotchDecomp/Make/options b/src/parallel/decompose/ptscotchDecomp/Make/options
index 25ca6e9..2cace47 100644
--- a/src/parallel/decompose/ptscotchDecomp/Make/options
+++ b/src/parallel/decompose/ptscotchDecomp/Make/options
@@ -3,10 +3,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
-    -I$(SCOTCH_ARCH_PATH)/include/$(FOAM_MPI) \
-    -I/usr/include/scotch \
+    -I$(SCOTCH_ARCH_PATH)/include \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN)/$(FOAM_MPI) -lptscotch -lptscotcherrexit -lscotch ${LINK_FLAGS} -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lptscotch -lptscotcherrexit -lscotch
+
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/parallel/decompose/scotchDecomp/Make/options b/src/parallel/decompose/scotchDecomp/Make/options
index 3bb11fb..23701f5 100644
--- a/src/parallel/decompose/scotchDecomp/Make/options
+++ b/src/parallel/decompose/scotchDecomp/Make/options
@@ -7,10 +7,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
     -I$(SCOTCH_ARCH_PATH)/include \
-    -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN) -lscotch -lscotcherrexit -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lscotch -lscotcherrexit
+
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/renumber/Allwmake b/src/renumber/Allwmake
index a44d239..5fa67c0 100755
--- a/src/renumber/Allwmake
+++ b/src/renumber/Allwmake
@@ -5,10 +5,16 @@ cd ${0%/*} || exit 1    # Run from this directory
 targetType=libso
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
 
-# Get CGAL and scotch versions
+# Get boost version
 . $WM_PROJECT_DIR/etc/config.sh/functions
-_foamEval SOURCE_CGAL_VERSIONS_ONLY=yes \
-          $($WM_PROJECT_DIR/bin/foamEtcFile config.sh/CGAL)
+if [ "$(uname -s)" = "Darwin" ]
+then
+    _foamEval SOURCE_CGAL_VERSIONS_ONLY=yes \
+        $($WM_PROJECT_DIR/bin/foamEtcFile config.sh/mac/CGAL)
+else
+    _foamEval SOURCE_CGAL_VERSIONS_ONLY=yes \
+        $($WM_PROJECT_DIR/bin/foamEtcFile config.sh/CGAL)
+fi
 
 ## Get ZOLTAN_ARCH_PATH
 #if settings=`$WM_PROJECT_DIR/bin/foamEtcFile config.sh/zoltan`
diff --git a/src/renumber/SloanRenumber/Make/options b/src/renumber/SloanRenumber/Make/options
index 0bf3c77..68d85e4 100644
--- a/src/renumber/SloanRenumber/Make/options
+++ b/src/renumber/SloanRenumber/Make/options
@@ -1,12 +1,23 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(BOOST_ARCH_PATH)/include \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/renumber/renumberMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(BOOST_ARCH_PATH)/lib -lboost_system \
+    -L$(BOOST_ARCH_PATH)/lib \
     -lmeshTools \
     -ldecompositionMethods \
     -lrenumberMethods
+
+ifeq ($(shell uname -s),Darwin)
+SO = dylib
+else
+SO = so
+endif
+
+ifneq ("$(wildcard $(BOOST_ARCH_PATH)/lib/libboost_thread-mt.$(SO))","")
+LIB_LIBS += -lboost_system-mt
+else
+LIB_LIBS += -lboost_system
+endif
diff --git a/wmake/makefiles/apps b/wmake/makefiles/apps
index b8abcd2..38837a3 100644
--- a/wmake/makefiles/apps
+++ b/wmake/makefiles/apps
@@ -38,5 +38,4 @@ application: $(FOAM_APPS)
 $(FOAM_APPS):
 	+@wmake -all $(TARGET) $@
 
-
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/makefiles/files b/wmake/makefiles/files
index c17179e..bd12124 100644
--- a/wmake/makefiles/files
+++ b/wmake/makefiles/files
@@ -59,19 +59,19 @@ $(OPTIONS) : $(MAKE_DIR)/options
 $(SFILES): $(MAKE_DIR)/files
 	@$(CPP) $(GFLAGS) $(MAKE_DIR)/files | sed -e 's@   *@ @g' > $(FILES)
 	# Find all macro definitions in the files
-	@grep "=" $(FILES) > $(VARS)
+	@grep --colour=never "=" $(FILES) > $(VARS)
 	echo "SOURCE = " > $(SFILES)
 	# Remove all macro definitions from the files list
-	@grep -v "=" $(FILES) >> $(SFILES)
+	@grep --colour=never -v "=" $(FILES) >> $(SFILES)
 	@rm -f $(FILES)
 	# Add a newline to files to ensure the last line is followed by a newline
 	@echo "" >> $(SFILES)
 	# Remove commented lines, blank lines, and trailing blanks from files
-	@sed -i -e '/^#/ d' -e '/^[ \t]*$$/ d' -e 's,[ \t]*$$,,' $(SFILES)
+	@sed -i~ -e '/^#/ d' -e '/^[ \t]*$$/ d' -e 's,[ \t]*$$,,' $(SFILES)
 	# Add backslashes
-	@sed -i -e 's,$$, \\,' -e '$$s,\\,,' $(SFILES)
+	@sed -i~ -e 's,$$, \\,' -e '$$s,\\,,' $(SFILES)
+	@rm $(SFILES)~
 
 $(VARS): $(SFILES)
 
-
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/makefiles/general b/wmake/makefiles/general
index b9a4f99..767b6a5 100644
--- a/wmake/makefiles/general
+++ b/wmake/makefiles/general
@@ -80,7 +80,11 @@ LIB_LIBS        =
 LIB             = libNULL
 
 # Shared library extension
+ifeq ($(shell uname -s),Darwin)
+SO		= dylib
+else
 SO              = so
+endif
 
 # Project executable
 EXE             = $(WM_PROJECT).out
@@ -88,7 +92,6 @@ EXE             = $(WM_PROJECT).out
 # Standalone executable
 SEXE            = a.out
 
-
 #------------------------------------------------------------------------------
 # Set compilation and dependency building rules
 #------------------------------------------------------------------------------
@@ -130,18 +133,19 @@ LIB_HEADER_DIRS = \
 
 $(EXE): $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(EXE)
-	$(LINKEXE) $(OBJECTS) -L$(LIB_PLATFORMS) \
-	    $(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) \
-	    $(LINK_LIBS) $(GLIBS) -o $(EXE)
+	$(call WM_MESSAGE,LD,$(notdir $(EXE)))
+	$(AT)$(LINKEXE) $(OBJECTS) -L$(LIB_PLATFORMS) \
+		$(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) \
+		$(LINK_LIBS) $(GLIBS) -o $(EXE)
 
 exe:    $(SEXE)
-	@echo \'$(SEXE)\' is up to date.
+	$(call WM_REPORT,$(SEXE))
 
 $(SEXE):$(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(SEXE)
-	$(LINKEXE) $(OBJECTS) $(EXE_LIBS) \
-	    $(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXE)
-
+	$(call WM_MESSAGE,LD,$(notdir $(EXE)))
+	$(AT)$(LINKEXE) $(OBJECTS) $(EXE_LIBS) \
+		$(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXE)
 
 #------------------------------------------------------------------------------
 # Define link statements for libraries
@@ -150,30 +154,33 @@ $(SEXE):$(OBJECTS)
 objects: $(OBJECTS)
 
 libso:  $(LIB).$(SO)
-	@echo \'$(LIB).$(SO)\' is up to date.
+	$(call WM_REPORT,$(LIB).$(SO))
 
 $(LIB).$(SO): $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
-	$(LINKLIBSO) $(OBJECTS) -L$(LIB_PLATFORMS) \
-	    $(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
+	$(call WM_MESSAGE,LD,$(notdir $(LIB).$(SO)))
+	$(AT)$(LINKLIBSO) $(OBJECTS) -L$(LIB_PLATFORMS) \
+		$(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
 
 lib:    $(LIB).a
-	@echo \'$(LIB).a\' is up to date.
+	$(call WM_REPORT,$(LIB).a)
 
 $(LIB).a: $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
 	@rm -f $(LIB).a
-	$(AR) $(ARFLAGS) $(LIB).a $(OBJECTS)
-	$(RANLIB) $(LIB).a
+	$(call WM_MESSAGE,AR,$(notdir $(LIB)))
+	$(AT)$(AR) $(ARFLAGS) $(notdir $(LIB)).a $(OBJECTS)
+	$(call WM_MESSAGE,RANLIB,$(notdir $(LIB)))
+	$(AT)$(RANLIB) $(LIB).a
 
 libo:   $(LIB).o
-	@echo \'$(LIB).o\' is up to date.
+	$(call WM_REPORT,$(LIB).o)
 
 $(LIB).o: $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
 	@rm -f $(LIB).o
-	$(LD) -r -o $(LIB).o $(OBJECTS)
-
+	$(call WM_MESSAGE,LD,$(notdir $(LIB).o))
+	$(AT)$(LD) -r -o $(LIB).o $(OBJECTS)
 
 #------------------------------------------------------------------------------
 # Set rule to create the include directory for libraries
@@ -205,4 +212,4 @@ ifeq ($(findstring lnInclude,$(MAKECMDGOALS))$(findstring updatedep,$(MAKECMDGOA
 endif
 
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/CGAL b/wmake/rules/General/CGAL
index 8097684..1642529 100644
--- a/wmake/rules/General/CGAL
+++ b/wmake/rules/General/CGAL
@@ -2,13 +2,14 @@ CGAL_INC = \
     -I$(CGAL_ARCH_PATH)/include \
     -I$(MPFR_ARCH_PATH)/include \
     -I$(GMP_ARCH_PATH)/include \
-    -I$(BOOST_ARCH_PATH)/include \
-    -I/usr/include
+    -I$(BOOST_ARCH_PATH)/include
 
 CGAL_LIBS = \
-    -L$(MPFR_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) \
-    -L$(GMP_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) \
+    -L$(MPFR_ARCH_PATH)/lib \
+    -L$(GMP_ARCH_PATH)/lib \
     -L$(BOOST_ARCH_PATH)/lib \
     -L$(CGAL_ARCH_PATH)/lib \
     -lCGAL \
     -lmpfr
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/X b/wmake/rules/General/X
index f55fa8b..01e1df8 100644
--- a/wmake/rules/General/X
+++ b/wmake/rules/General/X
@@ -3,3 +3,5 @@
 XFLAGS     =
 XINC       = $(XFLAGS) -I/usr/include/X11
 XLIBS      = -lXext -lX11
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/bison b/wmake/rules/General/bison
index b741436..834a312 100644
--- a/wmake/rules/General/bison
+++ b/wmake/rules/General/bison
@@ -1,7 +1,15 @@
 SUFFIXES += .y .Y
 
-ytoo = bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/$(<F).h ; \
-     $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+define ytoo
+$(call WM_MESSAGE,yy,$<)
+$(AT)bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/$(<F).h ; \
+	$(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+endef
 
-Ytoo = bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
-     $(CC) $(c++FLAGS) -c  $(@D)/$(<F).C -o $@
+define Ytoo
+$(call WM_MESSAGE,YY,$<)
+$(AT)bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
+	$(CC) $(c++FLAGS) -c  $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/btyacc b/wmake/rules/General/btyacc
index 44a58c3..78d1c85 100644
--- a/wmake/rules/General/btyacc
+++ b/wmake/rules/General/btyacc
@@ -1,4 +1,11 @@
 SUFFIXES += .y
 
-ytoo = btyacc -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define ytoo
+$(call WM_MESSAGE,yy,$<)
+$(AT)btyacc -v -d $(SKELETON) $<
+$(AT)mv y_tab.c $(@D)/$(<F).C
+$(AT)mv y_tab.h $(@D)/$(<F).H
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/btyacc++ b/wmake/rules/General/btyacc++
index 7844558..de7550a 100644
--- a/wmake/rules/General/btyacc++
+++ b/wmake/rules/General/btyacc++
@@ -1,4 +1,6 @@
 SUFFIXES += .Y
 
-Ytoo = btyacc++ -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
+Ytoo = $(call WM_MESSAGE,YY,$<); $(AT)btyacc++ -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
      $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/byacc b/wmake/rules/General/byacc
index 60a9e18..1f33ffb 100644
--- a/wmake/rules/General/byacc
+++ b/wmake/rules/General/byacc
@@ -1,4 +1,11 @@
 SUFFIXES += .y
 
-ytoo = byacc -v $(YYPREFIX) -d $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define ytoo
+$(call WM_MESSAGE,yy,$(notdir $<))
+$(AT)byacc -v $(YYPREFIX) -d $<
+$(AT)mv y.tab.c $(@D)/$(<F).C
+$(AT)mv y.tab.h $(@D)/$(<F).H
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/flex b/wmake/rules/General/flex
index 2b65bb2..fef4fa5 100644
--- a/wmake/rules/General/flex
+++ b/wmake/rules/General/flex
@@ -1,3 +1,9 @@
 SUFFIXES += .l
 
-ltoo = flex -o $(@D)/$(<F).c $< ; $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+define ltoo
+$(call WM_MESSAGE,ll,$<)
+$(AT)flex -o $(@D)/$(<F).c $(notdir $<)
+$(AT)$(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/flex++ b/wmake/rules/General/flex++
index 894181b..d638d24 100644
--- a/wmake/rules/General/flex++
+++ b/wmake/rules/General/flex++
@@ -1,3 +1,9 @@
 SUFFIXES += .L
 
-Ltoo = flex -+ -o$(@D)/$(<F).C -f $< ; $(CC) $(c++FLAGS) $(c++LESSWARN) -c $(@D)/$(<F).C -o $@
+define Ltoo
+$(call WM_MESSAGE,LL,$(notdir $<))
+$(AT)flex -+ -o$(@D)/$(<F).C -f $<
+$(AT)$(CC) $(c++FLAGS) $(c++LESSWARN) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/general b/wmake/rules/General/general
index b3f20b4..7d7552f 100644
--- a/wmake/rules/General/general
+++ b/wmake/rules/General/general
@@ -1,10 +1,27 @@
 #-------------------------------*- makefile -*---------------------------------
 
-AR         = ar
-ARFLAGS    = cr
-RANLIB     = ranlib
-CPP        = cpp
-LD         = ld
+ifeq ("$(V)","0")
+WM_MESSAGE = @echo "  $1	$2"
+MESSAGE = echo "  $1	$2"
+WM_REPORT = @echo ">> $(notdir $1)"
+AT = @
+else
+MESSAGE = true
+WM_MESSAGE =
+WM_REPORT = @echo \'$1\' is up to date.
+AT =
+endif
+
+XCRUN =
+ifeq ("$(shell uname -s)","Darwin")
+XCRUN = xcrun
+endif
+
+AR         = $(XCRUN) ar
+ARFLAGS    = $(XCRUN) cr
+RANLIB     = $(XCRUN) ranlib
+CPP        = $(XCRUN) cpp
+LD         = $(XCRUN) ld
 
 GFLAGS     = -D$(WM_ARCH) -DWM_ARCH_OPTION=$(WM_ARCH_OPTION) \
              -DWM_$(WM_PRECISION_OPTION) -DWM_LABEL_SIZE=$(WM_LABEL_SIZE)
@@ -24,5 +41,4 @@ include $(DEFAULT_RULES)/$(WM_LINK_LANGUAGE)
 -include $(RULES)/$(WM_LINK_LANGUAGE)
 include $(GENERAL_RULES)/transform
 
-
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/moc b/wmake/rules/General/moc
index 9374973..9898125 100644
--- a/wmake/rules/General/moc
+++ b/wmake/rules/General/moc
@@ -1,3 +1,9 @@
 SUFFIXES += .qt
 
-qttoo = $(QTDIR)/bin/moc -f $< -o $(@D)/$(<F).C ; $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define qttoo
+$(call WM_MESSAGE,MOC,$(notdir $<))
+$(AT)$(QTDIR)/bin/moc -f $< -o $(@D)/$(<F).C
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplib b/wmake/rules/General/mplib
index 294bd86..8ccb07f 100644
--- a/wmake/rules/General/mplib
+++ b/wmake/rules/General/mplib
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       =
 PLIBS      =
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibMPICH b/wmake/rules/General/mplibMPICH
index 611641a..9bf21ec 100644
--- a/wmake/rules/General/mplibMPICH
+++ b/wmake/rules/General/mplibMPICH
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpich -lrt
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibMPICH-GM b/wmake/rules/General/mplibMPICH-GM
index 1921318..6c569ec 100644
--- a/wmake/rules/General/mplibMPICH-GM
+++ b/wmake/rules/General/mplibMPICH-GM
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpich -L$(GM_LIB_PATH) -lgm
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibOPENMPI b/wmake/rules/General/mplibOPENMPI
index f1f8899..216ce56 100644
--- a/wmake/rules/General/mplibOPENMPI
+++ b/wmake/rules/General/mplibOPENMPI
@@ -1,3 +1,4 @@
 PFLAGS     = -DOMPI_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpi
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibQSMPI b/wmake/rules/General/mplibQSMPI
index aa15c1b..d54766d 100644
--- a/wmake/rules/General/mplibQSMPI
+++ b/wmake/rules/General/mplibQSMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSGIMPI b/wmake/rules/General/mplibSGIMPI
index 205b940..4fda8ee 100644
--- a/wmake/rules/General/mplibSGIMPI
+++ b/wmake/rules/General/mplibSGIMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DSGIMPI -DMPI_NO_CPPBIND
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSYSTEMMPI b/wmake/rules/General/mplibSYSTEMMPI
index a0d3d30..112530e 100644
--- a/wmake/rules/General/mplibSYSTEMMPI
+++ b/wmake/rules/General/mplibSYSTEMMPI
@@ -3,3 +3,5 @@
 PFLAGS     = $(MPI_ARCH_FLAGS)
 PINC       = $(MPI_ARCH_INC)
 PLIBS      = $(MPI_ARCH_LIBS)
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSYSTEMOPENMPI b/wmake/rules/General/mplibSYSTEMOPENMPI
index 639c8ce..c0854b7 100644
--- a/wmake/rules/General/mplibSYSTEMOPENMPI
+++ b/wmake/rules/General/mplibSYSTEMOPENMPI
@@ -3,3 +3,5 @@
 PFLAGS     = -DOMPI_SKIP_MPICXX
 PINC       = $(shell mpicc --showme:compile)
 PLIBS      = $(shell mpicc --showme:link)
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/standard b/wmake/rules/General/standard
index ccd69ce..2534345 100644
--- a/wmake/rules/General/standard
+++ b/wmake/rules/General/standard
@@ -11,4 +11,4 @@ include $(GENERAL_RULES)/bison
 include $(GENERAL_RULES)/moc
 include $(GENERAL_RULES)/X
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/transform b/wmake/rules/General/transform
index bffe605..5e06256 100644
--- a/wmake/rules/General/transform
+++ b/wmake/rules/General/transform
@@ -2,14 +2,16 @@
 
 define DEFINE_TRANSFORM
 $(OBJECTS_DIR)/%.o : %$1
-	$$($(subst .,,$(1))too)
+	$(call WM_MESSAGE,CC,$(value <F))
+	$(AT)$$($(subst .,,$(1))too)
 endef
 
 $(foreach s,$(SUFFIXES),$(eval $(call DEFINE_TRANSFORM,$(s))))
 
 $(OBJECTS_DIR)/%.dep : %
 	@$(WM_SCRIPTS)/makeTargetDir $@
+	$(call WM_MESSAGE,DEP,$(notdir $<))
 	@$(WMAKE_BIN)/wmkdep -I$(*D) $(LIB_HEADER_DIRS) $< | \
 	    sed 's,$(WM_PROJECT_DIR),$$(WM_PROJECT_DIR),' > $@
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/version b/wmake/rules/General/version
index ffd070d..911ab5d 100644
--- a/wmake/rules/General/version
+++ b/wmake/rules/General/version
@@ -3,10 +3,10 @@
 SUFFIXES += .Cver
 
 # Update version strings in C++ file and in $WM_PROJECT_DIR/.build file
-Cvertoo = \
-    sed -e 's!VERSION_STRING!$(shell wmakePrintBuild -major)!' \
-        -e 's!BUILD_STRING!$(shell wmakePrintBuild -update)!' \
-        $< > $(@D)/$(<F).C; \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+Cvertoo = sed -e 's!VERSION_STRING!$(shell wmakePrintBuild -major)!' \
+	  -e 's!BUILD_STRING!$(shell wmakePrintBuild -update)!' \
+	  $< > $(@D)/$(<F).C; \
+	  $(call MESSAGE,CC,$(notdir $(@D)/$(<F).C)); \
+	  $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/yacc b/wmake/rules/General/yacc
index d583a63..91a5463 100644
--- a/wmake/rules/General/yacc
+++ b/wmake/rules/General/yacc
@@ -1,7 +1,19 @@
 SUFFIXES += .y .Y
 
-ytoo = yacc -v -d $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/parser.h ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).c -o $@
+define ytoo
+$(call WM_MESSAGE,YY,$(notdir $<))
+$(AT)yacc -v -d $<
+$(AT)mv y.tab.c $(@D)/$(<F).c
+$(AT)mv y.tab.h $(@D)/parser.h
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).c -o $@
+endef
 
-Ytoo = yacc -v -d $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/parser.H ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define Ytoo
+$(call WM_MESSAGE,YY,$(notdir $<))
+$(AT)yacc -v -d $<
+$(AT)mv y.tab.c $(@D)/$(<F).C
+$(AT)mv y.tab.h $(@D)/parser.H
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c b/wmake/rules/darwin64Clang/c
new file mode 100644
index 0000000..5aeb7e5
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c
@@ -0,0 +1,23 @@
+SUFFIXES += .c
+
+cWARN        = -Wall
+
+cc          = xcrun cc -arch x86_64
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ifneq ("$(OSX_SDK_PATH)","")
+cFLAGS += -isysroot $(OSX_SDK_PATH)
+endif
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $< -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -Wl,-dylib,-undefined,dynamic_lookup
+
+LINKEXE     = $(cc) -Wl,-execute,-undefined,dynamic_lookup
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++ b/wmake/rules/darwin64Clang/c++
new file mode 100644
index 0000000..817522d
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++
@@ -0,0 +1,35 @@
+SUFFIXES += .C
+SUFFIXES += .cxx
+SUFFIXES += .cc
+SUFFIXES += .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wno-overloaded-virtual \
+              -Wno-unused-variable -Wno-unused-local-typedef -Wno-invalid-offsetof \
+	      -Wno-deprecated-register -Wno-undefined-var-template
+
+c++LESSWARN = -Wno-shift-negative-value
+
+CC          = xcrun c++ -arch x86_64 -std=c++14
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+ifneq ("$(OSX_SDK_PATH)","")
+c++FLAGS += -isysroot $(OSX_SDK_PATH)
+endif
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $< -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG)
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -Wl,-dylib,-undefined,dynamic_lookup
+
+LINKEXE     = $(CC) $(c++FLAGS) -Wl,-execute,-undefined,dynamic_lookup
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Debug b/wmake/rules/darwin64Clang/c++Debug
new file mode 100644
index 0000000..0ed0af6
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Debug
@@ -0,0 +1,4 @@
+c++DBUG    = -g -DFULLDEBUG
+c++OPT      = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Opt b/wmake/rules/darwin64Clang/c++Opt
new file mode 100644
index 0000000..db78543
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Opt
@@ -0,0 +1,5 @@
+#c++DBUG     = -O0 -DFULLDEBUG -g
+c++DBUG     =
+c++OPT      = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Prof b/wmake/rules/darwin64Clang/c++Prof
new file mode 100644
index 0000000..f86e0d9
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Prof
@@ -0,0 +1,4 @@
+c++DBUG    = -gline-tables-only
+c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cDebug b/wmake/rules/darwin64Clang/cDebug
new file mode 100644
index 0000000..d455989
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cDebug
@@ -0,0 +1,4 @@
+cDBUG       = -g -DFULLDEBUG
+cOPT        = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cOpt b/wmake/rules/darwin64Clang/cOpt
new file mode 100644
index 0000000..0c2e03c
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cOpt
@@ -0,0 +1,4 @@
+cDBUG       =
+cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cProf b/wmake/rules/darwin64Clang/cProf
new file mode 100644
index 0000000..864f043
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cProf
@@ -0,0 +1,4 @@
+cDBUG       = -pg
+cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/general b/wmake/rules/darwin64Clang/general
new file mode 100644
index 0000000..9de78f2
--- /dev/null
+++ b/wmake/rules/darwin64Clang/general
@@ -0,0 +1,12 @@
+CPP        = xcrun cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+OSX_SDK_PATH = $(shell xcrun --show-sdk-path)
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c b/wmake/rules/linux64Clang/c
index b743e3f..fdaa072 100644
--- a/wmake/rules/linux64Clang/c
+++ b/wmake/rules/linux64Clang/c
@@ -14,3 +14,5 @@ LINK_LIBS   = $(cDBUG)
 
 LINKLIBSO   = $(cc) -shared
 LINKEXE     = $(cc) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++ b/wmake/rules/linux64Clang/c++
index 84ed0f4..4bb059b 100644
--- a/wmake/rules/linux64Clang/c++
+++ b/wmake/rules/linux64Clang/c++
@@ -22,3 +22,5 @@ LINK_LIBS   = $(c++DBUG)
 
 LINKLIBSO   = $(CC) $(c++FLAGS) -shared
 LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Debug b/wmake/rules/linux64Clang/c++Debug
index 1c63335..0ed0af6 100644
--- a/wmake/rules/linux64Clang/c++Debug
+++ b/wmake/rules/linux64Clang/c++Debug
@@ -1,2 +1,4 @@
 c++DBUG    = -g -DFULLDEBUG
 c++OPT      = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Opt b/wmake/rules/linux64Clang/c++Opt
index 2aedabd..a741879 100644
--- a/wmake/rules/linux64Clang/c++Opt
+++ b/wmake/rules/linux64Clang/c++Opt
@@ -1,2 +1,4 @@
 c++DBUG     =
 c++OPT      = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Prof b/wmake/rules/linux64Clang/c++Prof
index 3bda4da..e2b16ef 100644
--- a/wmake/rules/linux64Clang/c++Prof
+++ b/wmake/rules/linux64Clang/c++Prof
@@ -1,2 +1,4 @@
 c++DBUG    = -pg
 c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cDebug b/wmake/rules/linux64Clang/cDebug
index 7b7adf1..d455989 100644
--- a/wmake/rules/linux64Clang/cDebug
+++ b/wmake/rules/linux64Clang/cDebug
@@ -1,2 +1,4 @@
 cDBUG       = -g -DFULLDEBUG
 cOPT        = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cOpt b/wmake/rules/linux64Clang/cOpt
index 1731870..0c2e03c 100644
--- a/wmake/rules/linux64Clang/cOpt
+++ b/wmake/rules/linux64Clang/cOpt
@@ -1,2 +1,4 @@
 cDBUG       =
 cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cProf b/wmake/rules/linux64Clang/cProf
index ca3ac9b..864f043 100644
--- a/wmake/rules/linux64Clang/cProf
+++ b/wmake/rules/linux64Clang/cProf
@@ -1,2 +1,4 @@
 cDBUG       = -pg
 cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/general b/wmake/rules/linux64Clang/general
index 1002cb1..6065b13 100644
--- a/wmake/rules/linux64Clang/general
+++ b/wmake/rules/linux64Clang/general
@@ -6,3 +6,5 @@ include $(GENERAL_RULES)/standard
 
 include $(DEFAULT_RULES)/c
 include $(DEFAULT_RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/mplibHPMPI b/wmake/rules/linux64Clang/mplibHPMPI
index d7c4b0c..57cba69 100644
--- a/wmake/rules/linux64Clang/mplibHPMPI
+++ b/wmake/rules/linux64Clang/mplibHPMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
 PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/mplibINTELMPI b/wmake/rules/linux64Clang/mplibINTELMPI
index 278e0b0..634628d 100644
--- a/wmake/rules/linux64Clang/mplibINTELMPI
+++ b/wmake/rules/linux64Clang/mplibINTELMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include64
 PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c b/wmake/rules/linux64Gcc/c
index 1097b3a..6dd2f9a 100644
--- a/wmake/rules/linux64Gcc/c
+++ b/wmake/rules/linux64Gcc/c
@@ -14,3 +14,5 @@ LINK_LIBS   = $(cDBUG)
 
 LINKLIBSO   = $(cc) -shared
 LINKEXE     = $(cc) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++ b/wmake/rules/linux64Gcc/c++
index a47d0d4..a4a0c0d 100644
--- a/wmake/rules/linux64Gcc/c++
+++ b/wmake/rules/linux64Gcc/c++
@@ -22,3 +22,5 @@ LINK_LIBS   = $(c++DBUG)
 
 LINKLIBSO   = $(CC) $(c++FLAGS) -shared -Xlinker --add-needed -Xlinker --no-as-needed
 LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed -Xlinker --no-as-needed
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Debug b/wmake/rules/linux64Gcc/c++Debug
index 19bdb9c..bcc9059 100644
--- a/wmake/rules/linux64Gcc/c++Debug
+++ b/wmake/rules/linux64Gcc/c++Debug
@@ -1,2 +1,4 @@
 c++DBUG    = -ggdb3 -DFULLDEBUG
 c++OPT      = -O0 -fdefault-inline
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Opt b/wmake/rules/linux64Gcc/c++Opt
index 599e6ab..5b0c396 100644
--- a/wmake/rules/linux64Gcc/c++Opt
+++ b/wmake/rules/linux64Gcc/c++Opt
@@ -2,3 +2,5 @@ c++DBUG     =
 c++OPT      = -O3
 
 ROUNDING_MATH = -frounding-math
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Prof b/wmake/rules/linux64Gcc/c++Prof
index 3bda4da..e2b16ef 100644
--- a/wmake/rules/linux64Gcc/c++Prof
+++ b/wmake/rules/linux64Gcc/c++Prof
@@ -1,2 +1,4 @@
 c++DBUG    = -pg
 c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cDebug b/wmake/rules/linux64Gcc/cDebug
index 72b638f..4bd3224 100644
--- a/wmake/rules/linux64Gcc/cDebug
+++ b/wmake/rules/linux64Gcc/cDebug
@@ -1,2 +1,4 @@
 cDBUG       = -ggdb -DFULLDEBUG
 cOPT        = -O1 -fdefault-inline -finline-functions
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cOpt b/wmake/rules/linux64Gcc/cOpt
index 1731870..0c2e03c 100644
--- a/wmake/rules/linux64Gcc/cOpt
+++ b/wmake/rules/linux64Gcc/cOpt
@@ -1,2 +1,4 @@
 cDBUG       =
 cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cProf b/wmake/rules/linux64Gcc/cProf
index ca3ac9b..864f043 100644
--- a/wmake/rules/linux64Gcc/cProf
+++ b/wmake/rules/linux64Gcc/cProf
@@ -1,2 +1,4 @@
 cDBUG       = -pg
 cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/general b/wmake/rules/linux64Gcc/general
index 1002cb1..6065b13 100644
--- a/wmake/rules/linux64Gcc/general
+++ b/wmake/rules/linux64Gcc/general
@@ -6,3 +6,5 @@ include $(GENERAL_RULES)/standard
 
 include $(DEFAULT_RULES)/c
 include $(DEFAULT_RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/mplibHPMPI b/wmake/rules/linux64Gcc/mplibHPMPI
index d7c4b0c..57cba69 100644
--- a/wmake/rules/linux64Gcc/mplibHPMPI
+++ b/wmake/rules/linux64Gcc/mplibHPMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
 PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/mplibINTELMPI b/wmake/rules/linux64Gcc/mplibINTELMPI
index 278e0b0..634628d 100644
--- a/wmake/rules/linux64Gcc/mplibINTELMPI
+++ b/wmake/rules/linux64Gcc/mplibINTELMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include64
 PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/scripts/AllwmakeParseArguments b/wmake/scripts/AllwmakeParseArguments
index d77c86f..c1722e4 100644
--- a/wmake/scripts/AllwmakeParseArguments
+++ b/wmake/scripts/AllwmakeParseArguments
@@ -85,6 +85,9 @@ setWM_NCOMPPROCS()
     if [ -r /proc/cpuinfo ]
     then
         WM_NCOMPPROCS=$(egrep "^processor" /proc/cpuinfo | wc -l)
+    elif [ -x /usr/sbin/sysctl -a -n "$(sysctl -q -n hw.ncpu)" ]
+    then
+        WM_NCOMPPROCS=$(sysctl -n hw.ncpu)
     else
         WM_NCOMPPROCS=1
     fi
diff --git a/wmake/scripts/wmakeFunctions b/wmake/scripts/wmakeFunctions
index 63cbb9f..9828ee4 100755
--- a/wmake/scripts/wmakeFunctions
+++ b/wmake/scripts/wmakeFunctions
@@ -85,7 +85,7 @@ findObjectDir()
     wmpdir=$exPath
     expandPath $1
 
-    if echo $exPath | grep "$wmpdir" > /dev/null
+    if echo $exPath | grep --colour=never "$wmpdir" > /dev/null
     then
         platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
         objectsDir=$platformPath$(echo $exPath | sed s%$wmpdir%% )
diff --git a/wmake/src/Makefile b/wmake/src/Makefile
index f14baad..eb7e273 100644
--- a/wmake/src/Makefile
+++ b/wmake/src/Makefile
@@ -49,9 +49,15 @@ SHELL      = /bin/sh
 # Locally set optimized compilation
 WM_COMPILE_OPTION = Opt
 
+V = 1
+ifneq ("$(WM_QUIET_RULES)","")
+V = 0
+endif
+
 GENERAL_RULES   = $(WM_DIR)/rules/General
 include $(GENERAL_RULES)/general
 
+cFLAGS += -Wno-unused-function
 
 #------------------------------------------------------------------------------
 # Targets
@@ -65,13 +71,15 @@ clean:
 
 $(WMAKE_BIN)/dirToString: dirToString.c
 	@mkdir -p $(WMAKE_BIN)
-	$(cc) $(cFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
+	$(call WM_MESSAGE,cc,dirToString.c)
+	$(AT)$(cc) $(cFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
 
 
 $(WMAKE_BIN)/wmkdep: wmkdep.l
 	@mkdir -p $(WMAKE_BIN)
-	flex wmkdep.l
-	$(cc) $(cFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
+	$(call WM_MESSAGE,ll,$<)
+	$(AT)flex $<
+	$(AT)$(cc) $(cFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
 	@rm -f lex.yy.c 2>/dev/null
 
 
diff --git a/wmake/src/wmkdep.l b/wmake/src/wmkdep.l
index a98a597..d5ad12f 100644
--- a/wmake/src/wmkdep.l
+++ b/wmake/src/wmkdep.l
@@ -47,6 +47,7 @@ Usage
 #include <sys/types.h>
 #include <dirent.h>
 #include <errno.h>
+#include <libgen.h>
 
 void nextFile(const char* fileName);
 void importFile(const char* fileName);
@@ -154,7 +155,18 @@ int main(int argc, char* argv[])
     }
 
     sourceFile = strdup(argv[argc-1]);
-    fprintf(stderr, "Making dependency list for source file %s\n", sourceFile);
+/*
+    verbose = (strncmp(argv[1], "-v", 2) == 0);
+    if (verbose)
+    {
+        fprintf(stderr, "Making dependency list for source file %s\n",
+	        sourceFile);
+    }
+    else
+    {
+        fprintf(stderr, " [DEP] %s\n", basename(sourceFile));
+    }
+*/
 
 
     if ((basePos = strrchr(sourceFile, '/')) == NULL)
diff --git a/wmake/wclean b/wmake/wclean
index 9f18e9c..996777d 100755
--- a/wmake/wclean
+++ b/wmake/wclean
@@ -171,10 +171,10 @@ then
                 then
                     # Delete the respective binary first
                     binaryFile=$(cat $variablesFile |
-                                grep -e '^ *\(EXE\|LIB\) *= *' )
+                                grep --colour=never -e '^ *\(EXE\|LIB\) *= *' )
 
                     # Catch all file extension (o,a,so,?+) for libraries
-                    if echo $binaryFile | grep -qe '^ *LIB *= *'
+                    if echo $binaryFile | grep --colour=never -qe '^ *LIB *= *'
                     then
                         binaryFile="${binaryFile}.*"
                     fi
@@ -248,7 +248,7 @@ unset targetType
 if [ -d $MakeDir ]
 then
     objectsDir=$MakeDir/$WM_OPTIONS
-    if echo $PWD | grep "$WM_PROJECT_DIR"
+    if echo $PWD | grep --colour=never "$WM_PROJECT_DIR"
     then
         platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
         objectsDir=$platformPath$(echo $PWD | sed s%$WM_PROJECT_DIR%% )
diff --git a/wmake/wmake b/wmake/wmake
index 821c5bb..9756386 100755
--- a/wmake/wmake
+++ b/wmake/wmake
@@ -64,6 +64,7 @@ Usage: $Script [OPTION] [dir]
        $Script [OPTION] target [dir [MakeDir]]
 
 options:
+  -q | -quiet       Be quiet (use more terse output)
   -s | -silent      Run make in 'silent' mode (do not echo commands)
   -a | -all         Run wmake in all subdirectories
   -h | -help        Print the usage
@@ -99,6 +100,9 @@ make="make"
 
 # Default to compiling the local target only
 all=
+# Default to be noisy if WM_QUIET_RULES is not set
+quiet=
+[ -n "$WM_QUIET_RULES" ] && quiet="V=0"
 
 while [ "$#" -gt 0 ]
 do
@@ -106,6 +110,9 @@ do
     -h | -help)
         usage
         ;;
+    -q | -quiet)
+        quiet="V=0"
+        ;;
     -s | -silent)
         make="$make -s"
         shift
@@ -235,7 +242,7 @@ then
             # Compile all applications in sub-directories
             $make ${WM_CONTINUE_ON_ERROR:+-k} \
                   -f $WM_DIR/makefiles/apps \
-                  TARGET="$targetType" FOAM_APPS="$FOAM_APPS"
+                  TARGET="$targetType" FOAM_APPS="$FOAM_APPS" $quiet
             makeExitCode=$?
         fi
         # If the current directory contains a 'Make' directory continue
@@ -318,7 +325,7 @@ fi
 if [ "$targetType" = "" ]
 then
     unset targetType
-    if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+    if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
     then
         targetType=libso
     fi
@@ -331,7 +338,7 @@ fi
 #------------------------------------------------------------------------------
 
 objectsDir=$MakeDir/$WM_OPTIONS
-if echo $PWD | grep "$WM_PROJECT_DIR"
+if echo $PWD | grep --colour=never "$WM_PROJECT_DIR"
 then
     platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
     objectsDir=$platformPath$(echo $PWD | sed s%$WM_PROJECT_DIR%% )
@@ -344,10 +351,10 @@ fi
     # Pre-build the $WM_OPTIONS/options file
     # which is included when building the $WM_OPTIONS/files file
     $make -s -f $WM_DIR/makefiles/files MAKE_DIR=$MakeDir \
-          OBJECTS_DIR=$objectsDir $objectsDir/options
+          OBJECTS_DIR=$objectsDir $quiet $objectsDir/options
 
     $make -s -f $WM_DIR/makefiles/files MAKE_DIR=$MakeDir \
-          OBJECTS_DIR=$objectsDir
+          OBJECTS_DIR=$objectsDir $quiet
 )
 
 
@@ -370,10 +377,10 @@ fi
 case "$targetType" in
     lib | libo | libso | dep )
         # ... but only if 'LIB' is declared in 'Make/files'
-        if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+        if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
         then
             $make -s -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
-                  OBJECTS_DIR=$objectsDir lnInclude
+                  OBJECTS_DIR=$objectsDir $quiet lnInclude
         fi
         ;;
 esac
@@ -387,7 +394,7 @@ if [ -n "$WM_UPDATE_DEPENDENCIES" ]
 then
 
     $make -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
-        OBJECTS_DIR=$objectsDir updatedep
+        OBJECTS_DIR=$objectsDir $quiet updatedep
     makeExitCode=$?
 
     if [ $makeExitCode -ne 0 ]
@@ -404,7 +411,7 @@ fi
 #------------------------------------------------------------------------------
 
 exec $make -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
-     OBJECTS_DIR=$objectsDir $targetType
+     OBJECTS_DIR=$objectsDir $quiet $targetType
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/wmakeLnInclude b/wmake/wmakeLnInclude
index 28f4276..3753288 100755
--- a/wmake/wmakeLnInclude
+++ b/wmake/wmakeLnInclude
@@ -143,7 +143,12 @@ cd $incDir || exit 1
 
 if [ "$silentOpt" != true ]
 then
-    echo "$Script: linking include files to $incDir" 1>&2
+    if [ -n "$WM_QUIET_RULES" ]
+    then
+        echo "  LN	$incDir" 1>&2
+    else
+        echo "$Script: linking include files to $incDir" 1>&2
+    fi
 fi
 
 
diff --git a/wmake/wmakeLnIncludeAll b/wmake/wmakeLnIncludeAll
index 7c4c3fa..12062ac 100755
--- a/wmake/wmakeLnIncludeAll
+++ b/wmake/wmakeLnIncludeAll
@@ -91,7 +91,7 @@ do
         topDir=${MakeDir%/Make}    # trim /Make from the end
         if [ -d "$topDir" ]
         then
-            if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+            if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
             then
                 wmakeLnInclude -update $topDir
             elif [ -d "$topDir/lnInclude" ]
diff --git a/wmake/wrmdep b/wmake/wrmdep
index 49e2934..8fab8cf 100755
--- a/wmake/wrmdep
+++ b/wmake/wrmdep
@@ -152,7 +152,7 @@ files)
         find $objectsDir -name '*.dep' -print | xargs -t rm 2>/dev/null
     else
         echo "removing .dep files referring to $1 ..."
-        find $objectsDir -name '*.dep' -exec grep -q "$1" '{}' \; \
+        find $objectsDir -name '*.dep' -exec grep --colour=never -q "$1" '{}' \; \
              -exec rm '{}' \; -print
     fi
 
