 .gitignore                                         |   1 +
 Allwmake                                           |  17 ++-
 applications/Allwmake                              |  14 +-
 .../scalarTransportFoam/scalarTransportFoam.C      |   6 +-
 .../DelaunayMesh/DelaunayMesh.C                    |   1 +
 .../foamyMesh/conformalVoronoiMesh/Make/options    |   3 +-
 .../cellSizeAndAlignmentControl.H                  |   1 +
 .../CGALTriangulation3DKernel.H                    |   2 +
 .../foamyQuadMesh/CGALTriangulation2DKernel.H      |   2 +
 .../foamyMesh/foamyQuadMesh/Make/options           |   3 +-
 .../mesh/generation/snappyHexMesh/Make/options     |   1 -
 .../mesh/manipulation/renumberMesh/Make/options    |   1 -
 .../dataConversion/foamToEnsight/Make/options      |   1 -
 .../postProcessing/graphics/PV3Readers/Allwmake    |   3 +
 .../postProcessing/graphics/PV4Readers/Allwmake    |   3 +
 bin/foamInstallationTest                           |  21 ++-
 bin/foamJob                                        |   6 +
 bin/foamMonitor                                    |  11 +-
 bin/paraFoam                                       |   5 +
 bin/tools/RunFunctions                             | 123 ++++++++++++----
 etc/bashrc                                         |  70 +++++++--
 etc/config/CGAL.sh                                 |  55 ++++++-
 etc/config/metis.sh                                |  39 ++++-
 etc/config/paraview-osx.sh                         |  17 +++
 etc/config/scotch.sh                               |  47 +++++-
 etc/config/settings.sh                             | 112 ++++++++++++--
 src/Allwmake                                       |  18 ++-
 src/OSspecific/POSIX/POSIX.C                       |  36 +++++
 src/OSspecific/POSIX/clockTime/clockTime.H         |   3 +
 src/OSspecific/POSIX/printStack.C                  |  72 +++++++--
 src/OSspecific/POSIX/signals/sigFpe.C              |  92 +++++++++++-
 src/OSspecific/POSIX/signals/sigFpe.H              |  14 +-
 src/OpenFOAM/Make/files                            |   6 +
 src/OpenFOAM/db/IOstreams/IOstreams.H              |   4 +
 .../db/dynamicLibrary/dynamicCode/dynamicCode.C    |   4 +
 .../db/dynamicLibrary/dynamicCode/dynamicCode.H    |   4 +
 src/OpenFOAM/primitives/Scalar/doubleFloat.H       |  15 ++
 src/OpenFOAM/primitives/ints/int/int.H             |   8 +
 src/OpenFOAM/primitives/ints/long/long.C           |  50 +++++++
 src/OpenFOAM/primitives/ints/long/long.H           | 138 ++++++++++++++++++
 src/OpenFOAM/primitives/ints/long/longIO.C         | 104 +++++++++++++
 src/OpenFOAM/primitives/ints/ulong/ulong.C         |  52 +++++++
 src/OpenFOAM/primitives/ints/ulong/ulong.H         | 138 ++++++++++++++++++
 src/OpenFOAM/primitives/ints/ulong/ulongIO.C       | 101 +++++++++++++
 .../primitives/ranges/labelRange/labelRangeI.H     |   4 +-
 .../primitives/ranges/labelRange/labelRangesI.H    |   2 +-
 src/conversion/ensight/part/ensightPartCells.C     |   4 +-
 src/fvAgglomerationMethods/Allwmake                |   9 +-
 .../MGridGenGamgAgglomeration/Make/options         |  16 +-
 .../edgeFaceCirculator/edgeFaceCirculator.C        |   2 +-
 src/parallel/decompose/metisDecomp/Allwmake        |   6 +-
 src/parallel/decompose/metisDecomp/Make/options    |   1 -
 src/parallel/decompose/metisDecomp/metisDecomp.C   |   6 +-
 src/parallel/decompose/ptscotchDecomp/Make/options |  10 +-
 src/parallel/decompose/scotchDecomp/Make/options   |   8 +-
 src/renumber/SloanRenumber/Make/options            |  31 ++--
 wmake/makeWmake                                    |  73 ----------
 wmake/{MakefileApps => makefiles/apps}             |   7 +-
 wmake/{MakefileFiles => makefiles/files}           |  36 ++---
 wmake/{Makefile => makefiles/general}              |  89 +++++------
 wmake/rules/General/CGAL                           |   2 +
 wmake/rules/General/X                              |   2 +
 wmake/rules/General/bison                          |  16 +-
 wmake/rules/General/btyacc                         |  11 +-
 wmake/rules/General/btyacc++                       |   4 +-
 wmake/rules/General/byacc                          |  11 +-
 wmake/rules/General/flex                           |   8 +-
 wmake/rules/General/flex++                         |   8 +-
 wmake/rules/General/general                        |  41 +++++-
 wmake/rules/General/moc                            |   8 +-
 wmake/rules/General/mplib                          |   2 +
 wmake/rules/General/mplibMPICH                     |   2 +
 wmake/rules/General/mplibMPICH-GM                  |   2 +
 wmake/rules/General/mplibOPENMPI                   |   1 +
 wmake/rules/General/mplibQSMPI                     |   2 +
 wmake/rules/General/mplibSGIMPI                    |   2 +
 wmake/rules/General/mplibSYSTEMMPI                 |   2 +
 wmake/rules/General/mplibSYSTEMOPENMPI             |   2 +
 wmake/rules/General/standard                       |   2 +-
 wmake/rules/General/transform                      |   6 +-
 wmake/rules/General/version                        |  12 +-
 wmake/rules/General/yacc                           |  20 ++-
 wmake/rules/darwin64Clang/c                        |  23 +++
 wmake/rules/darwin64Clang/c++                      |  35 +++++
 wmake/rules/darwin64Clang/c++Debug                 |   4 +
 wmake/rules/darwin64Clang/c++Opt                   |   5 +
 wmake/rules/darwin64Clang/c++Prof                  |   4 +
 wmake/rules/darwin64Clang/cDebug                   |   4 +
 wmake/rules/darwin64Clang/cOpt                     |   4 +
 wmake/rules/darwin64Clang/cProf                    |   4 +
 wmake/rules/darwin64Clang/general                  |  12 ++
 wmake/rules/linux64Clang/c                         |   4 +-
 wmake/rules/linux64Clang/c++                       |   6 +-
 wmake/rules/linux64Clang/c++Debug                  |   2 +
 wmake/rules/linux64Clang/c++Opt                    |   3 +-
 wmake/rules/linux64Clang/c++Prof                   |   2 +
 wmake/rules/linux64Clang/cDebug                    |   2 +
 wmake/rules/linux64Clang/cOpt                      |   2 +
 wmake/rules/linux64Clang/cProf                     |   2 +
 wmake/rules/linux64Clang/general                   |   6 +-
 wmake/rules/linux64Clang/mplibHPMPI                |   2 +
 wmake/rules/linux64Clang/mplibINTELMPI             |   2 +
 wmake/rules/linux64Gcc/c                           |   4 +-
 wmake/rules/linux64Gcc/c++                         |   6 +-
 wmake/rules/linux64Gcc/c++Debug                    |   2 +
 wmake/rules/linux64Gcc/c++Opt                      |   2 +
 wmake/rules/linux64Gcc/c++Prof                     |   2 +
 wmake/rules/linux64Gcc/cDebug                      |   2 +
 wmake/rules/linux64Gcc/cOpt                        |   2 +
 wmake/rules/linux64Gcc/cProf                       |   2 +
 wmake/rules/linux64Gcc/general                     |   6 +-
 wmake/rules/linux64Gcc/mplibHPMPI                  |   2 +
 wmake/rules/linux64Gcc/mplibINTELMPI               |   2 +
 wmake/rules/linux64Gcc45                           |   1 -
 wmake/rules/linux64Gcc46                           |   1 -
 wmake/rules/linux64Gcc47                           |   1 -
 wmake/rules/linux64Gcc48                           |   1 -
 wmake/rules/linux64Gcc49                           |   1 -
 wmake/rules/linux64Gcc51                           |   1 -
 wmake/rules/linux64GccKNL/c                        |  16 ++
 wmake/rules/linux64GccKNL/c++                      |  24 +++
 wmake/rules/linux64GccKNL/c++Debug                 |   2 +
 wmake/rules/linux64GccKNL/c++Opt                   |   4 +
 wmake/rules/linux64GccKNL/c++Prof                  |   2 +
 wmake/rules/linux64GccKNL/cDebug                   |   2 +
 wmake/rules/linux64GccKNL/cOpt                     |   2 +
 wmake/rules/linux64GccKNL/cProf                    |   2 +
 wmake/rules/linux64GccKNL/general                  |   8 +
 wmake/rules/linux64GccKNL/mplibHPMPI               |   3 +
 wmake/rules/linux64GccKNL/mplibINTELMPI            |   3 +
 wmake/rules/linux64Icc/c                           |   2 +-
 wmake/rules/linux64Icc/c++                         |   4 +-
 wmake/rules/linux64Icc/general                     |   4 +-
 wmake/rules/linux64IccKNL/c                        |  16 ++
 wmake/rules/linux64IccKNL/c++                      |  25 ++++
 wmake/rules/linux64IccKNL/c++Debug                 |   2 +
 wmake/rules/linux64IccKNL/c++Opt                   |   2 +
 wmake/rules/linux64IccKNL/c++Prof                  |   2 +
 wmake/rules/linux64IccKNL/cDebug                   |   2 +
 wmake/rules/linux64IccKNL/cOpt                     |   2 +
 wmake/rules/linux64IccKNL/cProf                    |   2 +
 wmake/rules/linux64IccKNL/general                  |   8 +
 wmake/rules/linux64IccKNL/mplibHPMPI               |   3 +
 wmake/rules/linux64IccKNL/mplibINTELMPI            |   3 +
 wmake/rules/linuxARM7Gcc/c                         |   2 +-
 wmake/rules/linuxARM7Gcc/c++                       |   4 +-
 wmake/rules/linuxARM7Gcc/general                   |   4 +-
 wmake/rules/linuxClang/c                           |   2 +-
 wmake/rules/linuxClang/c++                         |   4 +-
 wmake/rules/linuxClang/general                     |   4 +-
 wmake/rules/linuxGcc/c                             |   2 +-
 wmake/rules/linuxGcc/c++                           |   4 +-
 wmake/rules/linuxGcc/general                       |   4 +-
 wmake/rules/linuxGcc45                             |   1 -
 wmake/rules/linuxGcc46                             |   1 -
 wmake/rules/linuxGcc47                             |   1 -
 wmake/rules/linuxGcc48                             |   1 -
 wmake/rules/linuxGcc49                             |   1 -
 wmake/rules/linuxGcc51                             |   1 -
 wmake/rules/linuxIA64Gcc/c                         |   2 +-
 wmake/rules/linuxIA64Gcc/c++                       |   4 +-
 wmake/rules/linuxIA64Gcc/general                   |   6 +-
 wmake/rules/linuxIA64Icc/c                         |   2 +-
 wmake/rules/linuxIA64Icc/c++                       |   4 +-
 wmake/rules/linuxIA64Icc/general                   |   6 +-
 wmake/rules/linuxIcc/c                             |   2 +-
 wmake/rules/linuxIcc/c++                           |   2 +-
 wmake/rules/linuxIcc/general                       |   4 +-
 wmake/rules/linuxPPC64Gcc/c                        |   2 +-
 wmake/rules/linuxPPC64Gcc/c++                      |   4 +-
 wmake/rules/linuxPPC64Gcc/general                  |   6 +-
 wmake/rules/linuxPPC64leGcc/c                      |   2 +-
 wmake/rules/linuxPPC64leGcc/c++                    |   4 +-
 wmake/rules/linuxPPC64leGcc/general                |   6 +-
 wmake/rules/solaris64Gcc/c                         |   2 +-
 wmake/rules/solaris64Gcc/c++                       |   4 +-
 wmake/rules/solaris64Gcc/general                   |   6 +-
 wmake/rules/solarisGcc/c                           |   2 +-
 wmake/rules/solarisGcc/c++                         |   4 +-
 wmake/rules/solarisGcc/general                     |   6 +-
 wmake/scripts/AllwmakeParseArguments               |  24 ++-
 wmake/scripts/makeFiles                            |   4 +-
 wmake/scripts/wmakeFunctions                       |  18 ++-
 wmake/src/Makefile                                 |  29 ++--
 wmake/src/wmkdep.l                                 |  18 ++-
 wmake/wclean                                       | 125 ++++++++++++++--
 wmake/wcleanAll                                    |  91 ------------
 wmake/wcleanLnIncludeAll                           |   7 +-
 wmake/wcleanMachine                                |  98 -------------
 wmake/wcleanPlatform                               | 127 ++++++++++++++++
 wmake/wdep                                         |   3 +
 wmake/wmake                                        |  72 ++++++---
 wmake/wmakeCheckPwd                                |   5 +-
 wmake/wmakeFilesAndOptions                         |   9 +-
 wmake/wmakeLnInclude                               |  31 ++--
 wmake/wmakeLnIncludeAll                            |  19 ++-
 wmake/wmakePrintBuild                              |   5 +-
 wmake/wmakeScheduler                               |  26 ++--
 wmake/wmakeSchedulerUptime                         |  39 +++--
 wmake/wrmdep                                       | 162 ++++++++++++++++++---
 wmake/wrmdepold                                    | 133 -----------------
 wmake/wrmo                                         |   3 +
 202 files changed, 2519 insertions(+), 850 deletions(-)

diff --git a/.gitignore b/.gitignore
index 28fb9017..fe1ede44 100644
--- a/.gitignore
+++ b/.gitignore
@@ -39,6 +39,7 @@ linux*Gcc*/
 linux*Icc*/
 solaris*Gcc*/
 SunOS*Gcc*/
+darwin*Clang*/
 platforms/
 
 # Reinstate wmake/rules that might look like build directories
diff --git a/Allwmake b/Allwmake
index e0dded16..af7bc9ef 100755
--- a/Allwmake
+++ b/Allwmake
@@ -1,6 +1,17 @@
 #!/bin/sh
 cd ${0%/*} || exit 1    # Run from this directory
 
+# Check if environment is configured
+[ -z "$WM_PROJECT_DIR" ] && {
+# No, it is not, so we source bashrc ourselves
+[ -f "$(pwd)/etc/bashrc" ] && {
+echo
+echo "You have forgotten to source etc/bashrc, so I do it myself."
+echo
+source $(pwd)/etc/bashrc
+}
+}
+
 # Parse arguments for library compilation without documentation by default
 genDoc=0
 targetType=libso
@@ -13,11 +24,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 # Compile wmake support applications
 (cd wmake/src && make)
@@ -27,7 +39,8 @@ if [ -d "$WM_THIRD_PARTY_DIR" ]
 then
     $WM_THIRD_PARTY_DIR/Allwmake
 else
-    echo "Allwmake: no ThirdParty directory found - skipping"
+	[ "$(uname -s)" = "Darwin" ] \
+		|| echo "Allwmake: no ThirdParty directory found - skipping"
 fi
 
 # Compile OpenFOAM libraries and applications
diff --git a/applications/Allwmake b/applications/Allwmake
index f23a233b..9c61fdc9 100755
--- a/applications/Allwmake
+++ b/applications/Allwmake
@@ -1,6 +1,17 @@
 #!/bin/sh
 cd ${0%/*} || exit 1    # Run from this directory
 
+# Check if environment is configured
+[ -z "$WM_PROJECT_DIR" ] && {
+# No, it is not, so we source bashrc ourselves
+[ -f "$(pwd)/../etc/bashrc" ] && {
+echo
+echo "You have forgotten to source etc/bashrc, so I do it myself."
+echo
+source $(pwd)/../etc/bashrc
+}
+}
+
 # Parse arguments for library compilation
 targetType=libso
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
@@ -12,11 +23,12 @@ wmakeCheckPwd "$WM_PROJECT_DIR/applications" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 set -x
 
diff --git a/applications/solvers/basic/scalarTransportFoam/scalarTransportFoam.C b/applications/solvers/basic/scalarTransportFoam/scalarTransportFoam.C
index 2430732e..5c4937b5 100644
--- a/applications/solvers/basic/scalarTransportFoam/scalarTransportFoam.C
+++ b/applications/solvers/basic/scalarTransportFoam/scalarTransportFoam.C
@@ -58,7 +58,7 @@ int main(int argc, char *argv[])
 
         while (simple.correctNonOrthogonal())
         {
-            solve
+            fvScalarMatrix TEqn
             (
                 fvm::ddt(T)
               + fvm::div(phi, T)
@@ -66,6 +66,10 @@ int main(int argc, char *argv[])
              ==
                 fvOptions(T)
             );
+
+            fvOptions.constrain(TEqn);
+
+            TEqn.solve();
         }
 
         runTime.write();
diff --git a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/DelaunayMesh/DelaunayMesh.C b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/DelaunayMesh/DelaunayMesh.C
index eb88c435..3950ce25 100644
--- a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/DelaunayMesh/DelaunayMesh.C
+++ b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/DelaunayMesh/DelaunayMesh.C
@@ -30,6 +30,7 @@ License
 #include "scalarIOField.H"
 #include "labelIOField.H"
 #include "pointConversion.H"
+#include "Time.H"
 
 // * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * //
 
diff --git a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/Make/options b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/Make/options
index 44c1d877..082c0eb9 100644
--- a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/Make/options
+++ b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/Make/options
@@ -23,8 +23,7 @@ EXE_INC = \
     -I$(LIB_SRC)/triSurface/lnInclude \
     -I$(LIB_SRC)/sampling/lnInclude \
     -I$(LIB_SRC)/mesh/autoMesh/lnInclude \
-    -IPrintTable \
-    -I/usr/include
+    -IPrintTable
 
 LIB_LIBS = \
     ${CGAL_LIBS} \
diff --git a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/cellShapeControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl.H b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/cellShapeControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl.H
index adda0867..87194fd3 100644
--- a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/cellShapeControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl.H
+++ b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/cellShapeControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl/cellSizeAndAlignmentControl.H
@@ -35,6 +35,7 @@ SourceFiles
 #ifndef cellSizeAndAlignmentControl_H
 #define cellSizeAndAlignmentControl_H
 
+#include "Switch.H"
 #include "dictionary.H"
 #include "conformationSurfaces.H"
 #include "Time.H"
diff --git a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/conformalVoronoiMesh/CGALTriangulation3DKernel.H b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/conformalVoronoiMesh/CGALTriangulation3DKernel.H
index cdafc7ab..2f52a342 100644
--- a/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/conformalVoronoiMesh/CGALTriangulation3DKernel.H
+++ b/applications/utilities/mesh/generation/foamyMesh/conformalVoronoiMesh/conformalVoronoiMesh/CGALTriangulation3DKernel.H
@@ -31,6 +31,8 @@ Description
 #ifndef CGALTriangulation3DKernel_H
 #define CGALTriangulation3DKernel_H
 
+#pragma clang diagnostic ignored "-Wshift-negative-value"
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 #include "CGAL/Delaunay_triangulation_3.h"
diff --git a/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/CGALTriangulation2DKernel.H b/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/CGALTriangulation2DKernel.H
index 012192b1..31129a27 100644
--- a/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/CGALTriangulation2DKernel.H
+++ b/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/CGALTriangulation2DKernel.H
@@ -31,6 +31,8 @@ Description
 #ifndef CGALTriangulation2DKernel_H
 #define CGALTriangulation2DKernel_H
 
+#pragma clang diagnostic ignored "-Wshift-negative-value"
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 #include "CGAL/Delaunay_triangulation_2.h"
diff --git a/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/Make/options b/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/Make/options
index 0c04fa99..017ff544 100644
--- a/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/Make/options
+++ b/applications/utilities/mesh/generation/foamyMesh/foamyQuadMesh/Make/options
@@ -21,8 +21,7 @@ EXE_INC = \
     -I$(LIB_SRC)/sampling/lnInclude \
     -I$(LIB_SRC)/triSurface/lnInclude \
     -I$(LIB_SRC)/fileFormats/lnInclude \
-    -I$(LIB_SRC)/mesh/autoMesh/lnInclude \
-    -I/usr/include
+    -I$(LIB_SRC)/mesh/autoMesh/lnInclude
 
 EXE_LIBS = \
     $(CGAL_LIBS) \
diff --git a/applications/utilities/mesh/generation/snappyHexMesh/Make/options b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
index 219e3d41..e8b06882 100644
--- a/applications/utilities/mesh/generation/snappyHexMesh/Make/options
+++ b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -g -DFULLDEBUG -O0 */ \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/mesh/autoMesh/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Make/options b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
index 49a1c3d2..882d1e43 100644
--- a/applications/utilities/mesh/manipulation/renumberMesh/Make/options
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     ${COMPILE_FLAGS} \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/dynamicMesh/lnInclude \
diff --git a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
index 77992428..b4382c4d 100644
--- a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
+++ b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/sampling/lnInclude \
diff --git a/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake b/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
index ae0915f2..f974dbbd 100755
--- a/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
+++ b/applications/utilities/postProcessing/graphics/PV3Readers/Allwmake
@@ -2,6 +2,9 @@
 cd ${0%/*} || exit 1    # Run from this directory
 #set -x
 
+# Skip on OS X
+[ "$(uname -s)" = "Darwin" ] && exit 0
+
 case "$ParaView_VERSION" in
 3*)
     if [ -d "$ParaView_DIR" -a -r "$ParaView_DIR" ]
diff --git a/applications/utilities/postProcessing/graphics/PV4Readers/Allwmake b/applications/utilities/postProcessing/graphics/PV4Readers/Allwmake
index 6f6e56b9..694f73f3 100755
--- a/applications/utilities/postProcessing/graphics/PV4Readers/Allwmake
+++ b/applications/utilities/postProcessing/graphics/PV4Readers/Allwmake
@@ -2,6 +2,9 @@
 cd ${0%/*} || exit 1    # Run from this directory
 #set -x
 
+# Skip on OS X
+[ "$(uname -s)" = "Darwin" ] && exit 0
+
 case "$ParaView_VERSION" in
 4*)
     if [ -d "$ParaView_DIR" -a -r "$ParaView_DIR" ]
diff --git a/bin/foamInstallationTest b/bin/foamInstallationTest
index 17b285a5..f11e61e4 100755
--- a/bin/foamInstallationTest
+++ b/bin/foamInstallationTest
@@ -306,13 +306,23 @@ reportExecutable()
         VERSION=`$APP_PATH --version | head -1`
         ;;
     tar)
-        VERSION=`$APP_PATH --version | head -1 | cut -d" " -f4`
-        ;;
+		case "$OSTYPE" in
+		Darwin)
+			VERSION=`$APP_PATH --version | head -1 | cut -d" " -f2`
+			;;
+		*)
+			VERSION=`$APP_PATH --version | head -1 | cut -d" " -f4`
+			;;
+		esac
+		;;
     gzip)
         case "$OSTYPE" in
         SunOS)
             VERSION=`$1 --version 2>&1 | grep gzip | cut -d" " -f2`
             ;;
+		Darwin)
+            VERSION=`$1 --version 2>&1`
+			;;
         *)
             VERSION=`$1 --version | head -1 | cut -d" " -f2`
             ;;
@@ -341,6 +351,7 @@ reportExecutable()
 checkOpenFOAMEnvironment()
 {
     [ -d "$WM_PROJECT_INST_DIR" ] && [ -d "$WM_THIRD_PARTY_DIR" ] || {
+		[ "$(uname -s)" = "Darwin" ] && return 0
         echo ""
         echo "FATAL ERROR: OpenFOAM environment not configured."
         echo ""
@@ -388,7 +399,7 @@ checkHostName()
 checkOS()
 {
     case "$OSTYPE" in
-    Linux | LinuxAMD64 | SunOS )
+    Linux | LinuxAMD64 | SunOS | Darwin )
         echo "`fixlen OS: $WIDTH` $OSTYPE version $(uname -r)"
         ;;
     *)
@@ -429,7 +440,7 @@ echo "$COL1 $COL2 $COL3      $COL5"
 hline
 reportEnv '$WM_PROJECT_INST_DIR' 'noPath' "yes"
 reportEnv '$WM_PROJECT_USER_DIR' 'noPath' "no"
-reportEnv '$WM_THIRD_PARTY_DIR'  'noPath' "yes"
+[ "$(uname -s)" = "Darwin" ] || reportEnv '$WM_THIRD_PARTY_DIR'  'noPath' "yes"
 hline
 
 #------------------------------------------------------------------------------
@@ -468,7 +479,7 @@ reportExecutable flex
 reportExecutable "$WM_CC"
 reportExecutable "$WM_CXX"
 reportExecutable gzip
-if [ "$OSTYPE" = Linux ]
+if [ "$OSTYPE" = Linux -o "$OSTYPE" = "Darwin" ]
 then
     reportExecutable tar
 else
diff --git a/bin/foamJob b/bin/foamJob
index 6646e5dd..512ab761 100755
--- a/bin/foamJob
+++ b/bin/foamJob
@@ -277,6 +277,12 @@ then
     fi
 
 else
+    # Check if we are on El Capitan or higher
+    if test "$(uname -s)" = "Darwin" && \
+        { test "$(uname -r | cut -d. -f1)" -gt 15; }
+    then
+        APPLICATION="foamExec $APPLICATION"
+    fi
     #
     # Run (on single processor)
     #
diff --git a/bin/foamMonitor b/bin/foamMonitor
index e38545f0..cbd9602b 100755
--- a/bin/foamMonitor
+++ b/bin/foamMonitor
@@ -57,7 +57,12 @@ USAGE
 
 plotFileHeader() {
     cat<<EOF
-set term x11 1 font "helvetica,17" linewidth 1.5 persist noraise
+if (strstrt(GPVAL_TERMINALS, 'wxt')) {
+    selected_terminal = 'wxt'
+} else {
+    selected_terminal = 'x11'
+}
+set term selected_terminal 1 font "helvetica,17" linewidth 1.5 persist noraise
 $LOGSCALE
 $YRANGE
 set title "Data Monitoring"
@@ -82,6 +87,8 @@ LOGSCALE=""
 YRANGE=""
 GNUPLOT=$(which gnuplot)
 ! [ "x$GNUPLOT" = "x" ] || usage "Gnuplot not installed"
+STAT="stat --format=%Y"
+[ "$(uname -s)" = "Darwin" ] && STAT="stat -f %m"
 
 # parse options
 while [ "$#" -gt 0 ]
@@ -169,7 +176,7 @@ PID=$!
 
 while true
 do
-    MODTIME=$(stat --format=%Y $FILE)
+    MODTIME=$($STAT $FILE)
     IDLEAGO=$(expr $(date +%s) - $IDLE)
     test "$MODTIME" -gt "$IDLEAGO" || break
     sleep $REFRESH
diff --git a/bin/paraFoam b/bin/paraFoam
index b032fc6c..fb513327 100755
--- a/bin/paraFoam
+++ b/bin/paraFoam
@@ -72,6 +72,11 @@ extension=OpenFOAM
 
 requirePV=1
 
+[ "$(uname -s)" = "Darwin" ] && {
+extension=foam
+requirePV=0
+}
+
 # Parse options
 while [ "$#" -gt 0 ]
 do
diff --git a/bin/tools/RunFunctions b/bin/tools/RunFunctions
index 5a254ea4..b36c5251 100644
--- a/bin/tools/RunFunctions
+++ b/bin/tools/RunFunctions
@@ -2,7 +2,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2012 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -28,75 +28,142 @@
 #     Miscellaneous functions for running tutorial cases
 #------------------------------------------------------------------------------
 
+isSIPEnabled()
+{
+    $(which -s csrutil) && {
+    [ $(csrutil status | awk '{print $5}' | tr -d ".") = "enabled" ] \
+        && return 0
+    }
+    return 1
+}
+
+# Workaround for cleared DYLD_LIBRARY_PATH
+[ "$(uname -s)" = "Darwin" ] && isSIPEnabled && . $WM_PROJECT_DIR/etc/bashrc
+
 getNumberOfProcessors()
 {
-    sed -ne 's/^numberOfSubdomains\s*\(.*\);/\1/p' system/decomposeParDict
+    grep numberOfSubdomains system/decomposeParDict \
+        | awk '{print $2}' \
+        | tr -d ";"
 }
 
 getApplication()
 {
-    sed -ne 's/^ *application\s*\([a-zA-Z]*\)\s*;.*$/\1/p' system/controlDict
+    grep application system/controlDict \
+        | awk '{print $2}' \
+        | tr -d ";"
 }
 
 runApplication()
 {
-    APP_RUN=$1
-    APP_NAME=${1##*/}
+    local force=
+    local append=
+
+    local app_run="$1"
+    while [ "$(echo $app_run | cut -c1)" = "-" ]; do
+        case $app_run in
+        -f|--force|-force|-overwrite)
+            force=y
+            ;;
+        -a|--append|-append)
+            append=y
+            ;;
+        esac
+        shift
+        app_run="$1"
+    done
     shift
+    local app_name=${app_run##*/}
+
+    [ -x "$(which $app_run)" ] || {
+    echo "Application $app_run does not exist or is not executable."
+    exit 1
+    }
+
+    [ "$force" = "y" ] && rm -f "log.$app_name"
 
-    if [ -f log.$APP_NAME ]
+    if [ -f "log.$app_name" ]
     then
-        echo "$APP_NAME already run on $PWD: remove log file to re-run"
+        if [ "$append" = "y" ]
+        then
+            echo "Running $app_run on $PWD (appending to log.$app_name)"
+            $app_run "$@" >> "log.$app_name" 2>&1
+        else
+            echo "$app_name already run on $PWD: remove log file to re-run"
+        fi
     else
-        echo "Running $APP_RUN on $PWD"
-        $APP_RUN "$@" > log.$APP_NAME 2>&1
+        echo "Running $app_run on $PWD"
+        $app_run "$@" > "log.$app_name" 2>&1
     fi
 }
 
 runParallel()
 {
-    APP_RUN=$1
-    APP_NAME=${1##*/}
+    local force=
+    local append=
+
+    local app_run="$1"
+    while [ "$(echo $app_run | cut -c1)" = "-" ]; do
+        case $app_run in
+        -f|--force|-force|-o|-overwrite)
+            force=y
+            ;;
+        -a|--append|-append)
+            append=y
+            ;;
+        esac
+        shift
+        app_run="$1"
+    done
+    shift
+    local app_name=${app_run##*/}
+
+    [ -x "$(which $app_run)" ] || {
+    echo "Application $app_run does not exist or is not executable."
+    exit 1
+    }
+
+    [ "$force" = "y" ] && rm -f "log.$app_name"
+
+    local n_procs="$1"
     shift
 
-    if [ -f log.$APP_NAME ]
+    if [ -f "log.$app_name" ]
     then
-        echo "$APP_NAME already run on $PWD: remove log file to re-run"
+        if [ "$append" = "y" ]
+        then
+            echo
+        else
+            echo "$app_name already run on $PWD: remove log file to re-run"
+        fi
     else
-        nProcs=$1
-        shift
-        echo "Running $APP_RUN in parallel on $PWD using $nProcs processes"
-
-        #if [ "$WM_SCHEDULER" ]
-        #then
-        #    echo "$PWD: $WM_SCHEDULER -np $nProcs" 1>&2
-        #    $WM_SCHEDULER -np $nProcs "( mpirun -np $nProcs $APP_RUN -parallel "$@" < /dev/null > log.$APP_NAME 2>&1 )"
-        #else
-            ( mpirun -np $nProcs $APP_RUN -parallel "$@" < /dev/null > log.$APP_NAME 2>&1 )
-        #fi
+        echo "Running $app_run in parallel on $PWD using $n_procs processes"
+
+        ( mpirun -np "$n_procs" $app_run -parallel "$@" < /dev/null > "log.$app_name" 2>&1 )
     fi
 }
 
 compileApplication()
 {
     echo "Compiling $1 application"
-    wmake $1
+    wmake "$1"
 }
 
 cloneCase()
 {
-    if [ -d $2 ]
+    if [ -d "$2" ]
     then
         echo "Case already cloned: remove case directory $2 to clone"
     else
         echo "Cloning $2 case from $1"
-        mkdir $2
+        mkdir "$2"
         cpfiles="0 system constant"
         for f in $cpfiles
         do
-            cp -r $1/$f $2
+            cp -r "$1/$f" "$2"
         done
     fi
 }
 
+# vim: set ft=sh:
 #------------------------------------------------------------------------------
diff --git a/etc/bashrc b/etc/bashrc
index d04695de..40fa45d9 100644
--- a/etc/bashrc
+++ b/etc/bashrc
@@ -121,7 +121,8 @@ export WM_PROJECT_DIR=$WM_PROJECT_INST_DIR/$WM_PROJECT-$WM_PROJECT_VERSION
 
 # Location of third-party software
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
+[ "$(uname -s)" = "Darwin" ] || \
+	export WM_THIRD_PARTY_DIR=$WM_PROJECT_INST_DIR/ThirdParty-$WM_PROJECT_VERSION
 
 # Location of site-specific templates etc
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@@ -137,6 +138,17 @@ fi
 # ~~~~~~~~~~~~~~~~~~~~~~
 export WM_PROJECT_USER_DIR=$HOME/$WM_PROJECT/$USER-$WM_PROJECT_VERSION
 
+# Check if we are building OpenFOAM on OS X
+_foamOnOSX()
+{
+	# For portability we will not rely on $?
+	if [ "$(uname -s)" = "Darwin" ]
+	then
+		return 0
+	else
+		return 1
+	fi
+}
 
 # Source files, possibly with some verbosity
 _foamSource()
@@ -199,14 +211,28 @@ foamClean=$WM_PROJECT_DIR/bin/foamCleanPath
 #- Clean PATH
 cleaned=`$foamClean "$PATH" "$foamOldDirs"` && PATH="$cleaned"
 
-#- Clean LD_LIBRARY_PATH
-cleaned=`$foamClean "$LD_LIBRARY_PATH" "$foamOldDirs"` \
-    && LD_LIBRARY_PATH="$cleaned"
+if _foamOnOSX
+then
+    #- Clean DYLD_LIBRARY_PATH
+    cleaned=`$foamClean "$DYLD_LIBRARY_PATH" "$foamOldDirs"` \
+        && DYLD_LIBRARY_PATH="$cleaned"
+else
+    #- Clean LD_LIBRARY_PATH
+    cleaned=`$foamClean "$LD_LIBRARY_PATH" "$foamOldDirs"` \
+        && LD_LIBRARY_PATH="$cleaned"
+fi
 
 #- Clean MANPATH
 cleaned=`$foamClean "$MANPATH" "$foamOldDirs"` && MANPATH="$cleaned"
 
-export PATH LD_LIBRARY_PATH MANPATH
+export PATH MANPATH
+
+if _foamOnOSX
+then
+    export DYLD_LIBRARY_PATH
+else
+    export LD_LIBRARY_PATH
+fi
 
 
 # Source project setup files
@@ -217,14 +243,16 @@ _foamSource $WM_PROJECT_DIR/etc/config/aliases.sh
 
 # Source user setup files for optional packages
 # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-_foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview.sh`
+_foamOnOSX \
+    && _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview-osx.sh` \
+    || _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/paraview.sh`
+_foamOnOSX || {
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/ensight.sh`
 _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/gperftools.sh`
+}
 
-if [ ! -z "$FOAMY_HEX_MESH" ]
-then
-    _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/CGAL.sh`
-fi
+[ ! -z "$FOAMY_HEX_MESH" ] \
+    && _foamSource `$WM_PROJECT_DIR/bin/foamEtcFile config/CGAL.sh`
 
 
 # Clean environment paths again. Only remove duplicates
@@ -232,13 +260,27 @@ fi
 #- Clean PATH
 cleaned=`$foamClean "$PATH"` && PATH="$cleaned"
 
-#- Clean LD_LIBRARY_PATH
-cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
+if _foamOnOSX
+then
+    #- Clean DYLD_LIBRARY_PATH
+    cleaned=`$foamClean "$DYLD_LIBRARY_PATH"` \
+        && DYLD_LIBRARY_PATH="$cleaned"
+else
+    #- Clean LD_LIBRARY_PATH
+    cleaned=`$foamClean "$LD_LIBRARY_PATH"` && LD_LIBRARY_PATH="$cleaned"
+fi
 
 #- Clean MANPATH (trailing ':' to find system pages)
 cleaned=`$foamClean "$MANPATH"`: && MANPATH="$cleaned"
 
-export PATH LD_LIBRARY_PATH MANPATH
+export PATH MANPATH
+
+if _foamOnOSX
+then
+    export DYLD_LIBRARY_PATH
+else
+    export LD_LIBRARY_PATH
+fi
 
 #- Clean LD_PRELOAD
 if [ -n "$LD_PRELOAD" ]
@@ -251,6 +293,6 @@ fi
 # cleanup environment:
 # ~~~~~~~~~~~~~~~~~~~~
 unset cleaned foamClean foamInstall foamOldDirs
-unset _foamSource _foamEval
+unset _foamSource _foamEval _foamOnOSX
 
 # ----------------------------------------------------------------- end-of-file
diff --git a/etc/config/CGAL.sh b/etc/config/CGAL.sh
index 7a59fc6e..61383404 100644
--- a/etc/config/CGAL.sh
+++ b/etc/config/CGAL.sh
@@ -29,11 +29,54 @@
 #     Sourced from OpenFOAM-<VERSION>/etc/bashrc
 #------------------------------------------------------------------------------
 
-boost_version=boost-system
-cgal_version=CGAL-4.7
+if [ "$(uname -s)" = "Darwin" ]
+then
+    cgal_version=
+    _have_brew=$(which -s brew && echo "Y")
+    _have_port=$(which -s port && echo "Y")
+
+    if [ -n "$_have_brew" ]
+    then
+        _brew_prefix="$(brew --prefix)"
+        boost_version="boost-$(basename $(readlink "$_brew_prefix/opt/boost"))"
+        cgal_version="CGAL-$(basename $(readlink "$_brew_prefix/opt/cgal"))"
+
+        export BOOST_ARCH_PATH="$_brew_prefix/opt/boost"
+        export CGAL_ARCH_PATH="$_brew_prefix/opt/cgal"
+        export GMP_ARCH_PATH="$_brew_prefix/opt/gmp"
+        export MPFR_ARCH_PATH="$_brew_prefix/opt/mpfr"
+
+        unset _brew_prefix
+    elif [ -n "$_have_port" ]
+    then
+        _port_prefix=$(dirname $(dirname $(which port)))
+        boost_version="boost-macports"
+        cgal_version="CGAL-macports"
+
+        export BOOST_ARCH_PATH="$_port_prefix"
+        export CGAL_ARCH_PATH="$_port_prefix"
+        export GMP_ARCH_PATH="$_port_prefix"
+        export MPFR_ARCH_PATH="$_port_prefix"
 
-export BOOST_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$boost_version
-export CGAL_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$cgal_version
+        unset _port_prefix
+    else
+        boost_version="boost-unknown"
+        cgal_version="CGAL-unknown"
+
+        export BOOST_ARCH_PATH="/usr/local"
+        export CGAL_ARCH_PATH="/usr/local"
+        export GMP_ARCH_PATH="/usr/local"
+        export MPFR_ARCH_PATH="/usr/local"
+    fi
+
+    unset _have_brew _have_port
+else
+	boost_version=boost-system
+	cgal_version=CGAL-4.7
+
+	export BOOST_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$boost_version
+	export CGAL_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$cgal_version
+fi
 
 if [ "$FOAM_VERBOSE" -a "$PS1" ]
 then
@@ -44,12 +87,12 @@ fi
 
 if [ -d "$CGAL_ARCH_PATH" ]
 then
-    _foamAddLib $CGAL_ARCH_PATH/lib
+    _foamOnOSX || _foamAddLib "$CGAL_ARCH_PATH/lib"
 fi
 
 if [ -d "$BOOST_ARCH_PATH" ]
 then
-    _foamAddLib $BOOST_ARCH_PATH/lib
+    _foamOnOSX || _foamAddLib "$BOOST_ARCH_PATH/lib"
 fi
 
 unset boost_version cgal_version
diff --git a/etc/config/metis.sh b/etc/config/metis.sh
index af7efde3..51a927e6 100644
--- a/etc/config/metis.sh
+++ b/etc/config/metis.sh
@@ -33,7 +33,42 @@
 #     during the wmake process
 #------------------------------------------------------------------------------
 
-export METIS_VERSION=metis-5.1.0
-export METIS_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$METIS_VERSION
+if [ "$(uname -s)" = "Darwin" ]
+then
+    METIS_VERSION=
+
+    set +e
+    _have_brew=$(which -s brew && echo "Y")
+    _have_port=$(which -s port && echo "Y")
+    set -e
+
+    if [ -n "$_have_brew" ]
+    then
+        _brew_prefix=$(brew --prefix)
+        if [ "$WM_LABEL_SIZE" -eq 32 ]
+        then
+            export METIS_VERSION="metis-$(basename $(readlink "$_brew_prefix/opt/metis"))"
+            export METIS_ARCH_PATH="$_brew_prefix/opt/metis"
+        else
+            export METIS_VERSION="metis-$(basename $(readlink "$_brew_prefix/opt/metis64"))"
+            export METIS_ARCH_PATH="$_brew_prefix/opt/metis64"
+        fi
+        unset _brew_prefix
+    elif [ -n "$_have_port" ]
+    then
+        _port_prefix=$(dirname $(dirname $(which port)))
+        export METIS_VERSION="metis-macports"
+        export METIS_ARCH_PATH="$_port_prefix"
+        unset _port_prefix
+    else
+        export METIS_VERSION="metis-unknown"
+        export METIS_ARCH_PATH="/usr/local"
+    fi
+
+    unset _have_brew _have_port
+else
+	export METIS_VERSION=metis-5.1.0
+	export METIS_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$METIS_VERSION
+fi
 
 # -----------------------------------------------------------------------------
diff --git a/etc/config/paraview-osx.sh b/etc/config/paraview-osx.sh
new file mode 100644
index 00000000..8000bdfd
--- /dev/null
+++ b/etc/config/paraview-osx.sh
@@ -0,0 +1,17 @@
+if [ -d /Applications/[Pp][Aa][Rr][Aa][Vv][Ii][Ee][Ww]*.app ]
+then
+
+	[ "$FOAM_VERBOSE" -a "$PS1" ] && echo Using /Applications/Paraview*.app
+
+	paraview () {
+		/Applications/[Pp][Aa][Rr][Aa][Vv][Ii][Ee][Ww]*.app/Contents/MacOS/paraview "$@"
+	}
+
+	export -f paraview
+else
+	echo
+	echo "Please download binary Paraview release from"
+	echo "http://paraview.org and install it in /Applications"
+	echo "folder."
+	echo
+fi
diff --git a/etc/config/scotch.sh b/etc/config/scotch.sh
index e40e1c7b..a4c55090 100644
--- a/etc/config/scotch.sh
+++ b/etc/config/scotch.sh
@@ -33,7 +33,50 @@
 #     during the wmake process
 #------------------------------------------------------------------------------
 
-export SCOTCH_VERSION=scotch_6.0.3
-export SCOTCH_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER$WM_LABEL_OPTION/$SCOTCH_VERSION
+if [ $(uname -s) = "Darwin" ]
+then
+    SCOTCH_VERSION=
+    set +e
+    _have_brew="$(which -s brew && echo "Y")"
+    _have_port="$(which -s port && echo "Y")"
+    set -e
+
+    if [ -n "$_have_brew" ]
+    then
+        _brew_prefix="$(brew --prefix)"
+        if [ "$WM_LABEL_SIZE" -eq "32" ]
+        then
+            export SCOTCH_VERSION="scotch-$(basename $(readlink "$_brew_prefix/opt/scotch"))"
+            export SCOTCH_ARCH_PATH="$_brew_prefix/opt/scotch"
+        else
+            export SCOTCH_VERSION="scotch-$(basename $(readlink "$_brew_prefix/opt/scotch64"))"
+            export SCOTCH_ARCH_PATH="$_brew_prefix/opt/scotch64"
+        fi
+        unset _brew_prefix
+    elif [ -n "$_have_port" ]
+    then
+        _port_prefix=$(dirname $(dirname $(which port)))
+
+        export SCOTCH_VERSION="scotch-macports"
+        export SCOTCH_ARCH_PATH="$_port_prefix"
+
+        unset _port_prefix
+    else
+        # We are on Darwin, yet we do not have neither Homebrew, nor Macports.
+        # So there are several variants
+        # - Scotch is self-installed
+        # - pkgsrc is used
+        # - nix is used
+        # - something else
+        # For all these cases we happily assume that library is installed in
+        # /usr/local
+        export SCOTCH_VERSION="scotch-unknown"
+        export SCOTCH_ARCH_PATH="/usr/local"
+    fi
+    unset _have_brew _have_port
+else
+	export SCOTCH_VERSION=scotch-6.0.3
+	export SCOTCH_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER$WM_LABEL_OPTION/$SCOTCH_VERSION
+fi
 
 # -----------------------------------------------------------------------------
diff --git a/etc/config/settings.sh b/etc/config/settings.sh
index 02be26b9..06e28190 100644
--- a/etc/config/settings.sh
+++ b/etc/config/settings.sh
@@ -30,6 +30,48 @@
 #
 #------------------------------------------------------------------------------
 
+_macportsPrefix() {
+    if $(which -s port)
+    then
+        echo $(dirname $(dirname $(which port)))
+    else
+        echo ""
+    fi
+}
+
+_homebrewPrefix() {
+    if $(which -s brew)
+    then
+        echo $(brew --prefix)
+    else
+        echo ""
+    fi
+}
+
+# Increase maximum number of open files if it is below limit
+_increaseMaxOpenFiles()
+{
+    # Default value
+    local lim=4096
+
+    # Reset if parameter passed
+    [ -n "$1" ] && lim="$1"
+
+    # Silencing the errors
+    [ "$(ulimit -n)" -lt "$lim" ] && ulimit -n "$lim" > /dev/null 2>&1
+}
+
+# Check if OpenFOAM is built on OS X
+_foamOnOSX()
+{
+    if [ "$(uname -s)" = "Darwin" ]
+    then
+        return 0
+    else
+        return 1
+    fi
+}
+
 # Prefix to PATH
 _foamAddPath()
 {
@@ -45,7 +87,12 @@ _foamAddLib()
 {
     while [ $# -ge 1 ]
     do
-        export LD_LIBRARY_PATH=$1:$LD_LIBRARY_PATH
+        if _foamOnOSX
+        then
+            export DYLD_LIBRARY_PATH=$1:$DYLD_LIBRARY_PATH
+        else
+            export LD_LIBRARY_PATH=$1:$LD_LIBRARY_PATH
+        fi
         shift
     done
 }
@@ -152,6 +199,13 @@ SunOS)
     export WM_LDFLAGS='-mabi=64 -G0'
     ;;
 
+Darwin)
+    WM_ARCH=darwin64
+    export WM_COMPILER_LIB_ARCH=64
+    export WM_CC='clang'
+    export WM_CXX='clang++'
+    ;;
+
 *)    # an unsupported operating system
     /bin/cat <<USAGE 1>&2
 
@@ -179,7 +233,8 @@ export FOAM_APPBIN=$WM_PROJECT_DIR/platforms/$WM_OPTIONS/bin
 export FOAM_LIBBIN=$WM_PROJECT_DIR/platforms/$WM_OPTIONS/lib
 
 # External (ThirdParty) libraries
-export FOAM_EXT_LIBBIN=$WM_THIRD_PARTY_DIR/platforms/$WM_OPTIONS/lib
+_foamOnOSX \
+    || export FOAM_EXT_LIBBIN=$WM_THIRD_PARTY_DIR/platforms/$WM_OPTIONS/lib
 
 # Site-specific directory
 siteDir="${WM_PROJECT_SITE:-$WM_PROJECT_INST_DIR/site}"
@@ -224,7 +279,12 @@ unset siteDir
 
 _foamAddPath $FOAM_USER_APPBIN:$FOAM_SITE_APPBIN:$FOAM_APPBIN
 # Make sure to pick up dummy versions of external libraries last
-_foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+if [ -n "$FOAM_EXT_LIBBIN" ]
+then
+    _foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_EXT_LIBBIN:$FOAM_LIBBIN/dummy
+else
+    _foamAddLib  $FOAM_USER_LIBBIN:$FOAM_SITE_LIBBIN:$FOAM_LIBBIN:$FOAM_LIBBIN/dummy
+fi
 
 # Compiler settings
 # ~~~~~~~~~~~~~~~~~
@@ -392,13 +452,13 @@ SYSTEMOPENMPI)
     # Use the system installed openmpi, get library directory via mpicc
     export FOAM_MPI=openmpi-system
 
-    libDir=`mpicc --showme:link | sed -e 's/.*-L\([^ ]*\).*/\1/'`
+    libDir=$(mpicc --showme:link | sed -e 's/.*-L\([^ ]*\).*/\1/')
 
     # Bit of a hack: strip off 'lib' and hope this is the path to openmpi
     # include files and libraries.
     export MPI_ARCH_PATH="${libDir%/*}"
 
-    _foamAddLib     $libDir
+    _foamOnOSX || _foamAddLib     $libDir
     unset libDir
     ;;
 
@@ -470,15 +530,35 @@ SYSTEMMPI)
     ;;
 
 MPICH)
-    export FOAM_MPI=mpich2-1.1.1p1
-    export MPI_HOME=$WM_THIRD_PARTY_DIR/$FOAM_MPI
-    export MPI_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$FOAM_MPI
+    if _foamOnOSX
+    then
+        _prefix=$(_macportsPrefix)
+        # Macports
+        [ -n "$_prefix" ] && {
+        export FOAM_MPI=mpich-macports
+        export MPI_HOME="$_prefix"
+        export MPI_ARCH_PATH="$_prefix"
+        }
+
+        # Brew
+        _prefix=$(_homebrewPrefix)
+        [ -n "$_prefix" ] && {
+        export FOAM_MPI=mpich-$(basename $(readlink $_brew_prefix/opt/mpich))
+        export MPI_HOME="$_brew_prefix/opt/mpich"
+        export MPI_ARCH_PATH="$_brew_prefix/opt/mpich"
+        }
+        unset _prefix
+    else
+        export FOAM_MPI=mpich2-1.1.1p1
+        export MPI_HOME=$WM_THIRD_PARTY_DIR/$FOAM_MPI
+        export MPI_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$FOAM_MPI
+    fi
 
     _foamAddPath    $MPI_ARCH_PATH/bin
 
     # 64-bit on OpenSuSE 12.1 uses lib64 others use lib
-    _foamAddLib     $MPI_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH
-    _foamAddLib     $MPI_ARCH_PATH/lib
+    _foamOnOSX || _foamAddLib     $MPI_ARCH_PATH/lib$WM_COMPILER_LIB_ARCH
+    _foamOnOSX || _foamAddLib     $MPI_ARCH_PATH/lib
 
     _foamAddMan     $MPI_ARCH_PATH/share/man
     ;;
@@ -607,7 +687,12 @@ esac
 # Dummy MPI already added to LD_LIBRARY_PATH and has no external libraries
 if [ "$FOAM_MPI" != dummy ]
 then
-    _foamAddLib $FOAM_LIBBIN/$FOAM_MPI:$FOAM_EXT_LIBBIN/$FOAM_MPI
+    if _foamOnOSX
+    then
+        _foamAddLib $FOAM_LIBBIN/$FOAM_MPI
+    else
+        _foamAddLib $FOAM_LIBBIN/$FOAM_MPI:$FOAM_EXT_LIBBIN/$FOAM_MPI
+    fi
 fi
 
 
@@ -622,10 +707,11 @@ then
 fi
 export MPI_BUFFER_SIZE
 
+_foamOnOSX && _increaseMaxOpenFiles 4096
 
 # Cleanup environment:
 # ~~~~~~~~~~~~~~~~~~~~
-#keep _foamAddPath _foamAddLib _foamAddMan
-unset foamCompiler minBufferSize
+#keep _foamAddPath _foamAddLib _foamAddMan _foamOnOSX
+unset foamCompiler minBufferSize _increaseMaxOpenFiles _macports
 
 # ----------------------------------------------------------------- end-of-file
diff --git a/src/Allwmake b/src/Allwmake
index c0ea041c..580da662 100755
--- a/src/Allwmake
+++ b/src/Allwmake
@@ -1,6 +1,17 @@
 #!/bin/sh
 cd ${0%/*} || exit 1    # Run from this directory
 
+# Check if environment is configured
+[ -z "$WM_PROJECT_DIR" ] && {
+# No, it is not, so we source bashrc ourselves
+[ -f "$(pwd)/../etc/bashrc" ] && {
+echo
+echo "You have forgotten to source etc/bashrc, so I do it myself."
+echo
+source $(pwd)/../etc/bashrc
+}
+}
+
 # Parse arguments for library compilation
 targetType=libso
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
@@ -12,19 +23,20 @@ wmakeCheckPwd "$WM_PROJECT_DIR/src" || {
     exit 1
 }
 
-[ -n "$FOAM_EXT_LIBBIN" ] || {
+[ "$(uname -s)" = "Darwin" ] || { [ -n "$FOAM_EXT_LIBBIN" ] || {
     echo "Allwmake error: FOAM_EXT_LIBBIN not set"
     echo "    Check the OpenFOAM entries in your dot-files and source them."
     exit 1
 }
+}
 
 set -x
 
 # Update OpenFOAM version strings if required
 wmakePrintBuild -check || /bin/rm -f OpenFOAM/Make/*/global.? 2>/dev/null
 
-wmakeLnInclude OpenFOAM
-wmakeLnInclude OSspecific/${WM_OSTYPE:-POSIX}
+wmakeLnInclude -u OpenFOAM
+wmakeLnInclude -u OSspecific/${WM_OSTYPE:-POSIX}
 Pstream/Allwmake $targetType $*
 
 OSspecific/${WM_OSTYPE:-POSIX}/Allwmake $*
diff --git a/src/OSspecific/POSIX/POSIX.C b/src/OSspecific/POSIX/POSIX.C
index 5374c0b6..81081904 100644
--- a/src/OSspecific/POSIX/POSIX.C
+++ b/src/OSspecific/POSIX/POSIX.C
@@ -53,7 +53,11 @@ Description
 #include <sys/socket.h>
 #include <netdb.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <mach-o/dyld.h>
+#else
 #include <link.h>
+#endif
 
 #include <netinet/in.h>
 
@@ -1173,6 +1177,20 @@ void* Foam::dlOpen(const fileName& lib, const bool check)
             << " : dlopen of " << lib << std::endl;
     }
     void* handle = ::dlopen(lib.c_str(), RTLD_LAZY|RTLD_GLOBAL);
+#if defined(darwin64)
+    if (!handle && lib.ext() == "so")
+    {
+        fileName fallback_lib = lib.lessExt() + ".dylib";
+        if (check)
+        {
+            WarningIn("dlOpen(const fileName&, const bool)")
+                << "dlOpen: using fallback library name "
+                << fallback_lib
+                << endl;
+        }
+        handle = ::dlopen(fallback_lib.c_str(), RTLD_LAZY|RTLD_GLOBAL);
+    }
+#endif
 
     if (!handle && check)
     {
@@ -1259,7 +1277,24 @@ bool Foam::dlSymFound(void* handle, const std::string& symbol)
     }
 }
 
+#if defined(darwin64)
+Foam::fileNameList Foam::dlLoaded()
+{
+    DynamicList<fileName> libs;
+    for(uint32_t cnt = 0; cnt < _dyld_image_count(); ++cnt)
+    {
+	libs.append(_dyld_get_image_name(cnt));
+    }
 
+    if (POSIX::debug)
+    {
+        std::cout
+            << "dlLoaded()"
+            << " : determined loaded libraries :" << libs.size() << std::endl;
+    }
+    return libs;
+}
+#else
 static int collectLibsCallback
 (
     struct dl_phdr_info *info,
@@ -1286,6 +1321,7 @@ Foam::fileNameList Foam::dlLoaded()
     }
     return libs;
 }
+#endif
 
 
 void Foam::osRandomSeed(const label seed)
diff --git a/src/OSspecific/POSIX/clockTime/clockTime.H b/src/OSspecific/POSIX/clockTime/clockTime.H
index 8708ba94..65f046c1 100644
--- a/src/OSspecific/POSIX/clockTime/clockTime.H
+++ b/src/OSspecific/POSIX/clockTime/clockTime.H
@@ -37,6 +37,9 @@ SourceFiles
 #define clockTime_H
 
 #include <sys/types.h>
+#if defined(darwin64)
+#include <sys/time.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/printStack.C b/src/OSspecific/POSIX/printStack.C
index b3561ef5..6f79a5b9 100644
--- a/src/OSspecific/POSIX/printStack.C
+++ b/src/OSspecific/POSIX/printStack.C
@@ -27,11 +27,17 @@ License
 #include "OStringStream.H"
 #include "OSspecific.H"
 #include "IFstream.H"
+#if defined(darwin64) && defined(__clang__)
+#include "ulong.H"
+#endif
 
 #include <inttypes.h>
 #include <cxxabi.h>
 #include <execinfo.h>
 #include <dlfcn.h>
+#if defined(darwin64)
+#include <regex.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -100,6 +106,7 @@ void printSourceFileAndLine
     uintptr_t address = uintptr_t(addr);
     word myAddress = addressToWord(address);
 
+#if ! defined(darwin64)
     if (filename.ext() == "so")
     {
         // Convert address into offset into dynamic library
@@ -107,32 +114,79 @@ void printSourceFileAndLine
         intptr_t relativeAddress = address - offset;
         myAddress = addressToWord(relativeAddress);
     }
+#endif
 
     if (filename[0] == '/')
     {
         string line = pOpen
         (
+#if ! defined(darwin64)
             "addr2line -f --demangle=auto --exe "
           + filename
           + " "
           + myAddress,
             1
+#else
+            "echo 'image lookup -a "
+          + myAddress
+          + " "
+          + filename
+          + "'"
+          + " | xcrun lldb "
+          + "-O 'target create --no-dependents -a x86_64 "
+          + filename
+          + "' -o '"
+          + "target modules load -f "
+          + filename
+          + " __TEXT "
+          + addressToWord(reinterpret_cast<const uintptr_t>(info->dli_fbase))
+          + "' 2> /dev/null"
+          + " | tail -1"
+#endif
         );
 
-        if (line == "")
+#if defined(darwin64)
         {
-            os  << " addr2line failed";
+            const char *buf = line.c_str();
+            regex_t re;
+            regmatch_t mt[3];
+            int st;
+
+            regcomp(&re, ".\\+at \\(.\\+\\):\\(\\d\\+\\)", REG_ENHANCED);
+            st = regexec(&re, buf, 3, mt, 0);
+
+            if (st == REG_NOMATCH)
+            {
+                line = "??:0";
+            }
+            else
+            {
+                size_t len = mt[1].rm_eo - mt[1].rm_so;
+                string fname(buf + mt[1].rm_so, len);
+                len = mt[2].rm_eo - mt[2].rm_so;
+                string lnum(buf + mt[2].rm_so, len);
+                line = fname + ":" + lnum;
+            }
+            regfree(&re);
         }
-        else if (line == "??:0")
+#endif
+
+        if (line == "")
         {
-            os  << " in " << filename;
+            os  << " addr2line failed";
         }
         else
         {
+            word location_preposition = " at ";
+            if (line == "??:0")
+            {
+                line = filename;
+                location_preposition = " in ";
+            }
             string cwdLine(line.replaceAll(cwd() + '/', ""));
             string homeLine(cwdLine.replaceAll(home(), '~'));
 
-            os  << " at " << homeLine.c_str();
+            os  << location_preposition << homeLine.c_str();
         }
     }
 }
@@ -156,9 +210,9 @@ fileName absolutePath(const char* fn)
 }
 
 
-word demangleSymbol(const char* sn)
+string demangleSymbol(const char* sn)
 {
-    word res;
+    string res;
     int st;
     char* cxx_sname = abi::__cxa_demangle
     (
@@ -170,12 +224,12 @@ word demangleSymbol(const char* sn)
 
     if (st == 0 && cxx_sname)
     {
-        res = word(cxx_sname);
+        res = string(cxx_sname);
         free(cxx_sname);
     }
     else
     {
-        res = word(sn);
+        res = string(sn);
     }
 
     return res;
diff --git a/src/OSspecific/POSIX/signals/sigFpe.C b/src/OSspecific/POSIX/signals/sigFpe.C
index 5488f2e5..d00b5547 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.C
+++ b/src/OSspecific/POSIX/signals/sigFpe.C
@@ -39,6 +39,13 @@ License
     #include <sigfpe.h>
 #endif
 
+#if defined(darwin64)
+#include <xmmintrin.h>
+#include <malloc/malloc.h>
+#include <sys/mman.h>
+#include <unistd.h>
+#endif
+
 #include <limits>
 
 // * * * * * * * * * * * * * * Static Data Members * * * * * * * * * * * * * //
@@ -52,6 +59,30 @@ void Foam::sigFpe::fillNan(UList<scalar>& lst)
 
 bool Foam::sigFpe::mallocNanActive_ = false;
 
+#if defined(darwin64)
+void *(*Foam::sigFpe::oldMalloc_)(struct _malloc_zone_t *zone, size_t size)
+	= NULL;
+
+void *Foam::sigFpe::nanMalloc_(struct _malloc_zone_t *zone, size_t size)
+{
+    void *result;
+
+    result = oldMalloc_(zone, size);
+
+    if (mallocNanActive_)
+    {
+        UList<scalar> lst
+        (
+            reinterpret_cast<scalar*>(result),
+            size/sizeof(scalar)
+        );
+        fillNan(lst);
+    }
+
+    return result;
+}
+#endif
+
 
 #ifdef LINUX
 extern "C"
@@ -86,7 +117,7 @@ void* Foam::sigFpe::mallocNan(size_t size)
 #endif
 
 
-#ifdef LINUX_GNUC
+#if defined(LINUX_GNUC) || defined(darwin64)
 void Foam::sigFpe::sigHandler(int)
 {
     // Reset old handling
@@ -124,9 +155,13 @@ Foam::sigFpe::~sigFpe()
 {
     if (env("FOAM_SIGFPE"))
     {
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         // Reset signal
+        #if defined(darwin64)
+        if (oldAction_.sa_handler && sigaction(SIGFPE, NULL, NULL) < 0)
+        #else
         if (oldAction_.sa_handler && sigaction(SIGFPE, &oldAction_, NULL) < 0)
+        #endif
         {
             FatalErrorIn
             (
@@ -139,10 +174,24 @@ Foam::sigFpe::~sigFpe()
 
     if (env("FOAM_SETNAN"))
     {
-        #ifdef LINUX
+        #if defined(LINUX) || defined(darwin64)
         // Disable initialization to NaN
         mallocNanActive_ = false;
         #endif
+
+        #if defined(darwin64)
+        // Restoring old malloc handler
+        if (oldMalloc_ != NULL) {
+            malloc_zone_t *zone = malloc_default_zone();
+
+            if (zone != NULL)
+            {
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE);
+                zone->malloc = oldMalloc_;
+                mprotect(zone, getpagesize(), PROT_READ);
+            }
+        }
+        #endif
     }
 }
 
@@ -164,21 +213,31 @@ void Foam::sigFpe::set(const bool verbose)
     {
         bool supported = false;
 
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         supported = true;
 
+        #if defined(LINUX_GNUC)
         feenableexcept
         (
             FE_DIVBYZERO
           | FE_INVALID
           | FE_OVERFLOW
         );
+        #endif  // LINUX_GNUC
+        #if defined(darwin64)
+        _mm_setcsr(_MM_MASK_MASK &~
+                   (_MM_MASK_OVERFLOW|_MM_MASK_INVALID|_MM_MASK_DIV_ZERO));
+        #endif  // darwin64
 
         struct sigaction newAction;
         newAction.sa_handler = sigHandler;
         newAction.sa_flags = SA_NODEFER;
         sigemptyset(&newAction.sa_mask);
+        #if defined(darwin64)
+        if (sigaction(SIGFPE, &newAction, NULL) < 0)
+        #else
         if (sigaction(SIGFPE, &newAction, &oldAction_) < 0)
+        #endif
         {
             FatalErrorIn
             (
@@ -230,10 +289,33 @@ void Foam::sigFpe::set(const bool verbose)
 
     if (env("FOAM_SETNAN"))
     {
-        #ifdef LINUX
+        #if defined(LINUX)
         mallocNanActive_ = true;
         #endif
 
+        #if defined(darwin64)
+        malloc_zone_t *zone = malloc_default_zone();
+
+        if (zone != NULL)
+        {
+            oldMalloc_ = zone->malloc;
+            if
+            (
+                mprotect(zone, getpagesize(), PROT_READ | PROT_WRITE) == 0
+            )
+            {
+                zone->malloc = nanMalloc_;
+                if
+                (
+                    mprotect(zone, getpagesize(), PROT_READ) == 0
+                )
+                {
+                    mallocNanActive_ = true;
+                }
+            }
+        }
+        #endif
+
         if (verbose)
         {
             if (mallocNanActive_)
diff --git a/src/OSspecific/POSIX/signals/sigFpe.H b/src/OSspecific/POSIX/signals/sigFpe.H
index 603c4b5e..d81deec6 100644
--- a/src/OSspecific/POSIX/signals/sigFpe.H
+++ b/src/OSspecific/POSIX/signals/sigFpe.H
@@ -54,6 +54,10 @@ SourceFiles
     #define LINUX_GNUC
 #endif
 
+#if defined(__APPLE__)
+#include <malloc/malloc.h>
+#endif
+
 #include "UList.H"
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
@@ -72,10 +76,16 @@ class sigFpe
         //- Saved old signal trapping setting
         static struct sigaction oldAction_;
 
+#if defined(darwin64)
+        static void *(*oldMalloc_)(struct _malloc_zone_t *zone, size_t size);
+
+        static void *nanMalloc_(struct _malloc_zone_t *zone, size_t size);
+#endif
+
 
     // Static data members
 
-        #ifdef LINUX_GNUC
+        #if defined(LINUX_GNUC) || defined(darwin64)
         //- Handler for caught signals
         static void sigHandler(int);
         #endif
@@ -103,7 +113,7 @@ public:
         //- Flag to indicate mallocNan is enabled
         static bool mallocNanActive_;
 
-        #ifdef LINUX
+        #if defined(LINUX)
         //- Malloc function which initializes to NaN
         static void* mallocNan(size_t size);
         #endif
diff --git a/src/OpenFOAM/Make/files b/src/OpenFOAM/Make/files
index 6b271cfc..b3b47fa2 100644
--- a/src/OpenFOAM/Make/files
+++ b/src/OpenFOAM/Make/files
@@ -30,6 +30,12 @@ $(ints)/label/label.C
 $(ints)/uLabel/uLabel.C
 $(ints)/lists/labelIOList.C
 $(ints)/lists/labelListIOList.C
+#if defined(__APPLE__) && defined(__clang__)
+$(ints)/long/long.C
+$(ints)/long/longIO.C
+$(ints)/ulong/ulong.C
+$(ints)/ulong/ulongIO.C
+#endif
 
 primitives/Scalar/doubleScalar/doubleScalar.C
 primitives/Scalar/floatScalar/floatScalar.C
diff --git a/src/OpenFOAM/db/IOstreams/IOstreams.H b/src/OpenFOAM/db/IOstreams/IOstreams.H
index 438133dc..64b7f9f4 100644
--- a/src/OpenFOAM/db/IOstreams/IOstreams.H
+++ b/src/OpenFOAM/db/IOstreams/IOstreams.H
@@ -41,6 +41,10 @@ Description
 #include "char.H"
 #include "int.H"
 #include "uint.H"
+#if defined(darwin64) && defined(__clang__)
+#include "ulong.H"
+#include "long.H"
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 // Global predefined streams for standard input, output
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
index 2f975771..026519c2 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
@@ -334,7 +334,11 @@ Foam::fileName Foam::dynamicCode::codeRelPath() const
 
 Foam::fileName Foam::dynamicCode::libRelPath() const
 {
+#if defined(darwin64)
+    return codeRelPath()/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
     return codeRelPath()/libSubDir_/"lib" + codeName_ + ".so";
+#endif
 }
 
 
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
index 852ba6d9..cecf678c 100644
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
@@ -221,7 +221,11 @@ public:
         //  Corresponds to codeRoot()/libSubDir()/lib\<codeName\>.so
         fileName libPath() const
         {
+#if defined(darwin64)
+            return codeRoot_/libSubDir_/"lib" + codeName_ + ".dylib";
+#else
             return codeRoot_/libSubDir_/"lib" + codeName_ + ".so";
+#endif
         }
 
         //- Path for specified code name relative to \$FOAM_CASE
diff --git a/src/OpenFOAM/primitives/Scalar/doubleFloat.H b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
index 57373e0b..b5605863 100644
--- a/src/OpenFOAM/primitives/Scalar/doubleFloat.H
+++ b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
@@ -31,6 +31,15 @@ License
 
 #include <cmath>
 
+#if defined(darwin64)
+inline float j0f(float x) { return float(j0(double(x)));}
+inline float j1f(float x) { return float(j1(double(x)));}
+inline float y0f(float x) { return float(y0(double(x)));}
+inline float y1f(float x) { return float(y1(double(x)));}
+inline float jnf(const int n, const float s) { return float(jn(n, double(s))); }
+inline float ynf(const int n, const float s) { return float(yn(n, double(s))); }
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
@@ -87,6 +96,12 @@ MAXMINPOW(float, float, int)
 MAXMINPOW(float, int, float)
 MAXMINPOW(float, float, long)
 MAXMINPOW(float, long, float)
+#if defined(darwin64) && defined(__clang__) && WM_LABEL_SIZE == 64
+MAXMINPOW(double, int64_t, double)
+MAXMINPOW(float, int64_t, float)
+MAXMINPOW(double, double, int64_t)
+MAXMINPOW(float, float, int64_t)
+#endif
 
 #undef MAXMINPOW
 
diff --git a/src/OpenFOAM/primitives/ints/int/int.H b/src/OpenFOAM/primitives/ints/int/int.H
index a3ab4b5a..84940bd7 100644
--- a/src/OpenFOAM/primitives/ints/int/int.H
+++ b/src/OpenFOAM/primitives/ints/int/int.H
@@ -37,6 +37,10 @@ SourceFiles
 
 #include "int32.H"
 #include "int64.H"
+#if defined(darwin64) && defined(__clang__)
+#include "long.H"
+#include "ulong.H"
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -63,6 +67,10 @@ MAXMIN(int32_t, int32_t, int32_t)
 MAXMIN(int64_t, int64_t, int32_t)
 MAXMIN(int64_t, int32_t, int64_t)
 MAXMIN(int64_t, int64_t, int64_t)
+#if defined(darwin64) && defined(__clang__)
+MAXMIN(long, long, long)
+MAXMIN(unsigned long, unsigned long, unsigned long)
+#endif
 
 
 // * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
diff --git a/src/OpenFOAM/primitives/ints/long/long.C b/src/OpenFOAM/primitives/ints/long/long.C
new file mode 100644
index 00000000..e7b78c3d
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/long.C
@@ -0,0 +1,50 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "long.H"
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+const long Foam::pTraits<long>::zero = 0;
+const long Foam::pTraits<long>::one = 1;
+const long Foam::pTraits<long>::min = LONG_MIN;
+const long Foam::pTraits<long>::max = LONG_MAX;
+const long Foam::pTraits<long>::rootMin = pTraits<long>::min;
+const long Foam::pTraits<long>::rootMax = pTraits<long>::max;
+
+const char* Foam::pTraits<long>::componentNames[] = { "x" };
+
+Foam::pTraits<long>::pTraits(const long& p)
+:
+    p_(p)
+{}
+
+Foam::pTraits<long>::pTraits(Istream& is)
+{
+    is >> p_;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/long/long.H b/src/OpenFOAM/primitives/ints/long/long.H
new file mode 100644
index 00000000..f8a3146b
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/long.H
@@ -0,0 +1,138 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+Primitive
+    long
+
+Description
+    long integer
+
+SourceFiles
+    long.C
+    longIO.C
+
+\*---------------------------------------------------------------------------*/
+
+#ifndef long_H
+#define long_H
+
+#define __STDC_LIMIT_MACROS
+#include <stdint.h>
+#include <climits>
+#include <cstdlib>
+
+#include "word.H"
+#include "pTraits.H"
+#include "direction.H"
+
+#ifndef LONG_MIN
+#define LONG_MIN 0
+#endif
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+namespace Foam
+{
+
+class Istream;
+class Ostream;
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+//- Return a word representation of an long
+word name(const long);
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+long readLong(Istream&);
+bool read(const char*, long&);
+Istream& operator>>(Istream&, long&);
+Ostream& operator<<(Ostream&, const long);
+
+//- Template specialization for pTraits<long>
+template<>
+class pTraits<long>
+{
+    long p_;
+
+public:
+
+    //- Component type
+    typedef long cmptType;
+
+    // Member constants
+
+        enum
+        {
+            dim = 3,         //!< Dimensionality of space
+            rank = 0,        //!< Rank of int64_t is 0
+            nComponents = 1  //!< Number of components in int64_t is 1
+        };
+
+
+    // Static data members
+
+        static const char* const typeName;
+        static const char* componentNames[];
+        static const long zero;
+        static const long one;
+        static const long min;
+        static const long max;
+        static const long rootMax;
+        static const long rootMin;
+
+
+    // Constructors
+
+        //- Construct from primitive
+        explicit pTraits(const long&);
+
+        //- Construct from Istream
+        pTraits(Istream&);
+
+
+    // Member Functions
+
+        //- Access to the long value
+        operator long() const
+        {
+            return p_;
+        }
+
+        //- Access to the long value
+        operator long&()
+        {
+            return p_;
+        }
+};
+
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+} // End namespace Foam
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#endif
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/long/longIO.C b/src/OpenFOAM/primitives/ints/long/longIO.C
new file mode 100644
index 00000000..9ee12352
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/long/longIO.C
@@ -0,0 +1,104 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "error.H"
+
+#include "long.H"
+#include "IOstreams.H"
+
+#include <inttypes.h>
+#include <sstream>
+#include <cerrno>
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+Foam::word Foam::name(const long val)
+{
+    std::ostringstream buf;
+    buf << val;
+    return buf.str();
+}
+
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+Foam::Istream& Foam::operator>>(Istream& is, long& i)
+{
+    token t(is);
+
+    if (!t.good())
+    {
+        is.setBad();
+        return is;
+    }
+
+    if (t.isLabel())
+    {
+        i = long(t.labelToken());
+    }
+    else
+    {
+        is.setBad();
+        FatalIOErrorIn("operator>>(Istream&, long&)", is)
+            << "wrong token type - expected long, found " << t.info()
+            << exit(FatalIOError);
+
+        return is;
+    }
+
+    // Check state of Istream
+    is.check("Istream& operator>>(Istream&, long&)");
+
+    return is;
+}
+
+
+long Foam::readLong(Istream& is)
+{
+    long val;
+    is >> val;
+
+    return val;
+}
+
+
+bool Foam::read(const char* buf, long& s)
+{
+    char *endptr = NULL;
+    errno = 0;
+    s = strtol(buf, &endptr, 10);
+    return (*endptr == 0) && (errno == 0);
+}
+
+
+Foam::Ostream& Foam::operator<<(Ostream& os, const long i)
+{
+    os.write(label(i));
+    os.check("Ostream& operator<<(Ostream&, const long)");
+    return os;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulong.C b/src/OpenFOAM/primitives/ints/ulong/ulong.C
new file mode 100644
index 00000000..afcedbdf
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulong.C
@@ -0,0 +1,52 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "ulong.H"
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+const unsigned long Foam::pTraits<unsigned long>::zero = 0;
+const unsigned long Foam::pTraits<unsigned long>::one = 1;
+const unsigned long Foam::pTraits<unsigned long>::min = ULONG_MIN;
+const unsigned long Foam::pTraits<unsigned long>::max = ULONG_MAX;
+const unsigned long Foam::pTraits<unsigned long>::rootMin =
+    pTraits<unsigned long>::min;
+const unsigned long Foam::pTraits<unsigned long>::rootMax =
+    pTraits<unsigned long>::max;
+
+const char* Foam::pTraits<unsigned long>::componentNames[] = { "x" };
+
+Foam::pTraits<unsigned long>::pTraits(const unsigned long& p)
+:
+    p_(p)
+{}
+
+Foam::pTraits<unsigned long>::pTraits(Istream& is)
+{
+    is >> p_;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulong.H b/src/OpenFOAM/primitives/ints/ulong/ulong.H
new file mode 100644
index 00000000..95b21b2b
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulong.H
@@ -0,0 +1,138 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+Primitive
+    unisgned long
+
+Description
+    unsigned long integer
+
+SourceFiles
+    ulong.C
+    ulongIO.C
+
+\*---------------------------------------------------------------------------*/
+
+#ifndef ulong_H
+#define ulong_H
+
+#define __STDC_LIMIT_MACROS
+#include <stdint.h>
+#include <climits>
+#include <cstdlib>
+
+#include "word.H"
+#include "pTraits.H"
+#include "direction.H"
+
+#ifndef ULONG_MIN
+#define ULONG_MIN 0
+#endif
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+namespace Foam
+{
+
+class Istream;
+class Ostream;
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+//- Return a word representation of an unsigned long
+word name(const unsigned long);
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+unsigned long readUlong(Istream&);
+bool read(const char*, unsigned long&);
+Istream& operator>>(Istream&, unsigned long&);
+Ostream& operator<<(Ostream&, const unsigned long);
+
+//- Template specialization for pTraits<unsigned long>
+template<>
+class pTraits<unsigned long>
+{
+    unsigned long p_;
+
+public:
+
+    //- Component type
+    typedef unsigned long cmptType;
+
+    // Member constants
+
+        enum
+        {
+            dim = 3,         //!< Dimensionality of space
+            rank = 0,        //!< Rank of uint64_t is 0
+            nComponents = 1  //!< Number of components in uint64_t is 1
+        };
+
+
+    // Static data members
+
+        static const char* const typeName;
+        static const char* componentNames[];
+        static const unsigned long zero;
+        static const unsigned long one;
+        static const unsigned long min;
+        static const unsigned long max;
+        static const unsigned long rootMax;
+        static const unsigned long rootMin;
+
+
+    // Constructors
+
+        //- Construct from primitive
+        explicit pTraits(const unsigned long&);
+
+        //- Construct from Istream
+        pTraits(Istream&);
+
+
+    // Member Functions
+
+        //- Access to the uint64_t value
+        operator unsigned long() const
+        {
+            return p_;
+        }
+
+        //- Access to the uint value
+        operator unsigned long&()
+        {
+            return p_;
+        }
+};
+
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+} // End namespace Foam
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+#endif
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ints/ulong/ulongIO.C b/src/OpenFOAM/primitives/ints/ulong/ulongIO.C
new file mode 100644
index 00000000..aa62c611
--- /dev/null
+++ b/src/OpenFOAM/primitives/ints/ulong/ulongIO.C
@@ -0,0 +1,101 @@
+/*---------------------------------------------------------------------------*\
+  =========                 |
+  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+   \\    /   O peration     |
+    \\  /    A nd           | Copyright (C) 2014 OpenFOAM Foundation
+     \\/     M anipulation  |
+-------------------------------------------------------------------------------
+License
+    This file is part of OpenFOAM.
+
+    OpenFOAM is free software: you can redistribute it and/or modify it
+    under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+    for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+
+\*---------------------------------------------------------------------------*/
+
+#include "error.H"
+
+#include "ulong.H"
+#include "IOstreams.H"
+
+#include <sstream>
+
+// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
+
+Foam::word Foam::name(const unsigned long val)
+{
+    std::ostringstream buf;
+    buf << val;
+    return buf.str();
+}
+
+
+// * * * * * * * * * * * * * * * IOstream Operators  * * * * * * * * * * * * //
+
+Foam::Istream& Foam::operator>>(Istream& is, unsigned long& i)
+{
+    token t(is);
+
+    if (!t.good())
+    {
+        is.setBad();
+        return is;
+    }
+
+    if (t.isLabel())
+    {
+        i = static_cast<unsigned long>(t.labelToken());
+    }
+    else
+    {
+        is.setBad();
+        FatalIOErrorIn("operator>>(Istream&, unsigned long&)", is)
+            << "wrong token type - expected unsigned long, found " << t.info()
+            << exit(FatalIOError);
+
+        return is;
+    }
+
+    // Check state of Istream
+    is.check("Istream& operator>>(Istream&, unsigned long&)");
+
+    return is;
+}
+
+
+unsigned long Foam::readUlong(Istream& is)
+{
+    unsigned long val;
+    is >> val;
+
+    return val;
+}
+
+
+bool Foam::read(const char* buf, unsigned long& s)
+{
+    char *endptr = NULL;
+    s = strtoul(buf, &endptr, 10);
+    return (*endptr == 0);
+}
+
+
+Foam::Ostream& Foam::operator<<(Ostream& os, const unsigned long i)
+{
+    os.write(label(i));
+    os.check("Ostream& operator<<(Ostream&, const unsigned long)");
+    return os;
+}
+
+
+// ************************************************************************* //
diff --git a/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H b/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H
index eaafd563..4899d7ef 100644
--- a/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H
+++ b/src/OpenFOAM/primitives/ranges/labelRange/labelRangeI.H
@@ -23,6 +23,8 @@ License
 
 \*---------------------------------------------------------------------------*/
 
+#include "nullObject.H"
+
 
 // * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * //
 
@@ -50,7 +52,7 @@ inline Foam::labelRange::labelRange(const label start, const label size)
 
 inline Foam::labelRange::const_iterator::const_iterator()
 :
-   range_(*reinterpret_cast< Foam::labelRange* >(0)),
+   range_(NullObjectRef< Foam::labelRange>()),
    index_(-1)
 {}
 
diff --git a/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H b/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H
index 2c6f75ae..3a91d64c 100644
--- a/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H
+++ b/src/OpenFOAM/primitives/ranges/labelRange/labelRangesI.H
@@ -42,7 +42,7 @@ inline Foam::labelRanges::labelRanges(const label nElem)
 
 inline Foam::labelRanges::const_iterator::const_iterator()
 :
-   list_(*reinterpret_cast< Foam::labelRanges* >(0)),
+   list_(NullObjectRef<Foam::labelRanges>()),
    index_(-1),
    subIndex_(-1)
 {}
diff --git a/src/conversion/ensight/part/ensightPartCells.C b/src/conversion/ensight/part/ensightPartCells.C
index 786b91a9..7fc43e86 100644
--- a/src/conversion/ensight/part/ensightPartCells.C
+++ b/src/conversion/ensight/part/ensightPartCells.C
@@ -182,7 +182,7 @@ Foam::ensightPartCells::ensightPartCells
 )
 :
     ensightPart(partNumber, partDescription),
-    mesh_(*reinterpret_cast<polyMesh*>(0))
+    mesh_(NullObjectRef<polyMesh>())
 {}
 
 
@@ -237,7 +237,7 @@ Foam::ensightPartCells::ensightPartCells(const ensightPartCells& part)
 Foam::ensightPartCells::ensightPartCells(Istream& is)
 :
     ensightPart(),
-    mesh_(*reinterpret_cast<polyMesh*>(0))
+    mesh_(NullObjectRef<polyMesh>())
 {
     reconstruct(is);
 }
diff --git a/src/fvAgglomerationMethods/Allwmake b/src/fvAgglomerationMethods/Allwmake
index 16340f0e..5381cfe5 100755
--- a/src/fvAgglomerationMethods/Allwmake
+++ b/src/fvAgglomerationMethods/Allwmake
@@ -8,9 +8,14 @@ set -x
 
 export ParMGridGen=$WM_THIRD_PARTY_DIR/ParMGridGen-1.0
 
-if [ -e "$FOAM_LIBBIN/libMGridGen.so" ]
+if [ "$(uname -s)" = "Darwin" ]
 then
-    wmake $targetType MGridGenGamgAgglomeration
+	[ -e "/usr/local/opt/parmgridgen/lib/libmgrid.a" \
+		-a "$WM_LABEL_SIZE" -ne "64" ] \
+		&& wmake $targetType MGridGenGamgAgglomeration
+else
+	[ -e "$FOAM_LIBBIN/libMGridGen.so" ] \
+		&& wmake $targetType MGridGenGamgAgglomeration
 fi
 
 wmake $targetType pairPatchAgglomeration
diff --git a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
index a58b65fb..a135bafe 100644
--- a/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
+++ b/src/fvAgglomerationMethods/MGridGenGamgAgglomeration/Make/options
@@ -7,9 +7,17 @@ TYPE_REAL=-DTYPE_REAL
 
 EXE_INC = \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
-    -I$(ParMGridGen)/MGridGen/Lib/lnInclude \
-    -I$(ParMGridGen)/MGridGen/IMlib/lnInclude \
     $(TYPE_REAL)
 
-LIB_LIBS = \
-    -L$(FOAM_EXT_LIBBIN) -lMGridGen
+LIB_LIBS =
+
+ifeq ($(shell uname -s),Darwin)
+    LIB_LIBS = -L/usr/local/opt/parmgridgen/lib -lmgrid
+    EXE_INC += -I/usr/local/opt/parmgridgen/include
+else
+	LIB_LIBS = -L$(FOAM_EXT_LIBBIN) -lMGridGen
+    EXE_INC += -I$(ParMGridGen)/MGridGen/Lib/lnInclude
+    EXE_INC += -I$(ParMGridGen)/MGridGen/IMlib/lnInclude
+endif
+
+/* vim:set ft=make sw=4 ts=4 et: */
diff --git a/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C b/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C
index 9149eaf9..e9a4ff6e 100644
--- a/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C
+++ b/src/meshTools/edgeFaceCirculator/edgeFaceCirculator.C
@@ -30,7 +30,7 @@ License
 
 const Foam::edgeFaceCirculator Foam::edgeFaceCirculator::endConstIter
 (
-    *reinterpret_cast<primitiveMesh*>(0),       // primitiveMesh
+    NullObjectRef<primitiveMesh>(),             // primitiveMesh
     -1,                                         // faceLabel
     false,                                      // ownerSide
     -1,                                         // index
diff --git a/src/parallel/decompose/metisDecomp/Allwmake b/src/parallel/decompose/metisDecomp/Allwmake
index 549e4229..c31d07df 100755
--- a/src/parallel/decompose/metisDecomp/Allwmake
+++ b/src/parallel/decompose/metisDecomp/Allwmake
@@ -1,6 +1,9 @@
 #!/bin/sh
 cd ${0%/*} || exit 1    # Run from this directory
 
+SO_EXT=so
+[ "$(uname -s)" = "Darwin" ] && SO_EXT=dylib
+
 # Parse arguments for library compilation
 targetType=libso
 . $WM_PROJECT_DIR/wmake/scripts/AllwmakeParseArguments
@@ -10,7 +13,7 @@ if settings=`$WM_PROJECT_DIR/bin/foamEtcFile config/metis.sh`
 then
     . $settings
     echo "using METIS_ARCH_PATH=$METIS_ARCH_PATH"
-    if [ -r $METIS_ARCH_PATH/lib/libmetis.so ]
+    if [ -r "$METIS_ARCH_PATH/lib/libmetis.$SO_EXT" ]
     then
         wmake $targetType
     fi
@@ -20,5 +23,6 @@ else
     echo
 fi
 
+unset SO_EXT
 
 # ----------------------------------------------------------------- end-of-file
diff --git a/src/parallel/decompose/metisDecomp/Make/options b/src/parallel/decompose/metisDecomp/Make/options
index 8acd678f..d4dfa96b 100644
--- a/src/parallel/decompose/metisDecomp/Make/options
+++ b/src/parallel/decompose/metisDecomp/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(METIS_ARCH_PATH)/include \
     -I../decompositionMethods/lnInclude
 
diff --git a/src/parallel/decompose/metisDecomp/metisDecomp.C b/src/parallel/decompose/metisDecomp/metisDecomp.C
index d87619bd..6c7380fa 100644
--- a/src/parallel/decompose/metisDecomp/metisDecomp.C
+++ b/src/parallel/decompose/metisDecomp/metisDecomp.C
@@ -67,7 +67,11 @@ Foam::label Foam::metisDecomp::decompose
 
     // processor weights initialised with no size, only used if specified in
     // a file
-    Field<scalar> processorWeights;
+#if REALTYPEWIDTH == 32
+    Field<floatScalar> processorWeights;
+#else
+    Field<doubleScalar> processorWeights;
+#endif
 
     // cell weights (so on the vertices of the dual)
     List<label> cellWeights;
diff --git a/src/parallel/decompose/ptscotchDecomp/Make/options b/src/parallel/decompose/ptscotchDecomp/Make/options
index 25ca6e9d..2cace477 100644
--- a/src/parallel/decompose/ptscotchDecomp/Make/options
+++ b/src/parallel/decompose/ptscotchDecomp/Make/options
@@ -3,10 +3,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
-    -I$(SCOTCH_ARCH_PATH)/include/$(FOAM_MPI) \
-    -I/usr/include/scotch \
+    -I$(SCOTCH_ARCH_PATH)/include \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN)/$(FOAM_MPI) -lptscotch -lptscotcherrexit -lscotch ${LINK_FLAGS} -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lptscotch -lptscotcherrexit -lscotch
+
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/parallel/decompose/scotchDecomp/Make/options b/src/parallel/decompose/scotchDecomp/Make/options
index 3bb11fba..23701f5d 100644
--- a/src/parallel/decompose/scotchDecomp/Make/options
+++ b/src/parallel/decompose/scotchDecomp/Make/options
@@ -7,10 +7,12 @@ sinclude $(RULES)/mplib$(WM_MPLIB)
 
 EXE_INC = \
     $(PFLAGS) $(PINC) \
-    -I$(SCOTCH_ROOT)/include \
     -I$(SCOTCH_ARCH_PATH)/include \
-    -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN) -lscotch -lscotcherrexit -lrt
+    -L$(SCOTCH_ARCH_PATH)/lib -lscotch -lscotcherrexit
+
+ifneq ($(shell uname -s),Darwin)
+LIB_LIBS += -lrt
+endif
diff --git a/src/renumber/SloanRenumber/Make/options b/src/renumber/SloanRenumber/Make/options
index 492a3ae1..29597e3d 100644
--- a/src/renumber/SloanRenumber/Make/options
+++ b/src/renumber/SloanRenumber/Make/options
@@ -1,12 +1,21 @@
-EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
-    -I$(BOOST_ARCH_PATH)/include \
-    -I$(LIB_SRC)/meshTools/lnInclude \
-    -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
-    -I$(LIB_SRC)/renumber/renumberMethods/lnInclude
+EXE_INC = -I$(BOOST_ARCH_PATH)/include \
+	  -I$(LIB_SRC)/meshTools/lnInclude \
+	  -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
+	  -I$(LIB_SRC)/renumber/renumberMethods/lnInclude
 
-LIB_LIBS = \
-    -L$(BOOST_ARCH_PATH)/lib -lboost_thread \
-    -lmeshTools \
-    -ldecompositionMethods \
-    -lrenumberMethods
+LIB_LIBS = -L$(BOOST_ARCH_PATH)/lib \
+	   -lmeshTools \
+	   -ldecompositionMethods \
+	   -lrenumberMethods
+
+ifeq ($(shell uname -s),Darwin)
+SO = dylib
+else
+SO = so
+endif
+
+ifneq ("$(wildcard $(BOOST_ARCH_PATH)/lib/libboost_thread-mt.$(SO))","")
+LIB_LIBS += -lboost_thread-mt
+else
+LIB_LIBS += -lboost_thread
+endif
diff --git a/wmake/makeWmake b/wmake/makeWmake
deleted file mode 100755
index 98b5b55e..00000000
--- a/wmake/makeWmake
+++ /dev/null
@@ -1,73 +0,0 @@
-#!/bin/sh
-#------------------------------------------------------------------------------
-# =========                 |
-# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
-#  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
-#    \\/     M anipulation  |
-#------------------------------------------------------------------------------
-# License
-#     This file is part of OpenFOAM.
-#
-#     OpenFOAM is free software: you can redistribute it and/or modify it
-#     under the terms of the GNU General Public License as published by
-#     the Free Software Foundation, either version 3 of the License, or
-#     (at your option) any later version.
-#
-#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
-#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-#     for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
-#
-# Script
-#     makeWmake
-#
-# Description
-#     Build platform-specific parts of wmake
-#
-#------------------------------------------------------------------------------
-Script=${0##*/}
-
-usage() {
-    exec 1>&2
-    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
-    cat<<USAGE
-Usage: $Script
-
-  Build platform-specific parts of wmake
-
-USAGE
-    exit 1
-}
-
-case "$1" in
--h | -help)
-    usage
-    ;;
-esac
-
-
-echo ========================================
-echo Build platform-specific parts of wmake
-echo
-(
-    set -x
-    make -C ${0%/*}/src $@
-)
-echo
-echo ========================================
-echo Done building wmake
-echo ========================================
-echo
-
-
-#------------------------------------------------------------------------------
-# Cleanup local variables and functions
-#------------------------------------------------------------------------------
-
-unset Script usage
-
-#------------------------------------------------------------------------------
diff --git a/wmake/MakefileApps b/wmake/makefiles/apps
similarity index 90%
rename from wmake/MakefileApps
rename to wmake/makefiles/apps
index 20955e78..38837a3a 100644
--- a/wmake/MakefileApps
+++ b/wmake/makefiles/apps
@@ -2,7 +2,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -22,7 +22,7 @@
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
 # File
-#     MakefileApps
+#     wmake/makefiles/apps
 #
 # Description
 #     Makefile used by
@@ -38,5 +38,4 @@ application: $(FOAM_APPS)
 $(FOAM_APPS):
 	+@wmake -all $(TARGET) $@
 
-
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/MakefileFiles b/wmake/makefiles/files
similarity index 75%
rename from wmake/MakefileFiles
rename to wmake/makefiles/files
index 8c553535..bd121240 100644
--- a/wmake/MakefileFiles
+++ b/wmake/makefiles/files
@@ -2,7 +2,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -22,33 +22,32 @@
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
 # File
-#     MakefileFiles
+#     wmake/makefiles/files
 #
 # Description
 #     A Makefile for the 'options' and 'files' files, used by wmake
 #
 #------------------------------------------------------------------------------
 
-GENERAL_RULES = $(WM_DIR)/rules/General
-RULES         = $(WM_DIR)/rules/$(WM_ARCH)$(WM_COMPILER)
-OBJECTS_DIR   = $(MAKE_DIR)/$(WM_OPTIONS)
-
+GENERAL_RULES   = $(WM_DIR)/rules/General
 include $(GENERAL_RULES)/general
-include $(RULES)/general
+
 
 #------------------------------------------------------------------------------
-# declare names of make system control files derived from file 'files'
+# Declare names of make system control files derived from file 'files'
 #------------------------------------------------------------------------------
 
-OPTIONS = $(OBJECTS_DIR)/options
-FILES   = $(OBJECTS_DIR)/files
-VARS    = $(OBJECTS_DIR)/variables
-SFILES  = $(OBJECTS_DIR)/sourceFiles
+OBJECTS_DIR     = $(MAKE_DIR)/$(WM_OPTIONS)
+OPTIONS         = $(OBJECTS_DIR)/options
+FILES           = $(OBJECTS_DIR)/files
+VARS            = $(OBJECTS_DIR)/variables
+SFILES          = $(OBJECTS_DIR)/sourceFiles
 
 -include $(OPTIONS)
 
+
 #------------------------------------------------------------------------------
-# Declare dependecy of all make system files on FILES
+# Declare dependency of all make system files on FILES
 # Causes all derived files to be remade if any are changed or missing
 #------------------------------------------------------------------------------
 
@@ -60,18 +59,19 @@ $(OPTIONS) : $(MAKE_DIR)/options
 $(SFILES): $(MAKE_DIR)/files
 	@$(CPP) $(GFLAGS) $(MAKE_DIR)/files | sed -e 's@   *@ @g' > $(FILES)
 	# Find all macro definitions in the files
-	@grep "=" $(FILES) > $(VARS)
+	@grep --colour=never "=" $(FILES) > $(VARS)
 	echo "SOURCE = " > $(SFILES)
 	# Remove all macro definitions from the files list
-	@grep -v "=" $(FILES) >> $(SFILES)
+	@grep --colour=never -v "=" $(FILES) >> $(SFILES)
 	@rm -f $(FILES)
 	# Add a newline to files to ensure the last line is followed by a newline
 	@echo "" >> $(SFILES)
 	# Remove commented lines, blank lines, and trailing blanks from files
-	@sed -i -e '/^#/ d' -e '/^[ \t]*$$/ d' -e 's,[ \t]*$$,,' $(SFILES)
+	@sed -i~ -e '/^#/ d' -e '/^[ \t]*$$/ d' -e 's,[ \t]*$$,,' $(SFILES)
 	# Add backslashes
-	@sed -i -e 's,$$, \\,' -e '$$s,\\,,' $(SFILES)
+	@sed -i~ -e 's,$$, \\,' -e '$$s,\\,,' $(SFILES)
+	@rm $(SFILES)~
 
 $(VARS): $(SFILES)
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/Makefile b/wmake/makefiles/general
similarity index 75%
rename from wmake/Makefile
rename to wmake/makefiles/general
index 38f3f1a7..767b6a57 100644
--- a/wmake/Makefile
+++ b/wmake/makefiles/general
@@ -2,7 +2,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -22,10 +22,10 @@
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
 # File
-#     Makefile
+#     wmake/makefiles/general
 #
 # Description
-#     A generic Makefile, used by wmake
+#     Makefile used by wmake to make dependency files and libs and applications
 #
 #------------------------------------------------------------------------------
 
@@ -33,7 +33,7 @@
 # The Makefile uses a POSIX shell
 #------------------------------------------------------------------------------
 
-SHELL      = /bin/sh
+SHELL           = /bin/sh
 
 
 #------------------------------------------------------------------------------
@@ -47,29 +47,29 @@ SHELL      = /bin/sh
 # Set the directory containing the wmake scripts
 #------------------------------------------------------------------------------
 
-WM_SCRIPTS   = $(WM_DIR)/scripts
+WM_SCRIPTS      = $(WM_DIR)/scripts
 
 
 #------------------------------------------------------------------------------
 # Declare default paths
 #------------------------------------------------------------------------------
 
-LIB_SRC            = $(WM_PROJECT_DIR)/src
-LIB_PLATFORMS      = $(WM_PROJECT_DIR)/platforms/$(WM_OPTIONS)/lib
-OBJECTS_DIR        = $(MAKE_DIR)/$(WM_OPTIONS)
+LIB_SRC         = $(WM_PROJECT_DIR)/src
+LIB_PLATFORMS   = $(WM_PROJECT_DIR)/platforms/$(WM_OPTIONS)/lib
+OBJECTS_DIR     = $(MAKE_DIR)/$(WM_OPTIONS)
 
-SYS_INC            =
-SYS_LIBS           =
+SYS_INC         =
+SYS_LIBS        =
 
-PROJECT_INC        = -I$(LIB_SRC)/$(WM_PROJECT)/lnInclude \
+PROJECT_INC     = -I$(LIB_SRC)/$(WM_PROJECT)/lnInclude \
 		     -I$(LIB_SRC)/OSspecific/$(WM_OSTYPE)/lnInclude
 
-PROJECT_LIBS       = -l$(WM_PROJECT)
+PROJECT_LIBS    = -l$(WM_PROJECT)
 
-EXE_INC            =
-EXE_LIBS           =
+EXE_INC         =
+EXE_LIBS        =
 
-LIB_LIBS           =
+LIB_LIBS        =
 
 
 #------------------------------------------------------------------------------
@@ -80,7 +80,11 @@ LIB_LIBS           =
 LIB             = libNULL
 
 # Shared library extension
+ifeq ($(shell uname -s),Darwin)
+SO		= dylib
+else
 SO              = so
+endif
 
 # Project executable
 EXE             = $(WM_PROJECT).out
@@ -88,19 +92,12 @@ EXE             = $(WM_PROJECT).out
 # Standalone executable
 SEXE            = a.out
 
-
 #------------------------------------------------------------------------------
 # Set compilation and dependency building rules
 #------------------------------------------------------------------------------
 
 GENERAL_RULES = $(WM_DIR)/rules/General
-RULES         = $(WM_DIR)/rules/$(WM_ARCH)$(WM_COMPILER)
-WMAKE_BIN     = $(WM_DIR)/platforms/$(WM_ARCH)$(WM_COMPILER)
-
 include $(GENERAL_RULES)/general
-include $(RULES)/general
-include $(RULES)/$(WM_LINK_LANGUAGE)
-include $(GENERAL_RULES)/transform
 
 
 #------------------------------------------------------------------------------
@@ -136,18 +133,19 @@ LIB_HEADER_DIRS = \
 
 $(EXE): $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(EXE)
-	$(LINKEXE) $(OBJECTS) -L$(LIB_PLATFORMS) \
-	    $(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) \
-	    $(LINK_LIBS) $(GLIBS) -o $(EXE)
+	$(call WM_MESSAGE,LD,$(notdir $(EXE)))
+	$(AT)$(LINKEXE) $(OBJECTS) -L$(LIB_PLATFORMS) \
+		$(EXE_LIBS) $(PROJECT_LIBS) $(SYS_LIBS) \
+		$(LINK_LIBS) $(GLIBS) -o $(EXE)
 
 exe:    $(SEXE)
-	@echo \'$(SEXE)\' is up to date.
+	$(call WM_REPORT,$(SEXE))
 
 $(SEXE):$(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(SEXE)
-	$(LINKEXE) $(OBJECTS) $(EXE_LIBS) \
-	    $(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXE)
-
+	$(call WM_MESSAGE,LD,$(notdir $(EXE)))
+	$(AT)$(LINKEXE) $(OBJECTS) $(EXE_LIBS) \
+		$(SYS_LIBS) $(LINK_LIBS) $(GLIBS) -o $(SEXE)
 
 #------------------------------------------------------------------------------
 # Define link statements for libraries
@@ -156,30 +154,33 @@ $(SEXE):$(OBJECTS)
 objects: $(OBJECTS)
 
 libso:  $(LIB).$(SO)
-	@echo \'$(LIB).$(SO)\' is up to date.
+	$(call WM_REPORT,$(LIB).$(SO))
 
 $(LIB).$(SO): $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
-	$(LINKLIBSO) $(OBJECTS) -L$(LIB_PLATFORMS) \
-	    $(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
+	$(call WM_MESSAGE,LD,$(notdir $(LIB).$(SO)))
+	$(AT)$(LINKLIBSO) $(OBJECTS) -L$(LIB_PLATFORMS) \
+		$(LIB_LIBS) $(GLIB_LIBS) -o $(LIB).$(SO)
 
 lib:    $(LIB).a
-	@echo \'$(LIB).a\' is up to date.
+	$(call WM_REPORT,$(LIB).a)
 
 $(LIB).a: $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
 	@rm -f $(LIB).a
-	$(AR) $(ARFLAGS) $(LIB).a $(OBJECTS)
-	$(RANLIB) $(LIB).a
+	$(call WM_MESSAGE,AR,$(notdir $(LIB)))
+	$(AT)$(AR) $(ARFLAGS) $(notdir $(LIB)).a $(OBJECTS)
+	$(call WM_MESSAGE,RANLIB,$(notdir $(LIB)))
+	$(AT)$(RANLIB) $(LIB).a
 
 libo:   $(LIB).o
-	@echo \'$(LIB).o\' is up to date.
+	$(call WM_REPORT,$(LIB).o)
 
 $(LIB).o: $(OBJECTS)
 	@$(WM_SCRIPTS)/makeTargetDir $(LIB)
 	@rm -f $(LIB).o
-	$(LD) -r -o $(LIB).o $(OBJECTS)
-
+	$(call WM_MESSAGE,LD,$(notdir $(LIB).o))
+	$(AT)$(LD) -r -o $(LIB).o $(OBJECTS)
 
 #------------------------------------------------------------------------------
 # Set rule to create the include directory for libraries
@@ -190,7 +191,7 @@ lnInclude: $(MAKE_DIR)/files $(MAKE_DIR)/options
 
 
 #------------------------------------------------------------------------------
-# Declare all qbject files depend on $(OBJECTS_DIR)/options
+# Declare all object files depend on $(OBJECTS_DIR)/options
 #------------------------------------------------------------------------------
 
 $(OBJECTS) : $(OBJECTS_DIR)/options
@@ -198,15 +199,17 @@ $(foreach S,$(SOURCE),$(eval $(OBJECTS_DIR)/$(basename $S).o : $(OBJECTS_DIR)/$S
 
 
 #------------------------------------------------------------------------------
-# Set depedency rule and include dependency lists
+# Set dependency rule and include dependency lists
 #------------------------------------------------------------------------------
 
-.PHONY: dep
+.PHONY: dep updatedep
 dep: $(DEPENDENCIES)
 
-ifeq ($(findstring lnInclude,$(MAKECMDGOALS)),)
+updatedep: dep
+
+ifeq ($(findstring lnInclude,$(MAKECMDGOALS))$(findstring updatedep,$(MAKECMDGOALS)),)
 -include $(DEPENDENCIES)
 endif
 
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/CGAL b/wmake/rules/General/CGAL
index 354e719a..16425295 100644
--- a/wmake/rules/General/CGAL
+++ b/wmake/rules/General/CGAL
@@ -11,3 +11,5 @@ CGAL_LIBS = \
     -L$(CGAL_ARCH_PATH)/lib \
     -lCGAL \
     -lmpfr
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/X b/wmake/rules/General/X
index f55fa8b3..01e1df85 100644
--- a/wmake/rules/General/X
+++ b/wmake/rules/General/X
@@ -3,3 +3,5 @@
 XFLAGS     =
 XINC       = $(XFLAGS) -I/usr/include/X11
 XLIBS      = -lXext -lX11
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/bison b/wmake/rules/General/bison
index b741436a..834a3127 100644
--- a/wmake/rules/General/bison
+++ b/wmake/rules/General/bison
@@ -1,7 +1,15 @@
 SUFFIXES += .y .Y
 
-ytoo = bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/$(<F).h ; \
-     $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+define ytoo
+$(call WM_MESSAGE,yy,$<)
+$(AT)bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/$(<F).h ; \
+	$(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+endef
 
-Ytoo = bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
-     $(CC) $(c++FLAGS) -c  $(@D)/$(<F).C -o $@
+define Ytoo
+$(call WM_MESSAGE,YY,$<)
+$(AT)bison -v -d -y $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
+	$(CC) $(c++FLAGS) -c  $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/btyacc b/wmake/rules/General/btyacc
index 44a58c39..78d1c85b 100644
--- a/wmake/rules/General/btyacc
+++ b/wmake/rules/General/btyacc
@@ -1,4 +1,11 @@
 SUFFIXES += .y
 
-ytoo = btyacc -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define ytoo
+$(call WM_MESSAGE,yy,$<)
+$(AT)btyacc -v -d $(SKELETON) $<
+$(AT)mv y_tab.c $(@D)/$(<F).C
+$(AT)mv y_tab.h $(@D)/$(<F).H
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/btyacc++ b/wmake/rules/General/btyacc++
index 78445585..de7550ad 100644
--- a/wmake/rules/General/btyacc++
+++ b/wmake/rules/General/btyacc++
@@ -1,4 +1,6 @@
 SUFFIXES += .Y
 
-Ytoo = btyacc++ -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
+Ytoo = $(call WM_MESSAGE,YY,$<); $(AT)btyacc++ -v -d $(SKELETON) $< ; mv y_tab.c $(@D)/$(<F).C ; mv y_tab.h $(@D)/$(<F).H ; \
      $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/byacc b/wmake/rules/General/byacc
index 60a9e18f..1f33ffbd 100644
--- a/wmake/rules/General/byacc
+++ b/wmake/rules/General/byacc
@@ -1,4 +1,11 @@
 SUFFIXES += .y
 
-ytoo = byacc -v $(YYPREFIX) -d $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/$(<F).H ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define ytoo
+$(call WM_MESSAGE,yy,$(notdir $<))
+$(AT)byacc -v $(YYPREFIX) -d $<
+$(AT)mv y.tab.c $(@D)/$(<F).C
+$(AT)mv y.tab.h $(@D)/$(<F).H
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/flex b/wmake/rules/General/flex
index 2b65bb24..fef4fa50 100644
--- a/wmake/rules/General/flex
+++ b/wmake/rules/General/flex
@@ -1,3 +1,9 @@
 SUFFIXES += .l
 
-ltoo = flex -o $(@D)/$(<F).c $< ; $(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+define ltoo
+$(call WM_MESSAGE,ll,$<)
+$(AT)flex -o $(@D)/$(<F).c $(notdir $<)
+$(AT)$(cc) $(cFLAGS) -c  $(@D)/$(<F).c -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/flex++ b/wmake/rules/General/flex++
index 894181b4..d638d249 100644
--- a/wmake/rules/General/flex++
+++ b/wmake/rules/General/flex++
@@ -1,3 +1,9 @@
 SUFFIXES += .L
 
-Ltoo = flex -+ -o$(@D)/$(<F).C -f $< ; $(CC) $(c++FLAGS) $(c++LESSWARN) -c $(@D)/$(<F).C -o $@
+define Ltoo
+$(call WM_MESSAGE,LL,$(notdir $<))
+$(AT)flex -+ -o$(@D)/$(<F).C -f $<
+$(AT)$(CC) $(c++FLAGS) $(c++LESSWARN) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/general b/wmake/rules/General/general
index 062c704f..7d7552f5 100644
--- a/wmake/rules/General/general
+++ b/wmake/rules/General/general
@@ -1,10 +1,27 @@
 #-------------------------------*- makefile -*---------------------------------
 
-AR         = ar
-ARFLAGS    = cr
-RANLIB     = ranlib
-CPP        = cpp
-LD         = ld
+ifeq ("$(V)","0")
+WM_MESSAGE = @echo "  $1	$2"
+MESSAGE = echo "  $1	$2"
+WM_REPORT = @echo ">> $(notdir $1)"
+AT = @
+else
+MESSAGE = true
+WM_MESSAGE =
+WM_REPORT = @echo \'$1\' is up to date.
+AT =
+endif
+
+XCRUN =
+ifeq ("$(shell uname -s)","Darwin")
+XCRUN = xcrun
+endif
+
+AR         = $(XCRUN) ar
+ARFLAGS    = $(XCRUN) cr
+RANLIB     = $(XCRUN) ranlib
+CPP        = $(XCRUN) cpp
+LD         = $(XCRUN) ld
 
 GFLAGS     = -D$(WM_ARCH) -DWM_ARCH_OPTION=$(WM_ARCH_OPTION) \
              -DWM_$(WM_PRECISION_OPTION) -DWM_LABEL_SIZE=$(WM_LABEL_SIZE)
@@ -12,4 +29,16 @@ GINC       =
 GLIBS      = -lm
 GLIB_LIBS  =
 
-#------------------------------------------------------------------------------
+
+COMPILER_TYPE   = $(shell echo $(WM_COMPILER) | tr -d [:digit:])
+DEFAULT_RULES   = $(WM_DIR)/rules/$(WM_ARCH)$(COMPILER_TYPE)
+RULES           = $(WM_DIR)/rules/$(WM_ARCH)$(WM_COMPILER)
+WMAKE_BIN       = $(WM_DIR)/platforms/$(WM_ARCH)$(WM_COMPILER)
+
+include $(DEFAULT_RULES)/general
+include $(DEFAULT_RULES)/$(WM_LINK_LANGUAGE)
+-include $(RULES)/general
+-include $(RULES)/$(WM_LINK_LANGUAGE)
+include $(GENERAL_RULES)/transform
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/moc b/wmake/rules/General/moc
index 93749733..98981258 100644
--- a/wmake/rules/General/moc
+++ b/wmake/rules/General/moc
@@ -1,3 +1,9 @@
 SUFFIXES += .qt
 
-qttoo = $(QTDIR)/bin/moc -f $< -o $(@D)/$(<F).C ; $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define qttoo
+$(call WM_MESSAGE,MOC,$(notdir $<))
+$(AT)$(QTDIR)/bin/moc -f $< -o $(@D)/$(<F).C
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplib b/wmake/rules/General/mplib
index 294bd861..8ccb07f1 100644
--- a/wmake/rules/General/mplib
+++ b/wmake/rules/General/mplib
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       =
 PLIBS      =
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibMPICH b/wmake/rules/General/mplibMPICH
index 611641af..9bf21ec3 100644
--- a/wmake/rules/General/mplibMPICH
+++ b/wmake/rules/General/mplibMPICH
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpich -lrt
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibMPICH-GM b/wmake/rules/General/mplibMPICH-GM
index 1921318a..6c569ec5 100644
--- a/wmake/rules/General/mplibMPICH-GM
+++ b/wmake/rules/General/mplibMPICH-GM
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpich -L$(GM_LIB_PATH) -lgm
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibOPENMPI b/wmake/rules/General/mplibOPENMPI
index f1f88999..216ce560 100644
--- a/wmake/rules/General/mplibOPENMPI
+++ b/wmake/rules/General/mplibOPENMPI
@@ -1,3 +1,4 @@
 PFLAGS     = -DOMPI_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib$(WM_COMPILER_LIB_ARCH) -L$(MPI_ARCH_PATH)/lib -lmpi
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibQSMPI b/wmake/rules/General/mplibQSMPI
index aa15c1b5..d54766dd 100644
--- a/wmake/rules/General/mplibQSMPI
+++ b/wmake/rules/General/mplibQSMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSGIMPI b/wmake/rules/General/mplibSGIMPI
index 205b9406..4fda8eeb 100644
--- a/wmake/rules/General/mplibSGIMPI
+++ b/wmake/rules/General/mplibSGIMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DSGIMPI -DMPI_NO_CPPBIND
 PINC       = -isystem $(MPI_ARCH_PATH)/include
 PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSYSTEMMPI b/wmake/rules/General/mplibSYSTEMMPI
index a0d3d309..112530e3 100644
--- a/wmake/rules/General/mplibSYSTEMMPI
+++ b/wmake/rules/General/mplibSYSTEMMPI
@@ -3,3 +3,5 @@
 PFLAGS     = $(MPI_ARCH_FLAGS)
 PINC       = $(MPI_ARCH_INC)
 PLIBS      = $(MPI_ARCH_LIBS)
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/mplibSYSTEMOPENMPI b/wmake/rules/General/mplibSYSTEMOPENMPI
index 639c8ce2..c0854b73 100644
--- a/wmake/rules/General/mplibSYSTEMOPENMPI
+++ b/wmake/rules/General/mplibSYSTEMOPENMPI
@@ -3,3 +3,5 @@
 PFLAGS     = -DOMPI_SKIP_MPICXX
 PINC       = $(shell mpicc --showme:compile)
 PLIBS      = $(shell mpicc --showme:link)
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/standard b/wmake/rules/General/standard
index ccd69ced..25343453 100644
--- a/wmake/rules/General/standard
+++ b/wmake/rules/General/standard
@@ -11,4 +11,4 @@ include $(GENERAL_RULES)/bison
 include $(GENERAL_RULES)/moc
 include $(GENERAL_RULES)/X
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/transform b/wmake/rules/General/transform
index bffe6055..5e06256e 100644
--- a/wmake/rules/General/transform
+++ b/wmake/rules/General/transform
@@ -2,14 +2,16 @@
 
 define DEFINE_TRANSFORM
 $(OBJECTS_DIR)/%.o : %$1
-	$$($(subst .,,$(1))too)
+	$(call WM_MESSAGE,CC,$(value <F))
+	$(AT)$$($(subst .,,$(1))too)
 endef
 
 $(foreach s,$(SUFFIXES),$(eval $(call DEFINE_TRANSFORM,$(s))))
 
 $(OBJECTS_DIR)/%.dep : %
 	@$(WM_SCRIPTS)/makeTargetDir $@
+	$(call WM_MESSAGE,DEP,$(notdir $<))
 	@$(WMAKE_BIN)/wmkdep -I$(*D) $(LIB_HEADER_DIRS) $< | \
 	    sed 's,$(WM_PROJECT_DIR),$$(WM_PROJECT_DIR),' > $@
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/version b/wmake/rules/General/version
index ffd070d0..911ab5d4 100644
--- a/wmake/rules/General/version
+++ b/wmake/rules/General/version
@@ -3,10 +3,10 @@
 SUFFIXES += .Cver
 
 # Update version strings in C++ file and in $WM_PROJECT_DIR/.build file
-Cvertoo = \
-    sed -e 's!VERSION_STRING!$(shell wmakePrintBuild -major)!' \
-        -e 's!BUILD_STRING!$(shell wmakePrintBuild -update)!' \
-        $< > $(@D)/$(<F).C; \
-    $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+Cvertoo = sed -e 's!VERSION_STRING!$(shell wmakePrintBuild -major)!' \
+	  -e 's!BUILD_STRING!$(shell wmakePrintBuild -update)!' \
+	  $< > $(@D)/$(<F).C; \
+	  $(call MESSAGE,CC,$(notdir $(@D)/$(<F).C)); \
+	  $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
 
-#------------------------------------------------------------------------------
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/General/yacc b/wmake/rules/General/yacc
index d583a63f..91a54638 100644
--- a/wmake/rules/General/yacc
+++ b/wmake/rules/General/yacc
@@ -1,7 +1,19 @@
 SUFFIXES += .y .Y
 
-ytoo = yacc -v -d $< ; mv y.tab.c $(@D)/$(<F).c ; mv y.tab.h $(@D)/parser.h ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).c -o $@
+define ytoo
+$(call WM_MESSAGE,YY,$(notdir $<))
+$(AT)yacc -v -d $<
+$(AT)mv y.tab.c $(@D)/$(<F).c
+$(AT)mv y.tab.h $(@D)/parser.h
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).c -o $@
+endef
 
-Ytoo = yacc -v -d $< ; mv y.tab.c $(@D)/$(<F).C ; mv y.tab.h $(@D)/parser.H ; \
-     $(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+define Ytoo
+$(call WM_MESSAGE,YY,$(notdir $<))
+$(AT)yacc -v -d $<
+$(AT)mv y.tab.c $(@D)/$(<F).C
+$(AT)mv y.tab.h $(@D)/parser.H
+$(AT)$(CC) $(c++FLAGS) -c $(@D)/$(<F).C -o $@
+endef
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c b/wmake/rules/darwin64Clang/c
new file mode 100644
index 00000000..5aeb7e52
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c
@@ -0,0 +1,23 @@
+SUFFIXES += .c
+
+cWARN        = -Wall
+
+cc          = xcrun cc -arch x86_64
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ifneq ("$(OSX_SDK_PATH)","")
+cFLAGS += -isysroot $(OSX_SDK_PATH)
+endif
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $< -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -Wl,-dylib,-undefined,dynamic_lookup
+
+LINKEXE     = $(cc) -Wl,-execute,-undefined,dynamic_lookup
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++ b/wmake/rules/darwin64Clang/c++
new file mode 100644
index 00000000..817522da
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++
@@ -0,0 +1,35 @@
+SUFFIXES += .C
+SUFFIXES += .cxx
+SUFFIXES += .cc
+SUFFIXES += .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wno-overloaded-virtual \
+              -Wno-unused-variable -Wno-unused-local-typedef -Wno-invalid-offsetof \
+	      -Wno-deprecated-register -Wno-undefined-var-template
+
+c++LESSWARN = -Wno-shift-negative-value
+
+CC          = xcrun c++ -arch x86_64 -std=c++14
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+ifneq ("$(OSX_SDK_PATH)","")
+c++FLAGS += -isysroot $(OSX_SDK_PATH)
+endif
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $< -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG)
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -Wl,-dylib,-undefined,dynamic_lookup
+
+LINKEXE     = $(CC) $(c++FLAGS) -Wl,-execute,-undefined,dynamic_lookup
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Debug b/wmake/rules/darwin64Clang/c++Debug
new file mode 100644
index 00000000..0ed0af6c
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Debug
@@ -0,0 +1,4 @@
+c++DBUG    = -g -DFULLDEBUG
+c++OPT      = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Opt b/wmake/rules/darwin64Clang/c++Opt
new file mode 100644
index 00000000..db785436
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Opt
@@ -0,0 +1,5 @@
+#c++DBUG     = -O0 -DFULLDEBUG -g
+c++DBUG     =
+c++OPT      = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/c++Prof b/wmake/rules/darwin64Clang/c++Prof
new file mode 100644
index 00000000..f86e0d9f
--- /dev/null
+++ b/wmake/rules/darwin64Clang/c++Prof
@@ -0,0 +1,4 @@
+c++DBUG    = -gline-tables-only
+c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cDebug b/wmake/rules/darwin64Clang/cDebug
new file mode 100644
index 00000000..d4559895
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cDebug
@@ -0,0 +1,4 @@
+cDBUG       = -g -DFULLDEBUG
+cOPT        = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cOpt b/wmake/rules/darwin64Clang/cOpt
new file mode 100644
index 00000000..0c2e03c5
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cOpt
@@ -0,0 +1,4 @@
+cDBUG       =
+cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/cProf b/wmake/rules/darwin64Clang/cProf
new file mode 100644
index 00000000..864f043d
--- /dev/null
+++ b/wmake/rules/darwin64Clang/cProf
@@ -0,0 +1,4 @@
+cDBUG       = -pg
+cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/darwin64Clang/general b/wmake/rules/darwin64Clang/general
new file mode 100644
index 00000000..9de78f27
--- /dev/null
+++ b/wmake/rules/darwin64Clang/general
@@ -0,0 +1,12 @@
+CPP        = xcrun cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+OSX_SDK_PATH = $(shell xcrun --show-sdk-path)
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c b/wmake/rules/linux64Clang/c
index e8821861..fdaa0720 100644
--- a/wmake/rules/linux64Clang/c
+++ b/wmake/rules/linux64Clang/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = clang -m64
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
@@ -14,3 +14,5 @@ LINK_LIBS   = $(cDBUG)
 
 LINKLIBSO   = $(cc) -shared
 LINKEXE     = $(cc) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++ b/wmake/rules/linux64Clang/c++
index f7d8a111..4bb059bb 100644
--- a/wmake/rules/linux64Clang/c++
+++ b/wmake/rules/linux64Clang/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-tautological-undefined-compare -Wno-shift-negative-value
 
-CC          = clang++ -m64
+CC          = clang++ -std=c++0x -m64
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
@@ -22,3 +22,5 @@ LINK_LIBS   = $(c++DBUG)
 
 LINKLIBSO   = $(CC) $(c++FLAGS) -shared
 LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Debug b/wmake/rules/linux64Clang/c++Debug
index 1c63335a..0ed0af6c 100644
--- a/wmake/rules/linux64Clang/c++Debug
+++ b/wmake/rules/linux64Clang/c++Debug
@@ -1,2 +1,4 @@
 c++DBUG    = -g -DFULLDEBUG
 c++OPT      = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Opt b/wmake/rules/linux64Clang/c++Opt
index 3363be80..a741879a 100644
--- a/wmake/rules/linux64Clang/c++Opt
+++ b/wmake/rules/linux64Clang/c++Opt
@@ -1,3 +1,4 @@
-#c++DBUG     = -O0 -DFULLDEBUG -g
 c++DBUG     =
 c++OPT      = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/c++Prof b/wmake/rules/linux64Clang/c++Prof
index 3bda4dad..e2b16ef3 100644
--- a/wmake/rules/linux64Clang/c++Prof
+++ b/wmake/rules/linux64Clang/c++Prof
@@ -1,2 +1,4 @@
 c++DBUG    = -pg
 c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cDebug b/wmake/rules/linux64Clang/cDebug
index 7b7adf10..d4559895 100644
--- a/wmake/rules/linux64Clang/cDebug
+++ b/wmake/rules/linux64Clang/cDebug
@@ -1,2 +1,4 @@
 cDBUG       = -g -DFULLDEBUG
 cOPT        = -O0
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cOpt b/wmake/rules/linux64Clang/cOpt
index 17318709..0c2e03c5 100644
--- a/wmake/rules/linux64Clang/cOpt
+++ b/wmake/rules/linux64Clang/cOpt
@@ -1,2 +1,4 @@
 cDBUG       =
 cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/cProf b/wmake/rules/linux64Clang/cProf
index ca3ac9bf..864f043d 100644
--- a/wmake/rules/linux64Clang/cProf
+++ b/wmake/rules/linux64Clang/cProf
@@ -1,2 +1,4 @@
 cDBUG       = -pg
 cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/general b/wmake/rules/linux64Clang/general
index 243cb7d8..6065b130 100644
--- a/wmake/rules/linux64Clang/general
+++ b/wmake/rules/linux64Clang/general
@@ -4,5 +4,7 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/mplibHPMPI b/wmake/rules/linux64Clang/mplibHPMPI
index d7c4b0cf..57cba69c 100644
--- a/wmake/rules/linux64Clang/mplibHPMPI
+++ b/wmake/rules/linux64Clang/mplibHPMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
 PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Clang/mplibINTELMPI b/wmake/rules/linux64Clang/mplibINTELMPI
index 278e0b0f..634628d1 100644
--- a/wmake/rules/linux64Clang/mplibINTELMPI
+++ b/wmake/rules/linux64Clang/mplibINTELMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include64
 PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c b/wmake/rules/linux64Gcc/c
index 66435ccf..6dd2f9ac 100644
--- a/wmake/rules/linux64Gcc/c
+++ b/wmake/rules/linux64Gcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc -m64
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
@@ -14,3 +14,5 @@ LINK_LIBS   = $(cDBUG)
 
 LINKLIBSO   = $(cc) -shared
 LINKEXE     = $(cc) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++ b/wmake/rules/linux64Gcc/c++
index a3246efd..a4a0c0d7 100644
--- a/wmake/rules/linux64Gcc/c++
+++ b/wmake/rules/linux64Gcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -m64
+CC          = g++ -std=c++0x -m64
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
@@ -22,3 +22,5 @@ LINK_LIBS   = $(c++DBUG)
 
 LINKLIBSO   = $(CC) $(c++FLAGS) -shared -Xlinker --add-needed -Xlinker --no-as-needed
 LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed -Xlinker --no-as-needed
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Debug b/wmake/rules/linux64Gcc/c++Debug
index 19bdb9c3..bcc9059e 100644
--- a/wmake/rules/linux64Gcc/c++Debug
+++ b/wmake/rules/linux64Gcc/c++Debug
@@ -1,2 +1,4 @@
 c++DBUG    = -ggdb3 -DFULLDEBUG
 c++OPT      = -O0 -fdefault-inline
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Opt b/wmake/rules/linux64Gcc/c++Opt
index 599e6aba..5b0c3960 100644
--- a/wmake/rules/linux64Gcc/c++Opt
+++ b/wmake/rules/linux64Gcc/c++Opt
@@ -2,3 +2,5 @@ c++DBUG     =
 c++OPT      = -O3
 
 ROUNDING_MATH = -frounding-math
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/c++Prof b/wmake/rules/linux64Gcc/c++Prof
index 3bda4dad..e2b16ef3 100644
--- a/wmake/rules/linux64Gcc/c++Prof
+++ b/wmake/rules/linux64Gcc/c++Prof
@@ -1,2 +1,4 @@
 c++DBUG    = -pg
 c++OPT     = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cDebug b/wmake/rules/linux64Gcc/cDebug
index 72b638f4..4bd3224b 100644
--- a/wmake/rules/linux64Gcc/cDebug
+++ b/wmake/rules/linux64Gcc/cDebug
@@ -1,2 +1,4 @@
 cDBUG       = -ggdb -DFULLDEBUG
 cOPT        = -O1 -fdefault-inline -finline-functions
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cOpt b/wmake/rules/linux64Gcc/cOpt
index 17318709..0c2e03c5 100644
--- a/wmake/rules/linux64Gcc/cOpt
+++ b/wmake/rules/linux64Gcc/cOpt
@@ -1,2 +1,4 @@
 cDBUG       =
 cOPT        = -O3
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/cProf b/wmake/rules/linux64Gcc/cProf
index ca3ac9bf..864f043d 100644
--- a/wmake/rules/linux64Gcc/cProf
+++ b/wmake/rules/linux64Gcc/cProf
@@ -1,2 +1,4 @@
 cDBUG       = -pg
 cOPT        = -O2
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/general b/wmake/rules/linux64Gcc/general
index 243cb7d8..6065b130 100644
--- a/wmake/rules/linux64Gcc/general
+++ b/wmake/rules/linux64Gcc/general
@@ -4,5 +4,7 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/mplibHPMPI b/wmake/rules/linux64Gcc/mplibHPMPI
index d7c4b0cf..57cba69c 100644
--- a/wmake/rules/linux64Gcc/mplibHPMPI
+++ b/wmake/rules/linux64Gcc/mplibHPMPI
@@ -1,3 +1,5 @@
 PFLAGS     =
 PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
 PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc/mplibINTELMPI b/wmake/rules/linux64Gcc/mplibINTELMPI
index 278e0b0f..634628d1 100644
--- a/wmake/rules/linux64Gcc/mplibINTELMPI
+++ b/wmake/rules/linux64Gcc/mplibINTELMPI
@@ -1,3 +1,5 @@
 PFLAGS     = -DMPICH_SKIP_MPICXX
 PINC       = -isystem $(MPI_ARCH_PATH)/include64
 PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
+
+#----------------------------- vi: set ft=make: -------------------------------
diff --git a/wmake/rules/linux64Gcc45 b/wmake/rules/linux64Gcc45
deleted file mode 120000
index 7a0c1a85..00000000
--- a/wmake/rules/linux64Gcc45
+++ /dev/null
@@ -1 +0,0 @@
-linux64Gcc
\ No newline at end of file
diff --git a/wmake/rules/linux64Gcc46 b/wmake/rules/linux64Gcc46
deleted file mode 120000
index 7a0c1a85..00000000
--- a/wmake/rules/linux64Gcc46
+++ /dev/null
@@ -1 +0,0 @@
-linux64Gcc
\ No newline at end of file
diff --git a/wmake/rules/linux64Gcc47 b/wmake/rules/linux64Gcc47
deleted file mode 120000
index 7a0c1a85..00000000
--- a/wmake/rules/linux64Gcc47
+++ /dev/null
@@ -1 +0,0 @@
-linux64Gcc
\ No newline at end of file
diff --git a/wmake/rules/linux64Gcc48 b/wmake/rules/linux64Gcc48
deleted file mode 120000
index 7a0c1a85..00000000
--- a/wmake/rules/linux64Gcc48
+++ /dev/null
@@ -1 +0,0 @@
-linux64Gcc
\ No newline at end of file
diff --git a/wmake/rules/linux64Gcc49 b/wmake/rules/linux64Gcc49
deleted file mode 120000
index 7a0c1a85..00000000
--- a/wmake/rules/linux64Gcc49
+++ /dev/null
@@ -1 +0,0 @@
-linux64Gcc
\ No newline at end of file
diff --git a/wmake/rules/linux64Gcc51 b/wmake/rules/linux64Gcc51
deleted file mode 120000
index 7a0c1a85..00000000
--- a/wmake/rules/linux64Gcc51
+++ /dev/null
@@ -1 +0,0 @@
-linux64Gcc
\ No newline at end of file
diff --git a/wmake/rules/linux64GccKNL/c b/wmake/rules/linux64GccKNL/c
new file mode 100644
index 00000000..a1cd9d66
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/c
@@ -0,0 +1,16 @@
+SUFFIXES += .c
+
+cWARN        = -Wall
+
+cc          = gcc -m64 -march=knl -DvectorMachine -DKNL
+
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $< -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -shared
+LINKEXE     = $(cc) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
diff --git a/wmake/rules/linux64GccKNL/c++ b/wmake/rules/linux64GccKNL/c++
new file mode 100644
index 00000000..ed1ad0de
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/c++
@@ -0,0 +1,24 @@
+SUFFIXES += .C
+
+c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof
+
+# Suppress some warnings for flex++ and CGAL
+c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
+
+CC          = g++ -std=c++0x -m64 -march=knl -DvectorMachine -DKNL
+
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $< -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG)
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -shared -Xlinker --add-needed -Xlinker --no-as-needed
+LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed -Xlinker --no-as-needed
diff --git a/wmake/rules/linux64GccKNL/c++Debug b/wmake/rules/linux64GccKNL/c++Debug
new file mode 100644
index 00000000..19bdb9c3
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/c++Debug
@@ -0,0 +1,2 @@
+c++DBUG    = -ggdb3 -DFULLDEBUG
+c++OPT      = -O0 -fdefault-inline
diff --git a/wmake/rules/linux64GccKNL/c++Opt b/wmake/rules/linux64GccKNL/c++Opt
new file mode 100644
index 00000000..599e6aba
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/c++Opt
@@ -0,0 +1,4 @@
+c++DBUG     =
+c++OPT      = -O3
+
+ROUNDING_MATH = -frounding-math
diff --git a/wmake/rules/linux64GccKNL/c++Prof b/wmake/rules/linux64GccKNL/c++Prof
new file mode 100644
index 00000000..3bda4dad
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/c++Prof
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff --git a/wmake/rules/linux64GccKNL/cDebug b/wmake/rules/linux64GccKNL/cDebug
new file mode 100644
index 00000000..72b638f4
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/cDebug
@@ -0,0 +1,2 @@
+cDBUG       = -ggdb -DFULLDEBUG
+cOPT        = -O1 -fdefault-inline -finline-functions
diff --git a/wmake/rules/linux64GccKNL/cOpt b/wmake/rules/linux64GccKNL/cOpt
new file mode 100644
index 00000000..17318709
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/cOpt
@@ -0,0 +1,2 @@
+cDBUG       =
+cOPT        = -O3
diff --git a/wmake/rules/linux64GccKNL/cProf b/wmake/rules/linux64GccKNL/cProf
new file mode 100644
index 00000000..ca3ac9bf
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/cProf
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff --git a/wmake/rules/linux64GccKNL/general b/wmake/rules/linux64GccKNL/general
new file mode 100644
index 00000000..1002cb16
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/general
@@ -0,0 +1,8 @@
+CPP        = cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linux64GccKNL/mplibHPMPI b/wmake/rules/linux64GccKNL/mplibHPMPI
new file mode 100644
index 00000000..d7c4b0cf
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/mplibHPMPI
@@ -0,0 +1,3 @@
+PFLAGS     =
+PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
+PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
diff --git a/wmake/rules/linux64GccKNL/mplibINTELMPI b/wmake/rules/linux64GccKNL/mplibINTELMPI
new file mode 100644
index 00000000..278e0b0f
--- /dev/null
+++ b/wmake/rules/linux64GccKNL/mplibINTELMPI
@@ -0,0 +1,3 @@
+PFLAGS     = -DMPICH_SKIP_MPICXX
+PINC       = -isystem $(MPI_ARCH_PATH)/include64
+PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
diff --git a/wmake/rules/linux64Icc/c b/wmake/rules/linux64Icc/c
index 97da5c28..14a3a231 100644
--- a/wmake/rules/linux64Icc/c
+++ b/wmake/rules/linux64Icc/c
@@ -4,7 +4,7 @@ cWARN        =
 
 cc          = icc
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linux64Icc/c++ b/wmake/rules/linux64Icc/c++
index 85b976ae..1cf106e2 100644
--- a/wmake/rules/linux64Icc/c++
+++ b/wmake/rules/linux64Icc/c++
@@ -1,14 +1,14 @@
 SUFFIXES += .C
 
 c++WARN     = -Wall -Wextra -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof \
-              -diag-disable 2304
+              -diag-disable 654,1125,2304
 
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -diag-disable 1224,2026,2305
 
 CC          = icpc -std=c++0x -fp-trap=common -fp-model precise
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository
 
diff --git a/wmake/rules/linux64Icc/general b/wmake/rules/linux64Icc/general
index 45c285f1..52b0e177 100644
--- a/wmake/rules/linux64Icc/general
+++ b/wmake/rules/linux64Icc/general
@@ -4,5 +4,5 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linux64IccKNL/c b/wmake/rules/linux64IccKNL/c
new file mode 100644
index 00000000..14a3a231
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/c
@@ -0,0 +1,16 @@
+SUFFIXES += .c
+
+cWARN        =
+
+cc          = icc
+
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $< -o $@
+
+LINK_LIBS   = $(cDBUG) -L$(IA32ROOT)/lib
+
+LINKLIBSO   = $(cc) $(cFLAGS) -shared
+LINKEXE     = $(cc) $(cFLAGS) -Xlinker --add-needed -Xlinker -z -Xlinker nodefs
diff --git a/wmake/rules/linux64IccKNL/c++ b/wmake/rules/linux64IccKNL/c++
new file mode 100644
index 00000000..1cef0333
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/c++
@@ -0,0 +1,25 @@
+SUFFIXES += .C
+
+c++WARN     = -Wall -Wextra -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof \
+              -diag-disable 654,1125,2304
+
+# Suppress some warnings for flex++ and CGAL
+c++LESSWARN = -diag-disable 1224,2026,2305
+
+CC          = icpc -std=c++0x -fp-trap=common -fp-model precise -fp-speculation=safe -DKNL
+
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $< -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG) -L$(IA64ROOT)/lib
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -shared -Xlinker --add-needed -Xlinker --no-as-needed
+LINKEXE     = $(CC) $(c++FLAGS) -Xlinker --add-needed -Xlinker --no-as-needed
diff --git a/wmake/rules/linux64IccKNL/c++Debug b/wmake/rules/linux64IccKNL/c++Debug
new file mode 100644
index 00000000..0aec1fbf
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/c++Debug
@@ -0,0 +1,2 @@
+c++DBUG    = -g -DFULLDEBUG -O0
+c++OPT     =
diff --git a/wmake/rules/linux64IccKNL/c++Opt b/wmake/rules/linux64IccKNL/c++Opt
new file mode 100644
index 00000000..6f634480
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/c++Opt
@@ -0,0 +1,2 @@
+c++DBUG     =
+c++OPT      = -O3 -DvectorMachine -xmic-avx512
diff --git a/wmake/rules/linux64IccKNL/c++Prof b/wmake/rules/linux64IccKNL/c++Prof
new file mode 100644
index 00000000..3bda4dad
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/c++Prof
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff --git a/wmake/rules/linux64IccKNL/cDebug b/wmake/rules/linux64IccKNL/cDebug
new file mode 100644
index 00000000..73dce0df
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/cDebug
@@ -0,0 +1,2 @@
+cDBUG       = -g -DFULLDEBUG -O0
+cOPT        =
diff --git a/wmake/rules/linux64IccKNL/cOpt b/wmake/rules/linux64IccKNL/cOpt
new file mode 100644
index 00000000..b5349135
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/cOpt
@@ -0,0 +1,2 @@
+cDBUG       =
+cOPT        = -O3 -no-prec-div
diff --git a/wmake/rules/linux64IccKNL/cProf b/wmake/rules/linux64IccKNL/cProf
new file mode 100644
index 00000000..ca3ac9bf
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/cProf
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff --git a/wmake/rules/linux64IccKNL/general b/wmake/rules/linux64IccKNL/general
new file mode 100644
index 00000000..52b0e177
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/general
@@ -0,0 +1,8 @@
+CPP        = /lib/cpp -traditional-cpp $(GFLAGS)
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linux64IccKNL/mplibHPMPI b/wmake/rules/linux64IccKNL/mplibHPMPI
new file mode 100644
index 00000000..d7c4b0cf
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/mplibHPMPI
@@ -0,0 +1,3 @@
+PFLAGS     =
+PINC       = -isystem $(MPI_ARCH_PATH)/include -D_MPICC_H
+PLIBS      = -L$(MPI_ARCH_PATH)/lib/linux_amd64 -lmpi
diff --git a/wmake/rules/linux64IccKNL/mplibINTELMPI b/wmake/rules/linux64IccKNL/mplibINTELMPI
new file mode 100644
index 00000000..278e0b0f
--- /dev/null
+++ b/wmake/rules/linux64IccKNL/mplibINTELMPI
@@ -0,0 +1,3 @@
+PFLAGS     = -DMPICH_SKIP_MPICXX
+PINC       = -isystem $(MPI_ARCH_PATH)/include64
+PLIBS      = -L$(MPI_ARCH_PATH)/lib64 -lmpi
diff --git a/wmake/rules/linuxARM7Gcc/c b/wmake/rules/linuxARM7Gcc/c
index d7bda5d1..dfae4add 100644
--- a/wmake/rules/linuxARM7Gcc/c
+++ b/wmake/rules/linuxARM7Gcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linuxARM7Gcc/c++ b/wmake/rules/linuxARM7Gcc/c++
index 076934ea..80fccf27 100644
--- a/wmake/rules/linuxARM7Gcc/c++
+++ b/wmake/rules/linuxARM7Gcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++
+CC          = g++ -std=c++0x
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/linuxARM7Gcc/general b/wmake/rules/linuxARM7Gcc/general
index 376c6148..1e51dcc4 100644
--- a/wmake/rules/linuxARM7Gcc/general
+++ b/wmake/rules/linuxARM7Gcc/general
@@ -5,5 +5,5 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linuxClang/c b/wmake/rules/linuxClang/c
index 7d67b4c0..2c8e8a7f 100644
--- a/wmake/rules/linuxClang/c
+++ b/wmake/rules/linuxClang/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = clang -m32
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linuxClang/c++ b/wmake/rules/linuxClang/c++
index 9d1ecb74..b029fbcf 100644
--- a/wmake/rules/linuxClang/c++
+++ b/wmake/rules/linuxClang/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedef -Wno-tautological-undefined-compare -Wno-shift-negative-value
 
-CC          = clang++ -m32
+CC          = clang++ -std=c++0x -m32
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/linuxClang/general b/wmake/rules/linuxClang/general
index fa1eb5b9..e3427c31 100644
--- a/wmake/rules/linuxClang/general
+++ b/wmake/rules/linuxClang/general
@@ -5,5 +5,5 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linuxGcc/c b/wmake/rules/linuxGcc/c
index 81c64cf7..8eddde04 100644
--- a/wmake/rules/linuxGcc/c
+++ b/wmake/rules/linuxGcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc -m32
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linuxGcc/c++ b/wmake/rules/linuxGcc/c++
index 9e2be6d7..c1c34a84 100644
--- a/wmake/rules/linuxGcc/c++
+++ b/wmake/rules/linuxGcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -m32
+CC          = g++ -std=c++0x -m32
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/linuxGcc/general b/wmake/rules/linuxGcc/general
index fa1eb5b9..e3427c31 100644
--- a/wmake/rules/linuxGcc/general
+++ b/wmake/rules/linuxGcc/general
@@ -5,5 +5,5 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linuxGcc45 b/wmake/rules/linuxGcc45
deleted file mode 120000
index e30dec7b..00000000
--- a/wmake/rules/linuxGcc45
+++ /dev/null
@@ -1 +0,0 @@
-linuxGcc
\ No newline at end of file
diff --git a/wmake/rules/linuxGcc46 b/wmake/rules/linuxGcc46
deleted file mode 120000
index e30dec7b..00000000
--- a/wmake/rules/linuxGcc46
+++ /dev/null
@@ -1 +0,0 @@
-linuxGcc
\ No newline at end of file
diff --git a/wmake/rules/linuxGcc47 b/wmake/rules/linuxGcc47
deleted file mode 120000
index e30dec7b..00000000
--- a/wmake/rules/linuxGcc47
+++ /dev/null
@@ -1 +0,0 @@
-linuxGcc
\ No newline at end of file
diff --git a/wmake/rules/linuxGcc48 b/wmake/rules/linuxGcc48
deleted file mode 120000
index e30dec7b..00000000
--- a/wmake/rules/linuxGcc48
+++ /dev/null
@@ -1 +0,0 @@
-linuxGcc
\ No newline at end of file
diff --git a/wmake/rules/linuxGcc49 b/wmake/rules/linuxGcc49
deleted file mode 120000
index e30dec7b..00000000
--- a/wmake/rules/linuxGcc49
+++ /dev/null
@@ -1 +0,0 @@
-linuxGcc
\ No newline at end of file
diff --git a/wmake/rules/linuxGcc51 b/wmake/rules/linuxGcc51
deleted file mode 120000
index e30dec7b..00000000
--- a/wmake/rules/linuxGcc51
+++ /dev/null
@@ -1 +0,0 @@
-linuxGcc
\ No newline at end of file
diff --git a/wmake/rules/linuxIA64Gcc/c b/wmake/rules/linuxIA64Gcc/c
index d7bda5d1..dfae4add 100644
--- a/wmake/rules/linuxIA64Gcc/c
+++ b/wmake/rules/linuxIA64Gcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linuxIA64Gcc/c++ b/wmake/rules/linuxIA64Gcc/c++
index ada728b3..6d152ecd 100644
--- a/wmake/rules/linuxIA64Gcc/c++
+++ b/wmake/rules/linuxIA64Gcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++
+CC          = g++ -std=c++0x
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/linuxIA64Gcc/general b/wmake/rules/linuxIA64Gcc/general
index 480ea1b9..182ee7f9 100644
--- a/wmake/rules/linuxIA64Gcc/general
+++ b/wmake/rules/linuxIA64Gcc/general
@@ -4,6 +4,6 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/X
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/X
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linuxIA64Icc/c b/wmake/rules/linuxIA64Icc/c
index 3952de58..2b19596b 100644
--- a/wmake/rules/linuxIA64Icc/c
+++ b/wmake/rules/linuxIA64Icc/c
@@ -4,7 +4,7 @@ cWARN        =
 
 cc          = icc
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linuxIA64Icc/c++ b/wmake/rules/linuxIA64Icc/c++
index 831d3cc1..a8a9341e 100644
--- a/wmake/rules/linuxIA64Icc/c++
+++ b/wmake/rules/linuxIA64Icc/c++
@@ -6,9 +6,9 @@ c++WARN     = -Wall -Wextra -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invali
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -diag-disable 1224,2026,2305
 
-CC          = icpc
+CC          = icpc -std=c++0x
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository
 
diff --git a/wmake/rules/linuxIA64Icc/general b/wmake/rules/linuxIA64Icc/general
index 9dc446d4..09a38966 100644
--- a/wmake/rules/linuxIA64Icc/general
+++ b/wmake/rules/linuxIA64Icc/general
@@ -4,6 +4,6 @@ GLIBS      =
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/X
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/X
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linuxIcc/c b/wmake/rules/linuxIcc/c
index a6441bcb..c9f75c90 100644
--- a/wmake/rules/linuxIcc/c
+++ b/wmake/rules/linuxIcc/c
@@ -4,7 +4,7 @@ cWARN        =
 
 cc          = icc -gcc-version=400
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -KPIC
 
diff --git a/wmake/rules/linuxIcc/c++ b/wmake/rules/linuxIcc/c++
index 48fdb9f6..88976144 100644
--- a/wmake/rules/linuxIcc/c++
+++ b/wmake/rules/linuxIcc/c++
@@ -8,7 +8,7 @@ c++LESSWARN = -diag-disable 1224,2026,2305
 
 CC          = icpc -std=c++0x -fp-trap=common -fp-model precise
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository
 
diff --git a/wmake/rules/linuxIcc/general b/wmake/rules/linuxIcc/general
index 8a38ddf6..5c94cad4 100644
--- a/wmake/rules/linuxIcc/general
+++ b/wmake/rules/linuxIcc/general
@@ -5,5 +5,5 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linuxPPC64Gcc/c b/wmake/rules/linuxPPC64Gcc/c
index 1fa05787..f9734170 100644
--- a/wmake/rules/linuxPPC64Gcc/c
+++ b/wmake/rules/linuxPPC64Gcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc -m64 -mcpu=power5+
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linuxPPC64Gcc/c++ b/wmake/rules/linuxPPC64Gcc/c++
index e8e862bd..7c330793 100644
--- a/wmake/rules/linuxPPC64Gcc/c++
+++ b/wmake/rules/linuxPPC64Gcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -m64 -mcpu=power5+
+CC          = g++ -std=c++0x -m64 -mcpu=power5+
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/linuxPPC64Gcc/general b/wmake/rules/linuxPPC64Gcc/general
index fa717f96..a590cc29 100644
--- a/wmake/rules/linuxPPC64Gcc/general
+++ b/wmake/rules/linuxPPC64Gcc/general
@@ -5,6 +5,6 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/X
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/X
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/linuxPPC64leGcc/c b/wmake/rules/linuxPPC64leGcc/c
index d9aa80f7..c5e3c73e 100644
--- a/wmake/rules/linuxPPC64leGcc/c
+++ b/wmake/rules/linuxPPC64leGcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc -m64 -mcpu=power8
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/linuxPPC64leGcc/c++ b/wmake/rules/linuxPPC64leGcc/c++
index 284007b7..805f8218 100644
--- a/wmake/rules/linuxPPC64leGcc/c++
+++ b/wmake/rules/linuxPPC64leGcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN = -Wno-old-style-cast -Wno-unused-local-typedefs -Wno-array-bounds
 
-CC          = g++ -m64 -mcpu=power8
+CC          = g++ -std=c++0x -m64 -mcpu=power8
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/linuxPPC64leGcc/general b/wmake/rules/linuxPPC64leGcc/general
index f800e09a..7867cbde 100644
--- a/wmake/rules/linuxPPC64leGcc/general
+++ b/wmake/rules/linuxPPC64leGcc/general
@@ -5,6 +5,6 @@ PROJECT_LIBS = -l$(WM_PROJECT) -ldl
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/X
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/X
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/solaris64Gcc/c b/wmake/rules/solaris64Gcc/c
index 66435ccf..1097b3a5 100644
--- a/wmake/rules/solaris64Gcc/c
+++ b/wmake/rules/solaris64Gcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc -m64
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/solaris64Gcc/c++ b/wmake/rules/solaris64Gcc/c++
index 33c22305..324522f1 100644
--- a/wmake/rules/solaris64Gcc/c++
+++ b/wmake/rules/solaris64Gcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN =
 
-CC          = g++ -m64
+CC          = g++ -std=c++0x -m64
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/solaris64Gcc/general b/wmake/rules/solaris64Gcc/general
index 83b7ebf4..bbf1b69b 100644
--- a/wmake/rules/solaris64Gcc/general
+++ b/wmake/rules/solaris64Gcc/general
@@ -5,6 +5,6 @@ PROJECT_LIBS = -l$(WM_PROJECT) -lnsl -lsocket -L$(FOAM_LIBBIN)/dummy -lPstream
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/X
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/X
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/rules/solarisGcc/c b/wmake/rules/solarisGcc/c
index d7bda5d1..dfae4add 100644
--- a/wmake/rules/solarisGcc/c
+++ b/wmake/rules/solarisGcc/c
@@ -4,7 +4,7 @@ cWARN        = -Wall
 
 cc          = gcc
 
-include $(RULES)/c$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c$(WM_COMPILE_OPTION)
 
 cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC
 
diff --git a/wmake/rules/solarisGcc/c++ b/wmake/rules/solarisGcc/c++
index ec5a6ef3..d8e968fb 100644
--- a/wmake/rules/solarisGcc/c++
+++ b/wmake/rules/solarisGcc/c++
@@ -5,9 +5,9 @@ c++WARN     = -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-para
 # Suppress some warnings for flex++ and CGAL
 c++LESSWARN =
 
-CC          = g++
+CC          = g++ -std=c++0x
 
-include $(RULES)/c++$(WM_COMPILE_OPTION)
+include $(DEFAULT_RULES)/c++$(WM_COMPILE_OPTION)
 
 ptFLAGS     = -DNoRepository -ftemplate-depth-100
 
diff --git a/wmake/rules/solarisGcc/general b/wmake/rules/solarisGcc/general
index cda7ba86..2e6e7b1f 100644
--- a/wmake/rules/solarisGcc/general
+++ b/wmake/rules/solarisGcc/general
@@ -4,6 +4,6 @@ PROJECT_LIBS = -l$(WM_PROJECT) -lnsl -lsocket -L$(FOAM_LIBBIN)/dummy -lPstream
 
 include $(GENERAL_RULES)/standard
 
-include $(RULES)/X
-include $(RULES)/c
-include $(RULES)/c++
+include $(DEFAULT_RULES)/X
+include $(DEFAULT_RULES)/c
+include $(DEFAULT_RULES)/c++
diff --git a/wmake/scripts/AllwmakeParseArguments b/wmake/scripts/AllwmakeParseArguments
index cbd5aa01..c1722e48 100644
--- a/wmake/scripts/AllwmakeParseArguments
+++ b/wmake/scripts/AllwmakeParseArguments
@@ -2,7 +2,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2014-2015 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2014-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -55,6 +55,8 @@ options:
   -j                Compile using all local cores/hyperthreads
   -jN or -j N       Compile using N cores/hyperthreads
   -no-scheduler     Compile without wmakeScheduler
+  -update           Update lnInclude directories, dep files, remove deprecated
+                    files and directories
 USAGE
 
     # Print options for building code documentation
@@ -83,6 +85,9 @@ setWM_NCOMPPROCS()
     if [ -r /proc/cpuinfo ]
     then
         WM_NCOMPPROCS=$(egrep "^processor" /proc/cpuinfo | wc -l)
+    elif [ -x /usr/sbin/sysctl -a -n "$(sysctl -q -n hw.ncpu)" ]
+    then
+        WM_NCOMPPROCS=$(sysctl -n hw.ncpu)
     else
         WM_NCOMPPROCS=1
     fi
@@ -122,6 +127,21 @@ do
         -no-scheduler)
             unset WM_SCHEDULER
             ;;
+        # Meant to be used following a pull, this will:
+        # - remove dep files that depend on deleted files;
+        # - remove stale dep files;
+        # - update lnInclude directories;
+        # - remove empty directories, along with deprecated object directories
+        #   and respective binaries.
+        -update)
+            wrmdep -update
+            wrmdep -old
+            wmakeLnIncludeAll
+            wclean empty
+
+            # Set WM_UPDATE_DEPENDENCIES, so that wmake will pick up on it
+            export WM_UPDATE_DEPENDENCIES=yes
+            ;;
         # Generate documentation
         doc)
             test -n "$genDoc" || usage "invalid option '$1'"
@@ -161,4 +181,4 @@ fi
 unset Script usage setWM_NCOMPPROCS
 
 
-# ----------------------------------------------------------------- end-of-file
+#------------------------------------------------------------------------------
diff --git a/wmake/scripts/makeFiles b/wmake/scripts/makeFiles
index c5b99db9..62f21baf 100755
--- a/wmake/scripts/makeFiles
+++ b/wmake/scripts/makeFiles
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -47,7 +47,7 @@ for dir in `find . -type d -print`
 do
     case "$dir" in
     . | ./Make | ./lnInclude )
-        # skip special directories
+        # Skip special directories
         ;;
     *)
         baseDir=`echo $dir | sed 's%^\./%%'`
diff --git a/wmake/scripts/wmakeFunctions b/wmake/scripts/wmakeFunctions
index c011519b..9828ee4e 100755
--- a/wmake/scripts/wmakeFunctions
+++ b/wmake/scripts/wmakeFunctions
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2015 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2015-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -23,7 +23,7 @@
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
 # Script
-#     wdepFunctions
+#     wmakeFunctions
 #
 # Description
 #     Functions to check wmake environment and find .dep and .o files
@@ -61,9 +61,11 @@ expandPath()
 
 findTarget()
 {
+    expandPath $WM_PROJECT_DIR
+    wmpdir=$exPath
     expandPath $1
 
-    if [ "$exPath" = "$WM_PROJECT_DIR" \
+    if [ "$exPath" = "$wmpdir" \
                    -o "$exPath" = "$HOME" \
                    -o "$exPath" = "/" \
        ]
@@ -79,12 +81,14 @@ findTarget()
 
 findObjectDir()
 {
+    expandPath $WM_PROJECT_DIR
+    wmpdir=$exPath
     expandPath $1
 
-    if echo $exPath | grep "$WM_PROJECT_DIR" > /dev/null
+    if echo $exPath | grep --colour=never "$wmpdir" > /dev/null
     then
         platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
-        objectsDir=$platformPath$(echo $exPath | sed s%$WM_PROJECT_DIR%% )
+        objectsDir=$platformPath$(echo $exPath | sed s%$wmpdir%% )
     else
         path=$exPath
         dir=.
@@ -101,7 +105,9 @@ findObjectDir()
 depToSource()
 {
     sourceFile=$(echo ${depFile%.dep} | \
-        sed -e s%platforms/${WM_OPTIONS}/%% -e s%Make/${WM_OPTIONS}/%% )
+        sed -e s%platforms/${WM_OPTIONS}/%% -e s%Make/${WM_OPTIONS}/%% \
+            -e s%platforms/${WM_OPTIONS}${WM_MPLIB}/%% \
+            -e s%Make/${WM_OPTIONS}${WM_MPLIB}/%% )
 }
 
 #------------------------------------------------------------------------------
diff --git a/wmake/src/Makefile b/wmake/src/Makefile
index 92a2b087..eb7e2734 100644
--- a/wmake/src/Makefile
+++ b/wmake/src/Makefile
@@ -2,7 +2,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #------------------------------------------------------------------------------
 # License
@@ -43,19 +43,24 @@ SHELL      = /bin/sh
 
 
 #------------------------------------------------------------------------------
-# set compilation and dependency building rules
+# Set compilation and dependency building rules
 #------------------------------------------------------------------------------
 
-GENERAL_RULES = $(WM_DIR)/rules/General
-RULES         = $(WM_DIR)/rules/$(WM_ARCH)$(WM_COMPILER)
-WMAKE_BIN     = $(WM_DIR)/platforms/$(WM_ARCH)$(WM_COMPILER)
+# Locally set optimized compilation
+WM_COMPILE_OPTION = Opt
 
-include $(RULES)/general
-include $(RULES)/$(WM_LINK_LANGUAGE)
+V = 1
+ifneq ("$(WM_QUIET_RULES)","")
+V = 0
+endif
 
+GENERAL_RULES   = $(WM_DIR)/rules/General
+include $(GENERAL_RULES)/general
+
+cFLAGS += -Wno-unused-function
 
 #------------------------------------------------------------------------------
-# targets
+# Targets
 #------------------------------------------------------------------------------
 
 all:  $(WMAKE_BIN)/dirToString $(WMAKE_BIN)/wmkdep
@@ -66,13 +71,15 @@ clean:
 
 $(WMAKE_BIN)/dirToString: dirToString.c
 	@mkdir -p $(WMAKE_BIN)
-	$(cc) $(cFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
+	$(call WM_MESSAGE,cc,dirToString.c)
+	$(AT)$(cc) $(cFLAGS) dirToString.c -o $(WMAKE_BIN)/dirToString
 
 
 $(WMAKE_BIN)/wmkdep: wmkdep.l
 	@mkdir -p $(WMAKE_BIN)
-	flex wmkdep.l
-	$(cc) $(cFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
+	$(call WM_MESSAGE,ll,$<)
+	$(AT)flex $<
+	$(AT)$(cc) $(cFLAGS) lex.yy.c -o $(WMAKE_BIN)/wmkdep
 	@rm -f lex.yy.c 2>/dev/null
 
 
diff --git a/wmake/src/wmkdep.l b/wmake/src/wmkdep.l
index cf0be5e0..d5ad12f2 100644
--- a/wmake/src/wmkdep.l
+++ b/wmake/src/wmkdep.l
@@ -3,7 +3,7 @@
  =========                   |
  \\      /   F ield          | OpenFOAM: The Open Source CFD Toolbox
   \\    /    O peration      |
-   \\  /     A nd            | Copyright (C) 2011-2014 OpenFOAM Foundation
+   \\  /     A nd            | Copyright (C) 2011-2016 OpenFOAM Foundation
     \\/      M anipulation   |
 ------------------------------------------------------------------------------
 License
@@ -47,12 +47,13 @@ Usage
 #include <sys/types.h>
 #include <dirent.h>
 #include <errno.h>
+#include <libgen.h>
 
 void nextFile(const char* fileName);
 void importFile(const char* fileName);
 void importDir(const char* dirName);
 
-#   undef yywrap        /* sometimes a macro by default */
+#undef yywrap        /* sometimes a macro by default */
 
 %}
 
@@ -154,7 +155,18 @@ int main(int argc, char* argv[])
     }
 
     sourceFile = strdup(argv[argc-1]);
-    fprintf(stderr, "Making dependency list for source file %s\n", sourceFile);
+/*
+    verbose = (strncmp(argv[1], "-v", 2) == 0);
+    if (verbose)
+    {
+        fprintf(stderr, "Making dependency list for source file %s\n",
+	        sourceFile);
+    }
+    else
+    {
+        fprintf(stderr, " [DEP] %s\n", basename(sourceFile));
+    }
+*/
 
 
     if ((basePos = strrchr(sourceFile, '/')) == NULL)
diff --git a/wmake/wclean b/wmake/wclean
index 28e2621b..996777d0 100755
--- a/wmake/wclean
+++ b/wmake/wclean
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,6 +25,10 @@
 # Script
 #     wclean
 #
+# Usage
+#     wclean [OPTION] [dir]
+#     wclean [OPTION] target [dir [MakeDir]]
+#
 # Description
 #     Clean up the wmake control directory Make/\$WM_OPTIONS and remove the
 #     lnInclude directories generated for libraries.
@@ -32,6 +36,9 @@
 #------------------------------------------------------------------------------
 Script=${0##*/}
 
+# Source the wmake functions
+. ${0%/*}/scripts/wmakeFunctions
+
 usage() {
     while [ "$#" -ge 1 ]; do echo "$1"; shift; done
     cat<<USAGE
@@ -40,17 +47,21 @@ Usage: $Script [OPTION] [dir]
        $Script [OPTION] target [dir [MakeDir]]
 
 options:
-  -s | -silent      ignored - for compatibility with wmake
-  -help             print the usage
+  -s | -silent      Ignored - for compatibility with wmake
+  -help             Print the usage
 
 Clean up the wmake control directory Make/\$WM_OPTIONS and remove the
 lnInclude directories generated for libraries.
 
 The targets correspond to a subset of the 'wmake' special targets:
-  all               all subdirectories, uses any Allwclean or Allclean
+  all               All subdirectories, uses any Allwclean or Allclean
                     files if they exist
   exe | lib | libo | libso
-                    clean Make, any *.dep files and lnInclude directories
+                    Clean Make, any *.dep files and lnInclude directories
+  empty             Remove empty sub-directories for the requested dir.
+                    If executed in the main project directory, it will also
+                    remove deprecated object directories and respective binaries
+                    that refer to no-longer-existing source code.
 
 USAGE
     exit 1
@@ -67,7 +78,7 @@ do
     -h | -help)
         usage
         ;;
-    -s | -silent)    # ignored - for compatibility with wmake
+    -s | -silent)    # Ignored - for compatibility with wmake
         shift
         ;;
     -*)
@@ -81,7 +92,7 @@ done
 
 
 #------------------------------------------------------------------------------
-# check arguments and change to the directory in which to run wclean
+# Check arguments and change to the directory in which to run wclean
 #------------------------------------------------------------------------------
 
 unset dir targetType
@@ -97,10 +108,10 @@ then
         targetType=$1
     fi
 
-    # specified directory name:
+    # Specified directory name:
     [ $# -ge 2 ] && dir=$2
 
-    # specified alternative name for the Make sub-directory:
+    # Specified alternative name for the Make sub-directory:
     [ $# -ge 3 ] && MakeDir=$3
 
     if [ "$dir" ]
@@ -111,22 +122,101 @@ then
         }
     fi
 
-    # provide some feedback
+    # Provide some feedback
     echo "$Script ${dir:-./}"
 fi
 
 
 #------------------------------------------------------------------------------
+# Remove empty sub-directories and exit
+#------------------------------------------------------------------------------
+
+if [ "$targetType" = empty ]
+then
+    # First pass: clean up empty source code directories
+
+    echo "Searching for empty directories..."
+
+    # Get sub-directories avoiding particular directories
+    for dir in $(find . -mindepth 1 -maxdepth 1 \
+                        -type d \( -name .git -prune -o -print \) )
+    do
+        echo "check dir: $dir"
+        find $dir -depth -type d -empty -exec rmdir {} \; -print
+    done
+
+    echo "Search for empty directories complete."
+
+    # Second pass: clean up object directories with WM_PROJECT_DIR that don't
+    # have respective source code folders, along with the respective binaries
+
+    expandPath $PWD
+    if [ "$exPath" = "$WM_PROJECT_DIR" ]
+    then
+        findObjectDir $PWD
+
+        if [ -d $objectsDir ]
+        then
+            echo "Searching for deprecated object directories at: $objectsDir"
+
+            find $objectsDir -name 'variables' -print | \
+            while read variablesFile
+            do
+                # Hack'ish way of getting the original source code path
+                depFile=$(dirname $variablesFile)
+                depToSource $depFile
+
+                # Check if the original source code directory exists
+                if [ ! -r "$sourceFile" ]
+                then
+                    # Delete the respective binary first
+                    binaryFile=$(cat $variablesFile |
+                                grep --colour=never -e '^ *\(EXE\|LIB\) *= *' )
+
+                    # Catch all file extension (o,a,so,?+) for libraries
+                    if echo $binaryFile | grep --colour=never -qe '^ *LIB *= *'
+                    then
+                        binaryFile="${binaryFile}.*"
+                    fi
+
+                    # Isolate path and translate environment variables
+                    binaryFile=$(echo $binaryFile | \
+                                 sed -e 's/^ *\(EXE\|LIB\) *= *//' \
+                                     -e 's/(/{/g' -e 's/)/}/g' )
+
+                    # Expand environment variables for path
+                    binaryFile=$(eval echo $binaryFile)
+
+                    # Verbosely remove binary file
+                    if [ -n "$binaryFile" -a -e "$binaryFile" ]
+                    then
+                        rm -vf $binaryFile 2>/dev/null
+                    fi
+
+                    # Remove the deprecated object directory
+                    rm -rvf $depFile 2>/dev/null
+                fi
+            done
+
+            echo "Search for deprecated object directories complete."
+        fi
+    fi
+
+    exit 0
+fi
+
+
+#------------------------------------------------------------------------------
 # Recurse the directories tree
 #------------------------------------------------------------------------------
 
 if [ "$targetType" = all ]
 then
-    if [ -e Allwclean ]       # consistent with Allwmake
+    if [ -e Allwclean ]       # Consistent with Allwmake
     then
         ./Allwclean
         exit $?
-    elif [ -e Allclean ]      # often used for tutorial cases
+    elif [ -e Allclean ]      # Often used for tutorial cases
     then
         ./Allclean
         exit $?
@@ -134,8 +224,15 @@ then
         # For all the sub-directories containing a 'Make' directory
         for dir in `find . \( -type d -a -name Make \)`
         do
+            dir=${dir%/Make} # Parent directory - trim /Make from the end
             echo $dir
-            $0 ${dir%/Make}   # parent directory - trim /Make from the end
+            # If Allwclean exists execute otherwise wclean
+            if [ -e "$dir/Allwclean" ]
+            then
+                $dir/Allwclean
+            else
+                $0 $dir
+            fi
         done
     fi
 fi
@@ -151,7 +248,7 @@ unset targetType
 if [ -d $MakeDir ]
 then
     objectsDir=$MakeDir/$WM_OPTIONS
-    if echo $PWD | grep "$WM_PROJECT_DIR"
+    if echo $PWD | grep --colour=never "$WM_PROJECT_DIR"
     then
         platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
         objectsDir=$platformPath$(echo $PWD | sed s%$WM_PROJECT_DIR%% )
diff --git a/wmake/wcleanAll b/wmake/wcleanAll
deleted file mode 100755
index f4dfaf5f..00000000
--- a/wmake/wcleanAll
+++ /dev/null
@@ -1,91 +0,0 @@
-#!/bin/sh
-#------------------------------------------------------------------------------
-# =========                 |
-# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
-#  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
-#    \\/     M anipulation  |
-#-------------------------------------------------------------------------------
-# License
-#     This file is part of OpenFOAM.
-#
-#     OpenFOAM is free software: you can redistribute it and/or modify it
-#     under the terms of the GNU General Public License as published by
-#     the Free Software Foundation, either version 3 of the License, or
-#     (at your option) any later version.
-#
-#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
-#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-#     for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
-#
-# Script
-#     wcleanAll
-#
-# Description
-#     search all the directories below the current for the object file
-#     directories of all machines and delete them.
-#
-#------------------------------------------------------------------------------
-Script=${0##*/}
-
-usage() {
-    exec 1>&2
-    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
-    cat<<USAGE
-Usage: $Script
-
-    Remove all object and related files
-
-USAGE
-    exit 1
-}
-
-
-#------------------------------------------------------------------------------
-# Parse arguments and options
-#------------------------------------------------------------------------------
-
-while [ "$#" -gt 0 ]
-do
-    case "$1" in
-    -h | -help)
-        usage
-        ;;
-    *)
-        usage "unknown option/argument: '$*'"
-        ;;
-    esac
-done
-
-[ -d bin -a -d src ] || usage "not in the project top level directory"
-
-
-echo "Removing platforms/sub-directories"
-rm -rf platforms/*
-
-echo "Cleaning Make sub-directories"
-find . -depth \( -name Make -o -name "Make.[A-Za-z]*" \) -type d -print | \
-    xargs -I {} find '{}' -mindepth 1 -maxdepth 1 -type d -print | \
-    xargs rm -rf
-
-echo "Removing lnInclude directories"
-find . -depth -type d \( -name lnInclude \) -exec rm -rf {} \;
-
-echo "Removing misc files"
-find . \( -name exe -o -name log \) -exec rm {} \;
-
-tutorials/Allclean
-
-
-#------------------------------------------------------------------------------
-# Cleanup local variables and functions
-#------------------------------------------------------------------------------
-
-unset Script usage
-
-
-#------------------------------------------------------------------------------
diff --git a/wmake/wcleanLnIncludeAll b/wmake/wcleanLnIncludeAll
index 09eb1f68..a1673d53 100755
--- a/wmake/wcleanLnIncludeAll
+++ b/wmake/wcleanLnIncludeAll
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,10 +25,13 @@
 # Script
 #     wcleanLnIncludeAll
 #
+# Usage
+#     wcleanLnIncludeAll [dir1] .. [dirN]
+#
 # Description
 #     Delete all the lnInclude directories in the tree.
 #
-#------------------------------------------------------------------------------
+##------------------------------------------------------------------------------
 Script=${0##*/}
 
 # Default to the CWD
diff --git a/wmake/wcleanMachine b/wmake/wcleanMachine
deleted file mode 100755
index 04bf7dd0..00000000
--- a/wmake/wcleanMachine
+++ /dev/null
@@ -1,98 +0,0 @@
-#!/bin/sh
-#------------------------------------------------------------------------------
-# =========                 |
-# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
-#  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
-#    \\/     M anipulation  |
-#-------------------------------------------------------------------------------
-# License
-#     This file is part of OpenFOAM.
-#
-#     OpenFOAM is free software: you can redistribute it and/or modify it
-#     under the terms of the GNU General Public License as published by
-#     the Free Software Foundation, either version 3 of the License, or
-#     (at your option) any later version.
-#
-#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
-#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-#     for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
-#
-# Script
-#     wcleanMachine
-#
-# Description
-#     Searches the directory tree starting at the current directory for the
-#     object file directories of the specified machine type(s) and deletes them.
-#     If a machine type is not provided the current machine type is assumed.
-#
-#     Usage: wcleanMachine [ -current ]
-#            wcleanMachine <machineType> [ .. <machineTypeN> ]
-#
-#------------------------------------------------------------------------------
-Script=${0##*/}
-
-usage() {
-    exec 1>&2
-    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
-    cat<<USAGE
-Usage: $Script machineType [... machineTypeN] [ -current ]
-
-  Searches the directory tree starting at the current directory for the
-  object file directories of the specified machine type(s) and deletes them.
-  If either -current or no machine type is specified then the current type
-  is assumed (from $WM_OPTIONS).
-
-USAGE
-    exit 1
-}
-
-# Print help message
-if [ "$1" = "-h" -o "$1" = "-help" ]
-then
-    usage
-fi
-
-# Get the machines from the arguments
-machines="$@"
-
-# If no arguments are provided default to current machine type
-if [ "$#" -lt 1 ]
-then
-    machines="-current"
-fi
-
-# Loop over all the machine types specified and delete the object directories
-for machType in $machines
-do
-    if [ "$machType" = "-current" ]
-    then
-        machType="$WM_OPTIONS"
-        echo "Current machine type: $machType"
-        [ -n "$machType" ] || continue
-    fi
-
-    echo "Cleaning machine type: $machType"
-
-    find . -depth \( -name Make -o -name "Make.[A-Za-z]*" \) -type d -print | \
-        xargs -I {} find '{}' -mindepth 1 -maxdepth 1 \
-              \( -type d -name "*$machType" -o -name "*$machType$WM_MPLIB" \) \
-              -print | xargs rm -rf
-
-    rm -rf platforms/${machType}*
-
-done
-
-
-#------------------------------------------------------------------------------
-# Cleanup local variables and functions
-#------------------------------------------------------------------------------
-
-unset Script machines
-
-
-#------------------------------------------------------------------------------
diff --git a/wmake/wcleanPlatform b/wmake/wcleanPlatform
new file mode 100755
index 00000000..a9d20cee
--- /dev/null
+++ b/wmake/wcleanPlatform
@@ -0,0 +1,127 @@
+#!/bin/sh
+#------------------------------------------------------------------------------
+# =========                 |
+# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
+#  \\    /   O peration     |
+#   \\  /    A nd           | Copyright (C) 2015 OpenFOAM Foundation
+#    \\/     M anipulation  |
+#-------------------------------------------------------------------------------
+# License
+#     This file is part of OpenFOAM.
+#
+#     OpenFOAM is free software: you can redistribute it and/or modify it
+#     under the terms of the GNU General Public License as published by
+#     the Free Software Foundation, either version 3 of the License, or
+#     (at your option) any later version.
+#
+#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
+#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+#     for more details.
+#
+#     You should have received a copy of the GNU General Public License
+#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
+#
+# Script
+#     wcleanPlatform
+#
+# Usage
+#    wcleanPlatform [ -current | -all ]
+#    wcleanPlatform <platform> [ ... <platformN> ]
+#
+# Description
+#     Deletes the specified platforms object files directories from the
+#     the project top-level platforms directory $WM_PROJECT_DIR.
+#
+#     You need to be in the project top-level directory to run this script.
+#
+#     Options
+#         -current: clean the current platform
+#         -all: clean all platforms
+#
+#     If either -current or no platform is specified then the current platform
+#     $WM_OPTIONS is deleted.
+#
+#     If the -all option is specified all platforms and lnInclude directories
+#     are deleted
+#
+#------------------------------------------------------------------------------
+Script=${0##*/}
+
+usage() {
+    exec 1>&2
+    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
+    cat<<USAGE
+Usage: $Script [ -current | -all ]
+       $Script <platform> [ ... <platformN> ]
+
+  Deletes the specified platforms object files directories from the
+  the project top-level platforms directory $WM_PROJECT_DIR.
+
+  You need to be in the project top-level directory to run this script.
+
+  If either -current or no platform is specified then the current platform
+  $WM_OPTIONS is deleted.
+
+  If the -all option is specified all platforms and lnInclude directories
+  are deleted.
+
+USAGE
+    exit 1
+}
+
+# Print help message
+if [ "$1" = "-h" -o "$1" = "-help" ]; then
+    usage
+fi
+
+# Check the script is executed from the project top-level directory
+[ "$PWD" = "$WM_PROJECT_DIR" ] || \
+    usage "Not in the project top-level directory " $WM_PROJECT_DIR
+
+# Get the platforms from the arguments
+platforms="$@"
+
+# If no arguments are provided select the current platform
+if [ "$#" -lt 1 ]; then
+    platforms="-current"
+fi
+
+if [ "$platforms" = "-all" ]; then
+    echo "Removing all platforms/sub-directories"
+    rm -rf platforms/*
+
+    echo "Removing lnInclude directories"
+    find . -depth -type d \( -name lnInclude \) | xargs rm -rf
+
+    tutorials/Allclean
+else
+    # Loop over the platforms specified and delete the object directories
+    for platform in $platforms
+    do
+        if [ "$platform" = "-current" ]
+        then
+            platform="$WM_OPTIONS"
+            echo "Current platform $platform"
+            [ -n "$platform" ] || continue
+        fi
+
+        if [ -d platforms/${platform} ]
+        then
+            echo "Cleaning platform $platform"
+            rm -rf platforms/${platform}*
+        else
+            echo "Platform $platform not built"
+        fi
+    done
+fi
+
+
+#------------------------------------------------------------------------------
+# Cleanup local variables and functions
+#------------------------------------------------------------------------------
+
+unset Script platforms
+
+
+#------------------------------------------------------------------------------
diff --git a/wmake/wdep b/wmake/wdep
index a89f8113..916ef72c 100755
--- a/wmake/wdep
+++ b/wmake/wdep
@@ -23,6 +23,9 @@
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
 # Script
+#     wdep
+#
+# Usage
 #     wdep <file>
 #     cat `wdep <file>`
 #
diff --git a/wmake/wmake b/wmake/wmake
index 9dfad12d..9756386b 100755
--- a/wmake/wmake
+++ b/wmake/wmake
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -49,8 +49,8 @@
 #         wdep -h
 #
 # See also
-#     wmakeLnInclude, wmakeLnIncludeAll, wdep, wrmdep, wrmo and wrmdepold,
-#     wclean, wcleanMachine, wcleanAll, wcleanLnIncludeAll
+#     wmakeLnInclude, wmakeLnIncludeAll, wdep, wrmdep, wrmo,
+#     wclean, wcleanPlatform, wcleanLnIncludeAll
 #
 #------------------------------------------------------------------------------
 Script=${0##*/}
@@ -64,6 +64,7 @@ Usage: $Script [OPTION] [dir]
        $Script [OPTION] target [dir [MakeDir]]
 
 options:
+  -q | -quiet       Be quiet (use more terse output)
   -s | -silent      Run make in 'silent' mode (do not echo commands)
   -a | -all         Run wmake in all subdirectories
   -h | -help        Print the usage
@@ -82,6 +83,7 @@ or a special target:
   libo              Compile statically linked lib (.o)
   libso             Compile dynamically linked lib (.so)
   dep               Compile lnInclude and dependencies only
+  updatedep         Compile dependencies only (in case of broken dependencies)
 
 USAGE
     exit 1
@@ -98,6 +100,9 @@ make="make"
 
 # Default to compiling the local target only
 all=
+# Default to be noisy if WM_QUIET_RULES is not set
+quiet=
+[ -n "$WM_QUIET_RULES" ] && quiet="V=0"
 
 while [ "$#" -gt 0 ]
 do
@@ -105,6 +110,9 @@ do
     -h | -help)
         usage
         ;;
+    -q | -quiet)
+        quiet="V=0"
+        ;;
     -s | -silent)
         make="$make -s"
         shift
@@ -219,6 +227,9 @@ then
         ./Allwmake
         exit $?
     else
+        # Have to keep track of the main exit code for the call to "make"
+        makeExitCode=0
+
         # Find all the sub-directories containing a 'Make' directory
         FOAM_APPS=$(\
                        for d in *; \
@@ -230,15 +241,19 @@ then
         then
             # Compile all applications in sub-directories
             $make ${WM_CONTINUE_ON_ERROR:+-k} \
-                  -f $WM_DIR/MakefileApps \
-                  TARGET="$targetType" FOAM_APPS="$FOAM_APPS"
+                  -f $WM_DIR/makefiles/apps \
+                  TARGET="$targetType" FOAM_APPS="$FOAM_APPS" $quiet
+            makeExitCode=$?
         fi
         # If the current directory contains a 'Make' directory continue
-        # otherwise exit
-        if [ ! -d $MakeDir ]
+        # otherwise exit, or always exit in case of error
+        if [ ! -d $MakeDir -o $makeExitCode -ne 0 ]
         then
-            exit $?
+            exit $makeExitCode
         fi
+
+        # Clean up tracking variable
+        unset makeExitCode
     fi
 fi
 
@@ -310,7 +325,7 @@ fi
 if [ "$targetType" = "" ]
 then
     unset targetType
-    if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+    if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
     then
         targetType=libso
     fi
@@ -323,7 +338,7 @@ fi
 #------------------------------------------------------------------------------
 
 objectsDir=$MakeDir/$WM_OPTIONS
-if echo $PWD | grep "$WM_PROJECT_DIR"
+if echo $PWD | grep --colour=never "$WM_PROJECT_DIR"
 then
     platformPath=$WM_PROJECT_DIR/platforms/${WM_OPTIONS}
     objectsDir=$platformPath$(echo $PWD | sed s%$WM_PROJECT_DIR%% )
@@ -335,10 +350,11 @@ fi
 
     # Pre-build the $WM_OPTIONS/options file
     # which is included when building the $WM_OPTIONS/files file
-    $make -s -f $WM_DIR/MakefileFiles MAKE_DIR=$MakeDir OBJECTS_DIR=$objectsDir\
-          $objectsDir/options
+    $make -s -f $WM_DIR/makefiles/files MAKE_DIR=$MakeDir \
+          OBJECTS_DIR=$objectsDir $quiet $objectsDir/options
 
-    $make -s -f $WM_DIR/MakefileFiles MAKE_DIR=$MakeDir OBJECTS_DIR=$objectsDir
+    $make -s -f $WM_DIR/makefiles/files MAKE_DIR=$MakeDir \
+          OBJECTS_DIR=$objectsDir $quiet
 )
 
 
@@ -361,21 +377,41 @@ fi
 case "$targetType" in
     lib | libo | libso | dep )
         # ... but only if 'LIB' is declared in 'Make/files'
-        if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+        if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
         then
-            $make -s -f $WM_DIR/Makefile MAKE_DIR=$MakeDir \
-                  OBJECTS_DIR=$objectsDir lnInclude
+            $make -s -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
+                  OBJECTS_DIR=$objectsDir $quiet lnInclude
         fi
         ;;
 esac
 
 
 #------------------------------------------------------------------------------
+# When WM_UPDATE_DEPENDENCIES is set, use forced dependency files update
+#------------------------------------------------------------------------------
+
+if [ -n "$WM_UPDATE_DEPENDENCIES" ]
+then
+
+    $make -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
+        OBJECTS_DIR=$objectsDir $quiet updatedep
+    makeExitCode=$?
+
+    if [ $makeExitCode -ne 0 ]
+    then
+        exit $makeExitCode
+    fi
+
+    unset makeExitCode
+fi
+
+
+#------------------------------------------------------------------------------
 # Make the dependency files or object files and link
 #------------------------------------------------------------------------------
 
-exec $make -f $WM_DIR/Makefile MAKE_DIR=$MakeDir OBJECTS_DIR=$objectsDir \
-     $targetType
+exec $make -f $WM_DIR/makefiles/general MAKE_DIR=$MakeDir \
+     OBJECTS_DIR=$objectsDir $quiet $targetType
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/wmakeCheckPwd b/wmake/wmakeCheckPwd
index 75aedba3..f10b6d23 100755
--- a/wmake/wmakeCheckPwd
+++ b/wmake/wmakeCheckPwd
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -23,6 +23,9 @@
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
 # Script
+#     wmakeCheckPwd
+#
+# Usage
 #     wmakeCheckPwd <dir>
 #
 # Description
diff --git a/wmake/wmakeFilesAndOptions b/wmake/wmakeFilesAndOptions
index 022d3ed2..488c211a 100755
--- a/wmake/wmakeFilesAndOptions
+++ b/wmake/wmakeFilesAndOptions
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,12 +25,13 @@
 # Script
 #     wmakeFilesAndOptions
 #
+# Usage
+#     wmakeFilesAndOptions
+#
 # Description
 #     Scan current directory for directories and source files
 #     and construct Make/files and Make/options
 #
-#     Usage : wmakeFilesAndOptions
-#
 #------------------------------------------------------------------------------
 Script=${0##*/}
 
@@ -55,7 +56,7 @@ USAGE
 while [ "$#" -gt 0 ]
 do
     case "$1" in
-    -h | -help)   # provide immediate help
+    -h | -help)   # Provide immediate help
         usage
         ;;
     -*)
diff --git a/wmake/wmakeLnInclude b/wmake/wmakeLnInclude
index b68c31a6..37532885 100755
--- a/wmake/wmakeLnInclude
+++ b/wmake/wmakeLnInclude
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,17 +25,17 @@
 # Script
 #     wmakeLnInclude
 #
+# Usage
+#     wmakeLnInclude [-u | -update] [-s | -silent] <dir>
+#
 # Description
 #     Link all the source files in the <dir> directory into <dir>/lnInclude
 #
-#     Usage: wmakeLnInclude [-f] <dir>
-#
 #     The desired source files:
 #         *.C *.H *.h *.cpp *.cxx *.hpp *.hxx
 #
 #     Avoid
 #         *.c (C source)
-#         .#* (cvs recovered files)
 #
 #------------------------------------------------------------------------------
 Script=${0##*/}
@@ -48,14 +48,14 @@ usage() {
 Usage: $Script [OPTION] dir
 
 options:
-  -f | -force       force update
+  -u | -update      update
   -s | -silent      use 'silent' mode (do not echo command)
   -help             print the usage
 
     Link all the source files in the <dir> into <dir>/lnInclude
 
 Note
-    The '-f' option forces an update when the lnInclude directory already exists
+    The '-u' option forces an update when the lnInclude directory already exists
     and changes the default linking from 'ln -s' to 'ln -sf'.
 
 USAGE
@@ -73,16 +73,16 @@ unset findOpt
 # Default 'ln' option
 lnOpt="-s"
 
-unset forceUpdate silentOpt
+unset update silentOpt
 
 while [ "$#" -gt 0 ]
 do
     case "$1" in
-    -h | -help)   # provide immediate help
+    -h | -help)   # Provide immediate help
         usage
         ;;
-    -f | -force)
-        forceUpdate=true
+    -u | -update)
+        update=true
         lnOpt="-sf"
         shift
         ;;
@@ -126,7 +126,7 @@ incDir=$baseDir/lnInclude
 
 if [ -d $incDir ]
 then
-    [ "$forceUpdate" = true ] || {
+    [ "$update" = true ] || {
         # echo "$Script error: include directory $incDir already exists" 1>&2
         exit 0
     }
@@ -143,14 +143,19 @@ cd $incDir || exit 1
 
 if [ "$silentOpt" != true ]
 then
-    echo "$Script: linking include files to $incDir" 1>&2
+    if [ -n "$WM_QUIET_RULES" ]
+    then
+        echo "  LN	$incDir" 1>&2
+    else
+        echo "$Script: linking include files to $incDir" 1>&2
+    fi
 fi
 
 
 #------------------------------------------------------------------------------
 # Remove any broken links first (this helps when file locations have moved)
 #------------------------------------------------------------------------------
-find -L . -type l -exec rm {} \;
+find -L . -type l | xargs rm -f
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/wmakeLnIncludeAll b/wmake/wmakeLnIncludeAll
index 0ecaf9ec..12062ac5 100755
--- a/wmake/wmakeLnIncludeAll
+++ b/wmake/wmakeLnIncludeAll
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,9 +25,12 @@
 # Script
 #     wmakeLnIncludeAll
 #
+# Usage
+#     wmakeLnIncludeAll [dir1 .. dirN]
+#
 # Description
 #     Find directories with a 'Make/files' that contains a 'LIB =' directive
-#     and execute 'wmakeLnInclude -f' for each one
+#     and execute 'wmakeLnInclude -update' for each one
 #
 #------------------------------------------------------------------------------
 Script=${0##*/}
@@ -39,7 +42,7 @@ usage() {
 Usage: $Script [dir1 .. dirN]
 
     Find directories with a 'Make/files' that contains a 'LIB =' directive
-    and execute 'wmakeLnInclude -f' for each one
+    and execute 'wmakeLnInclude -update' for each one
 
 USAGE
     exit 1
@@ -55,7 +58,7 @@ findName=lnInclude
 while [ "$#" -gt 0 ]
 do
     case "$1" in
-    -h | -help)   # provide immediate help
+    -h | -help)   # Provide immediate help
         usage
         ;;
     -*)
@@ -75,10 +78,10 @@ for checkDir
 do
     if [ -d $checkDir ]
     then
-        echo "searching: $checkDir for 'Make' directories"
+        echo "Searching: $checkDir for 'Make' directories"
         echo "---------"
     else
-        echo "skipping non-dir: $checkDir"
+        echo "Skipping non-dir: $checkDir"
         echo "----------------"
         continue
     fi
@@ -88,9 +91,9 @@ do
         topDir=${MakeDir%/Make}    # trim /Make from the end
         if [ -d "$topDir" ]
         then
-            if grep -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
+            if grep --colour=never -e '^ *LIB *=' "$MakeDir/files" >/dev/null 2>&1
             then
-                wmakeLnInclude -f $topDir
+                wmakeLnInclude -update $topDir
             elif [ -d "$topDir/lnInclude" ]
             then
                 echo "removing spurious $topDir/lnInclude"
diff --git a/wmake/wmakePrintBuild b/wmake/wmakePrintBuild
index cc554513..c23e63d3 100755
--- a/wmake/wmakePrintBuild
+++ b/wmake/wmakePrintBuild
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,6 +25,9 @@
 # Script
 #     wmakePrintBuild
 #
+# Usage
+#     wmakePrintBuild [OPTION]
+#
 # Description
 #     Print the version used when building the project
 #
diff --git a/wmake/wmakeScheduler b/wmake/wmakeScheduler
index 7b3d51e9..a927af7a 100755
--- a/wmake/wmakeScheduler
+++ b/wmake/wmakeScheduler
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,13 +25,21 @@
 # Script
 #     wmakeScheduler
 #
+# Usage
+#     wmakeScheduler COMMAND
+#         run 'COMMAND' on one of the slots listed in WM_HOSTS
+#
+#     wmakeScheduler -count
+#         count the total number of slots available in WM_HOSTS
+#         eg,  export WM_NCOMPPROCS=$(wmakeScheduler -count)
+#
 # Description
 #     Scheduler for network distributed compilations using wmake.
 #     - WM_HOSTS contains a list of hosts and number of concurrent processes
 #     eg,
-#        export WM_HOSTS="hostA:1 hostB:2 hostC:1"
+#         export WM_HOSTS="hostA:1 hostB:2 hostC:1"
 #     - WM_COLOURS contains a list of colours to cycle through
-#        export WM_COLOURS="black blue green cyan red magenta yellow"
+#         export WM_COLOURS="black blue green cyan red magenta yellow"
 #
 #     Sources the relevant cshrc/bashrc if not set.
 #
@@ -39,14 +47,6 @@
 #     before calling this routine.
 #     FOAM_INST_DIR may possibly have been set (to find installation)
 #
-# Usage
-#     wmakeScheduler COMMAND
-#         run 'COMMAND' on one of the slots listed in WM_HOSTS
-#
-#     wmakeScheduler -count
-#         count the total number of slots available in WM_HOSTS
-#         eg,  export WM_NCOMPPROCS=$(wmakeScheduler -count)
-#
 #-------------------------------------------------------------------------------
 Script=${0##*/}
 
@@ -108,8 +108,8 @@ fi
 
 # Construct test string for remote execution.
 # Source WM_PROJECT settings if WM_PROJECT environment not set.
-# attempt to preserve the installation directory 'FOAM_INST_DIR'
-# use FOAM_SETTINGS to pass command-line settings
+# Attempt to preserve the installation directory 'FOAM_INST_DIR'
+# Use FOAM_SETTINGS to pass command-line settings
 case $sourceFoam in
 */bashrc)
     if [ "$FOAM_INST_DIR" ]
diff --git a/wmake/wmakeSchedulerUptime b/wmake/wmakeSchedulerUptime
index eb52f406..6239f9e6 100755
--- a/wmake/wmakeSchedulerUptime
+++ b/wmake/wmakeSchedulerUptime
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2014 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2011-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -25,6 +25,14 @@
 # Script
 #     wmakeSchedulerUptime
 #
+# Usage
+#     wmakeSchedulerUptime COMMAND
+#         run 'COMMAND' on one of the slots listed in WM_HOSTS
+#
+#     wmakeScheduler -count
+#         count the total number of slots available in WM_HOSTS
+#         eg,  export WM_NCOMPPROCS=$(wmakeScheduler -count)
+#
 # Description
 #     Scheduler for network distributed compilations using wmake.
 #     - WM_HOSTS contains a list of hosts and number of concurrent processes
@@ -39,14 +47,6 @@
 #     before calling this routine.
 #     FOAM_INST_DIR may possibly have been set (to find installation)
 #
-# Usage
-#     wmakeSchedulerUptime COMMAND
-#         run 'COMMAND' on one of the slots listed in WM_HOSTS
-#
-#     wmakeScheduler -count
-#         count the total number of slots available in WM_HOSTS
-#         eg,  export WM_NCOMPPROCS=$(wmakeScheduler -count)
-#
 #-------------------------------------------------------------------------------
 Script=${0##*/}
 
@@ -64,7 +64,7 @@ then
         for slotGroup in $WM_HOSTS
         do
             n=${slotGroup##*:}
-            [ "$n" = "${slotGroup%%:*}" ] && n=1  # missing ':'
+            [ "$n" = "${slotGroup%%:*}" ] && n=1  # Missing ':'
             echo "+ ${n:-1}"
         done
     )
@@ -76,7 +76,7 @@ fi
 # !! Assumes remote computer running same shell and startup files
 # in same location
 
-sourceFoam=false    # fallback command
+sourceFoam=false    # Fallback command
 case $SHELL in
 */csh | */tcsh )    # [t]csh vs bash|ksh|sh
     shellRc=cshrc
@@ -107,8 +107,8 @@ fi
 
 # Construct test string for remote execution.
 # Source WM_PROJECT settings if WM_PROJECT environment not set.
-# attempt to preserve the installation directory 'FOAM_INST_DIR'
-# use FOAM_SETTINGS to pass command-line settings
+# Attempt to preserve the installation directory 'FOAM_INST_DIR'
+# Use FOAM_SETTINGS to pass command-line settings
 case $sourceFoam in
 */bashrc)
     if [ "$FOAM_INST_DIR" ]
@@ -125,9 +125,9 @@ case $sourceFoam in
     ;;
 esac
 
-# quote double-quotes for remote command line
+# Quote double-quotes for remote command line
 rcmd=$(echo $* | sed -e s/\"/\'\"\'/g)
-## the same, without forking (not ksh, maybe not /bin/sh either)
+# The same, without forking (not ksh, maybe not /bin/sh either)
 # rcmd=$(while [ "$#" -gt 0 ]; do echo "${1//\"/'\"'}"; shift; done)
 
 
@@ -147,7 +147,7 @@ set -o pipefail
 
 
 #
-# colour output by argument 1
+# Colour output by argument 1
 #
 colourPipe()
 {
@@ -168,7 +168,7 @@ colourPipe()
 
 
 
-# parse options
+# Parse options
 nprocs=1
 while [ "$#" -gt 0 ]
 do
@@ -194,10 +194,10 @@ while :
 do
     for slotGroup in $WM_HOSTS
     do
-        # split 'host:N', but catch 'host:' and 'host' too
+        # Split 'host:N', but catch 'host:' and 'host' too
         host=${slotGroup%%:*}
         n=${slotGroup##*:}
-        [ "$n" = "$host" ] && n=1  # missing ':'
+        [ "$n" = "$host" ] && n=1  # Missing ':'
         : ${n:=1}
 
 
@@ -249,7 +249,6 @@ do
     done
 
     # Did not find any free machines. Rest a bit.
-    #echo "$Script: Too much load. Waiting"
     sleep 1
 done
 
diff --git a/wmake/wrmdep b/wmake/wrmdep
index 32c14546..8fab8cf8 100755
--- a/wmake/wrmdep
+++ b/wmake/wrmdep
@@ -3,7 +3,7 @@
 # =========                 |
 # \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
 #  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2015 OpenFOAM Foundation
+#   \\  /    A nd           | Copyright (C) 2015-2016 OpenFOAM Foundation
 #    \\/     M anipulation  |
 #-------------------------------------------------------------------------------
 # License
@@ -22,15 +22,34 @@
 #     You should have received a copy of the GNU General Public License
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
-# Script
+# Script wrmdep
+#
+# Usage
 #     wrmdep [-a | -all | all] [file]
+#     wrmdep [-o | -old] [dir1 .. dirN]
+#     wrmdep -update
 #
 # Description
+#     This is a catch-all script for pruning .dep files, depending on the
+#     provided arguments.
+#
+#     [-a | -all | all] [file]:
 #     Remove all .dep files from the object directory tree corresponding to the
 #     current source derectory or remove only the .dep files referring to the
 #     optionally specified [file].  With the -a/-all/all option the .dep files
 #     are removed for all platforms rather than just the current platform.
 #
+#     [-o | -old] [dir1 .. dirN]:
+#     Remove *.dep files that are without a corresponding .C or .L source file.
+#     This occurs when a directory has been moved.
+#         - prints the questionable directory and *.dep file
+#
+#     -update:
+#     Search all the "src" and "application" directories of the project for
+#     broken symbolic links for source code files and then remove all .dep
+#     files that relate to files that no longer exist.
+#     Must be executed in the project top-level directory: $WM_PROJECT_DIR.
+#
 #------------------------------------------------------------------------------
 Script=${0##*/}
 
@@ -41,11 +60,28 @@ usage() {
     exec 1>&2
     while [ "$#" -ge 1 ]; do echo "$1"; shift; done
     cat<<USAGE
-Usage: $Script [-a | -all | all] [file]
+Usage:
+
+    $Script [-a | -all | all] [file]
+
+        Remove all .dep files or remove .dep files referring to <file>
+        With the -a/-all/all option the .dep files are removed for all
+        platform rather than just the current platform.
+
+    $Script [-o | -old] [dir1 .. dirN]
+
+        Remove *.dep files that are without a corresponding .C or .L file.
+        This occurs when a directory has been moved.
+          - prints the questionable directory and *.dep file
+
+        Note: to remove empty directories, run: wclean empty
 
-Remove all .dep files or remove .dep files referring to <file>
-With the -a/-all/all option the .dep files are removed for all platform
-rather than just the current platform.
+    $Script -update
+
+        Search all the "src" and "application" directories of the project for
+        broken symbolic links for source code files and then remove all .dep
+        files that relate to files that no longer exist.
+        Must be executed in the project top-level directory: $WM_PROJECT_DIR
 
 USAGE
     exit 1
@@ -56,6 +92,9 @@ USAGE
 # Parse arguments and options
 #------------------------------------------------------------------------------
 
+# Default is for removing all .dep files in the current directory
+rmdepMode="files"
+
 # Default to processing only the current platform
 all=
 
@@ -71,6 +110,14 @@ do
         all="all"
         shift
         ;;
+    -o | -old)
+        rmdepMode="oldFolders"
+        shift
+        ;;
+    -update)
+        rmdepMode="updateMode"
+        shift
+        ;;
     -*)
        usage "unknown option: '$*'"
        ;;
@@ -84,33 +131,100 @@ done
 checkEnv
 
 
-#------------------------------------------------------------------------------
-# Remove the selected .dep files from the object tree
-#------------------------------------------------------------------------------
+case "$rmdepMode" in
+files)
+
+    #-------------------------------------------------------------------------
+    # Remove the selected .dep files from the object tree
+    #-------------------------------------------------------------------------
+
+    findObjectDir .
+
+    # With the -a/-all option replace the current platform with a wildcard
+    if [ "$all" = "all" ]
+    then
+        objectsDir=$(echo $objectsDir | sed s%$WM_OPTIONS%*% )
+    fi
+
+    if [ "$#" -eq 0 ]
+    then
+        echo "removing all .dep files ..."
+        find $objectsDir -name '*.dep' -print | xargs -t rm 2>/dev/null
+    else
+        echo "removing .dep files referring to $1 ..."
+        find $objectsDir -name '*.dep' -exec grep --colour=never -q "$1" '{}' \; \
+             -exec rm '{}' \; -print
+    fi
+
+    ;;
+
+oldFolders)
+
+    # Default is the current directory
+    [ "$#" -gt 0 ] || set -- .
+
+    for checkDir
+    do
+        findObjectDir $checkDir
+
+        if [ -d $objectsDir ]
+        then
+            echo "Searching: $objectsDir"
+        else
+            echo "Skipping non-dir: $objectsDir"
+            continue
+        fi
+
+        find $objectsDir -name '*.dep' -print | while read depFile
+        do
+            depToSource $depFile
+
+            # Check C++ or Flex source file exists
+            if [ ! -r "$sourceFile" ];
+            then
+                echo "rm $depFile"
+                rm -f $depFile 2>/dev/null
+            fi
+        done
+    done
+
+    ;;
+
+updateMode)
+
+    [ "$PWD" = "$WM_PROJECT_DIR" ] \
+        || usage "Not in the project top-level directory"
+
+    echo "Purging all dep files that relate to files that no longer exist..."
+    fileNameList=$(find -L src applications -name '*.[CHL]' -type l)
+
+    for filePathAndName in $fileNameList
+    do
+        fileName=$(basename $filePathAndName)
+        echo "Purging from 'src': $fileName"
+        cd src
+        $Script -a $fileName
+
+        echo "Purging from 'applications': $fileName"
+        cd ../applications
+        $Script -a $fileName
+
+        cd ..
 
-findObjectDir .
+        # Just in case, remove the symbolic link as the last step
+        unlink $filePathAndName
+    done
 
-# With the -a/-all option replace the current platform with a wildcard
-if [ "$all" = "all" ]
-then
-    objectsDir=$(echo $objectsDir | sed s%$WM_OPTIONS%*% )
-fi
+    ;;
 
-if [ "$#" -eq 0 ]
-then
-    echo "removing all .dep files ..."
-    find $objectsDir -name '*.dep' -print | xargs -t rm 2>/dev/null
-else
-    echo "removing .dep files referring to $1 ..."
-    find $objectsDir -name '*.dep' -exec grep "$1" '{}' \; -exec rm '{}' \;
-fi
+esac
 
 
 #------------------------------------------------------------------------------
 # Cleanup local variables and functions
 #------------------------------------------------------------------------------
 
-unset Script usage
+unset Script usage rmdepMode all
 
 
 #------------------------------------------------------------------------------
diff --git a/wmake/wrmdepold b/wmake/wrmdepold
deleted file mode 100755
index 61cdc92b..00000000
--- a/wmake/wrmdepold
+++ /dev/null
@@ -1,133 +0,0 @@
-#!/bin/sh
-#------------------------------------------------------------------------------
-# =========                 |
-# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
-#  \\    /   O peration     |
-#   \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
-#    \\/     M anipulation  |
-#-------------------------------------------------------------------------------
-# License
-#     This file is part of OpenFOAM.
-#
-#     OpenFOAM is free software: you can redistribute it and/or modify it
-#     under the terms of the GNU General Public License as published by
-#     the Free Software Foundation, either version 3 of the License, or
-#     (at your option) any later version.
-#
-#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
-#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-#     for more details.
-#
-#     You should have received a copy of the GNU General Public License
-#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
-#
-# Script
-#     wrmdepold
-#
-# Description
-#     Usage: wrmdepold [dir1 .. dirN]
-#
-#     Remove *.dep files that are without a corresponding .C or .L source file.
-#     This often occurs when a directory has been moved.
-#         - print questionable directory and the *.dep file
-#         - optionally remove empty directories
-#------------------------------------------------------------------------------
-Script=${0##*/}
-
-# Source the wmake functions
-. ${0%/*}/scripts/wmakeFunctions
-
-usage() {
-    exec 1>&2
-    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
-    cat<<USAGE
-Usage: $Script [OPTION] [dir1 .. dirN]
-options:
-  -rmdir      find and remove empty directories (recursively)
-
-Remove *.dep files that are without a corresponding .C or .L file.
-This often occurs when a directory has been moved.
-  - print questionable directory and file
-  - optionally remove empty directories
-
-USAGE
-    exit 1
-}
-
-
-#------------------------------------------------------------------------------
-# Parse arguments and options
-#------------------------------------------------------------------------------
-
-unset optRmdir
-
-# parse options
-while [ "$#" -gt 0 ]
-do
-    case "$1" in
-    -h | -help)
-        usage
-        ;;
-    -rmdir)
-        optRmdir=true
-        shift
-        ;;
-    -*)
-       usage "unknown option: '$*'"
-       ;;
-    *)
-       break
-       ;;
-    esac
-done
-
-# Check environment variables
-checkEnv
-
-
-#------------------------------------------------------------------------------
-#
-#------------------------------------------------------------------------------
-
-# Default is the current directory
-[ "$#" -gt 0 ] || set -- .
-
-for checkDir
-do
-    findObjectDir $checkDir
-
-    if [ -d $objectsDir ]
-    then
-        echo "Searching: $objectsDir"
-    else
-        echo "Skipping non-dir: $objectsDir"
-        continue
-    fi
-
-    find $objectsDir -name '*.dep' -print | while read depFile
-    do
-        depToSource $depFile
-
-        # Check C++ or Flex source file exists
-        if [ ! -r "$sourceFile" ];
-        then
-            echo "rm $depFile"
-            rm -f $depFile 2>/dev/null
-        fi
-    done
-
-    # Remove empty dirs
-    if [ "$optRmdir" ]
-    then
-        # get subdirs ourselves so we can avoid particular directories
-        for dir in $(find $objectsDir -mindepth 1 -maxdepth 1 -type d \( -name .git -prune -o -print \) )
-        do
-            echo "check dir: $dir"
-            find $dir -depth -type d -empty -exec rmdir {} \; -print
-        done
-    fi
-done
-
-
-# -----------------------------------------------------------------------------
diff --git a/wmake/wrmo b/wmake/wrmo
index 1fb5cc40..b7cab9bf 100755
--- a/wmake/wrmo
+++ b/wmake/wrmo
@@ -23,6 +23,9 @@
 #     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
 #
 # Script
+#     wrmo
+#
+# Usage
 #     wrmo [-a | -all | all] [file]
 #
 # Description
